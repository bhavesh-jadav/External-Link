{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"null\"","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/formatting.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/arrayExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/double.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/enumExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/logicExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/regExpExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/extensions/stringExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/numericSequence/numericSequenceRange.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/numericSequence/numericSequence.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/pixelConverter.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/prototype.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/valueType.js","webpack:///./node_modules/powerbi-visuals-utils-typeutils/lib/jsonComparer.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/stringExtensions.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/formattingService/iFormattingService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/date/dateFormatter.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/number/numberFormatter.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/formattingService/formattingService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/displayUnitSystem/displayUnitSystem.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/displayUnitSystem/displayUnitSystemType.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/date/dateUtils.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/date/dateTimeSequence.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataRoleHelper.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/converterHelper.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewObject.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewObjects.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewTransform.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/validationHelper.js","webpack:///./node_modules/powerbi-visuals-utils-dataviewutils/lib/dataViewObjectsParser.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/valueFormatter.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/wordBreaker.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/storageService/ephemeralStorageService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/textMeasurementService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/font/familyInfo.js","webpack:///./node_modules/powerbi-visuals-utils-formattingutils/lib/font/family.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./src/settings.ts","webpack:///./src/visual.ts","webpack:///./.tmp/precompile/visualPlugin.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","indexOf","slice","space","local","creator","fullname","this","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","Array","length","EnterNode","parent","datum","_next","_parent","__data__","constructor","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","enter","exit","data","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending","a","b","NaN","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","trim","split","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","push","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","j","type","removeEventListener","capture","onAdd","wrap","addEventListener","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","root","Selection","groups","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","filter","match","size","each","x","constant","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","map","merge","selection","groups0","groups1","m0","m1","Math","min","merges","group0","group1","order","sort","compare","compareNode","sortgroups","sortgroup","callback","arguments","apply","nodes","empty","attr","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","priority","removeProperty","setProperty","classed","text","html","append","insert","before","clone","deep","typenames","parseTypenames","dispatch","src_selection","src_select","nextId","Local","_","toString","id","set","regexCache","ArrayExtensions","unionSingle","target","take","source","count","result","extendWithId","array","extended","withId","findWithId","extendWithName","withName","findItemWithName","indexWithName","len","isSorted","values","compareFunction","ilen","intersect","other","diff","distinct","union","range","startIndex","endIndex","copy","sequenceEqual","left","right","comparison","emptyToNull","predicate","rotate","offset","rotated","createWithId","item","createWithName","insertSorted","unshift","removeFirst","clear","pop","isUndefinedOrEmpty","swap","firstIndex","secondIndex","temp","isInArray","lookupItem","compareCallback","some","isArrayOrInheritedArray","obj","nextPrototype","isArray","getPrototypeOf","isSortedNumeric","descendingOrder","ensureArray","MIN_VALUE","Number","MAX_VALUE","MIN_EXP","MAX_EXP","EPSILON","DEFAULT_PRECISION","DEFAULT_PRECISION_IN_DECIMAL_DIGITS","LOG_E_10","log","POSITIVE_POWERS","NEGATIVE_POWERS","pow10","exp","Infinity","log10","val","floorWithPrecision","getPrecision","decimalDigits","undefined","isFinite","abs","max","equalWithPrecision","y","precision","detectPrecision","lessWithPrecision","lessOrEqualWithPrecision","greaterWithPrecision","greaterOrEqualWithPrecision","roundX","round","floor","ceilWithPrecision","ceil","floorToPrecision","ceilToPrecision","roundToPrecision","parseFloat","toPrecision","ensureInRange","project","fromMin","fromSize","toMin","toSize","removeDecimalNoise","isInteger","toIncrement","increment","calculatedPrecision","enumExtensions_EnumExtensions","LogicExtensions","RegExpExtensions","stringExtensions_StringExtensions","ValueUtil","EnumExtensions","hasFlag","flag","setFlag","resetFlag","enumType","getBitCount","bitCount","shiftingValue","XOR","run","regex","start","lastIndex","exec","StringExtensions","endsWith","str","suffix","numericSequenceRange_NumericSequenceRange","[object Object]","includeZero","hasFixedMin","hasFixedMax","step","forcedSingleStop","DEFAULT_MAX","oldCount","newCount","deltaCount","dataMin","dataMax","fixedMin","fixedMax","hasDataRange","hasValue","MIN_SUPPORTED_DOUBLE","MAX_SUPPORTED_DOUBLE","_ensureIncludeZero","_ensureNotEmpty","_ensureDirection","calculate","calculateFixedRange","numericSequence_NumericSequence","expectedCount","maxAllowedMargin","minPower","useZeroRefPoint","steps","MIN_COUNT","MAX_COUNT","interval","getSize","intervalOffset","sequence","canExtendMin","canExtendMax","stepExp","power","roundMin","roundMax","roundRange","shrinkByStep","dexp","e","stepsCount","stepPower","trimMinMax","maxCount","stepCount","minMargin","maxMargin","PxPtRatio","PixelString","pixelConverter_toString","px","fromPoint","pt","fromPointToPixel","toPoint","prototype_inherit","extension","wrapCtor","inherited","inheritSingle","proto","overrideArray","override","overwritten","valueType_ValueType","underlyingType","category","variantTypes","ExtendedType","Temporal","temporalType","TemporalType","Geography","geographyType","GeographyType","Miscellaneous","miscType","MiscellaneousType","Formatting","formattingType","FormattingType","Enumeration","Scripting","scriptingType","ScriptType","Variant","variationTypes","descriptor","fromExtendedType","Text","integer","Integer","numeric","Double","bool","Boolean","dateTime","DateTime","duration","Duration","binary","Binary","None","scripting","ScriptSource","enumeration","fromEnum","temporal","year","Years_Integer","quarter","Quarters_Integer","month","Months_Integer","day","DayOfMonth_Integer","paddedDateTableDate","PaddedDateTableDates","geography","address","Address","city","City","continent","Continent","country","Country","county","County","region","Region","postalCode","PostalCode_Text","stateOrProvince","StateOrProvince","place","Place","latitude","Latitude_Double","longitude","Longitude_Double","misc","image","Image","imageUrl","ImageUrl","webUrl","WebUrl","barcode","Barcode_Text","formatting","color","Color","formatString","FormatString","alignment","Alignment","labelDisplayUnits","LabelDisplayUnits","fontSize","FontSize","labelDensity","LabelDensity","extendedType","operations","searchEnabled","SearchEnabled","variant","variantType","fromDescriptor","fromVariant","Null","primitiveType","getPrimitiveType","PrimitiveTypeWithFlagsMask","isPrimitiveType","ExtendedTypeStrings","delimIdx","lastIndexOf","baseCategory","getCategoryFromExtendedType","fromPrimitiveTypeAndCategory","PrimitiveType","typeCache","primitiveString","PrimitiveTypeStrings","categoryType","categoryPrimitiveType","toExtendedType","typeDescriptor","otherTypes","valueType","otherType","isCompatibleFrom","otherPrimitiveType","JSON","stringify","equals","categoryString","Numeric","Date","Time","matchesExtendedTypeWithAnyPrimitive","Years","Quarters","Months","DayOfMonth","PostalCode","Latitude","Longitude","Barcode","PrimitiveTypeMask","PrimitiveTypeFlagsExcludedMask","HtmlTagRegex","RegExp","stringExtensions_format","args","isNullOrUndefinedOrWhiteSpaceString","reg","replace","equalIgnoreCase","normalizeCase","startsWithIgnoreCase","normalizedSearchString","startsWith","substring","containsIgnoreCase","toUpperCase","stringToArrayBuffer","isNullOrEmpty","buffer","ArrayBuffer","bufferView","Uint8Array","strLen","charCodeAt","containsWhitespace","test","isWhitespace","trimTrailingWhitespace","trimWhitespace","getLengthDifference","repeat","char","replaceAll","textToFind","textToReplace","pattern","escapeStringForRegex","ensureUniqueNames","usedNames","uniqueNames","uniqueName","counter","findUniqueName","baseName","constructNameFromList","separator","maxCharacter","exceeded","labels","separatorWithSpace","normalizeFileName","fileName","stringifyAsPrettyJSON","deriveClsCompliantName","input","fallback","stripTagDelimiters","DateTimeUnit","DateFormatter","String","date","mask","utc","dF","isNaN","SyntaxError","masks","D","M","H","L","getTimezoneOffset","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","MMM","yy","yyyy","h","hh","HH","MM","ss","tt","T","TT","Z","timezone","timezoneClip","S","token","$0","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","NumberFormatter","number_","formatInfo","groupSizes","curSize","curGroupIndex","factor","pow","rounded","numberString","exponent","parseInt","zeroPad","substr","stringIndex","sep","ret","format","culture","toLocaleString","nf","numberFormat","current","charAt","currency","percent","decimals","expandNumber","patternParts","ar","symbl","formattingEncoder","formattingService_RegExpExtensions","regExpExtensions_namespaceObject","literalMatcher","removeLiterals","preserveLiterals","literals","literal","literalOffset","fromCharCode","restoreLiterals","quoted","firstChar","IndexedTokensRegex","ZeroPlaceholder","DigitPlaceholder","ExponentialFormatChar","NumericPlaceholderRegex","formattingService_Globalize","enUSCulture","Intl","DateTimeFormat","formatNumber","negativeInfinity","positiveInfinity",",",".","+","-","symbol","calendar",":","days","namesAbbr","namesShort","months","AM","PM","eras","firstDay","patterns","f","F","Y","calendars","standard","formattingService_dateTimeFormat","formattingService_numberFormat","dateTimeFormat","_currentCachedFormat","_currentCachedProcessedFormat","formatDateStandard","ensurePatterns","output","cultureName","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","findDateFormat","getCurrentCulture","canFormat","isStandard","milliseconds","getMilliseconds","fixDateTimeFormat","processCustomDateTimeFormat","dictionary","timeSeparator","localize","formatDateCustom","NumericalPlaceHolderRegex","ScientificFormatRegex","StandardFormatRegex","TrailingZerosRegex","DecimalFormatRegex","NumericFormatRegex","LastNumericPlaceholderRegex","DecimalFormatCharacter","getNumericFormatFromComponent","addDecimalsToFormatComponent","trailingZeros","decimalPlaceholders","beforeDecimal","formatDecimal","afterDecimal","decimalChange","hasFormatComponents","NumberFormatComponentsDelimeter","getComponents","signFormat","hasNegative","positive","negative","zero","signSpecificFormats","formatCount","signSpecificFormat","_lastCustomFormatMeta","isStandardFormat","formatNumberCustom","nonScientificOverrideFormat","numberFormatInfo","formatComponents","formatMeta","getCustomFormatMetadata","hasLiterals","hasE","scientificMatch","formatM","formatE","getCustomFormatPrecision","scale","getCustomFormatScale","toExponential","indexOfE","mantissa","resultM","fuseNumberWithCustomFormat","resultE","valueFormatted","isValueGlobalized","toNonScientific","baseFormat","numericFormat","newFormat","getNonScientificFormatWithPrecision","getNumericFormat","formattingService","precisionZeros","digitsBeforeDecimalPoint","double_namespaceObject","maxPrecision","toFixed","indexOfDot","powerZeros","calculatePrecision","calculateScale","calculatePartsPerScale","escaped","hasCommas","hasDots","hasPercent","hasPermile","partsPerScale","getCustomFormatPartsPerScale","dotIndex","suppressModifyValue","formatParts","wholeFormat","fractionFormat","displayUnit","globalizedDecimalSeparator","decimalSeparator","valueParts","wholeValue","fractionValue","wholeFormattedValue","fuseNumberWithCustomFormatLeft","fractionFormattedValue","vi","fCount","vCount","lastChar","fmtOnly","fi","formatChar","fuseNumberWithCustomFormatRight","groupSymbolIndex","enableGroups","groupDigitCount","groupIndex","groupSize","groupSeparator","sign","isZero","leftBuffer","plus","minus","dot","comma","addDecimalsToFormat","formats","mantissaDecimalDigits","actualPrecision","isNegative","paddingZerosCount","paddingZeros","formatNumberStandard","formatWithCustomOverride","formattingService_DateTimeScaleFormatInfo","monthAbbreviations","cultureHasMonthAbbr","yearMonthPattern","monthDayPattern","fullPattern","longTimePattern","shortTimePattern","hasYearSymbol","YearPattern","yearPos","monthPos","MonthPattern","DayPattern","minutePos","shortHourPattern","HourPattern","MinutePattern","SecondPattern","MillisecondPattern","unit","Year","Month","Week","Day","Hour","Minute","Second","Millisecond","cultureSelector","gculture","getCulture","formatWithIndexedTokens","argToken","parts","argIndex","argFormat","formatValue","_dateTimeScaleFormatInfo","initialize","getFormatString","_currentCultureSelector","_currentCulture","setCurrentCulture","calendarName","getUrlParam","urlParam","external_null_default","common","cultureInfo","navigator","userLanguage","param","location","search","maxExponent","defaultScientificBigNumbersBoundary","scientificSmallNumbersBoundary","PERCENTAGE_FORMAT","SCIENTIFIC_FORMAT","DEFAULT_SCIENTIFIC_FORMAT","SUPPORTED_SCIENTIFIC_FORMATS","displayUnitSystem_DisplayUnit","applicableRangeMin","applicableRangeMax","displayUnitSystem_DisplayUnitSystem","units","title","unitBaseValue","findApplicableDisplayUnit","isApplicableTo","getNumberOfDecimalsForFormatting","nonScientificFormat","isFormatSupported","hasScientitifcFormat","isScalingUnit","shouldRespectScalingUnit","labelFormat","formatHelper","UNSUPPORTED_FORMATS","isScaling","options","isStandardNumberFormat","formatNumberWithCustomOverride","shouldUseValuePrecision","supportsScientificFormat","isScientific","shouldFallbackToScientific","NoDisplayUnitSystem","super","DefaultDisplayUnitSystem","unitLookup","getUnits","getScientificFormat","createDisplayUnits","previousUnitValue","WholeUnitsDisplayUnitSystem","DataLabelsDisplayUnitSystem","adjustMinBasedOnPreviousUnit","addUnitIfNonEmpty","AUTO_DISPLAYUNIT_VALUE","NONE_DISPLAYUNIT_VALUE","concat","previousUnit","DisplayUnitSystemType","dateUtils","MonthDays","MonthDaysLeap","isLeap","addDays","getFullYear","getMonth","getDate","getTime","setFullYear","addYears","yearDelta","isLeapDay","addMonths","monthDelta","getMonthDays","addWeeks","weeks","addHours","hours","addMinutes","minutes","addSeconds","seconds","addMilliseconds","DataRoleHelper","converterHelper_converterHelper","DataViewObject","dataViewObjects_DataViewObjects","DataViewTransform","validationHelper","dateTimeSequence_NumericSequence","numericSequence_namespaceObject","NumericSequence","dateTimeSequence_NumericSequenceRange","numericSequenceRange_namespaceObject","NumericSequenceRange","dateTimeSequence_DateTimeSequence","addInterval","delta","getDelta","getIntervalUnit","calculateYears","calculateMonths","calculateWeeks","calculateDays","calculateHours","calculateMinutes","calculateSeconds","calculateMilliseconds","yearsRange","calculateDataRange","newMinYear","fromNumericSequence","minYear","maxYear","minMonth","maxMonth","calculateUnits","dayOffset","getDay","minDay","getHours","getMinutes","getSeconds","totalDays","totalHours","totalMinutes","totalSeconds","hasRole","column","roles","getMeasureIndexOfRole","grouped","roleName","firstGroup","getCategoryIndexOfRole","categories","hasRoleInDataView","dataView","metadata","columns","hasRoleInValueColumn","valueColumn","converterHelper","isImageUrlColumn","getMiscellaneousTypeDescriptor","categoryIsAlsoSeriesRole","seriesRoleName","categoryRoleName","getSeriesName","groupName","queryName","isWebUrlColumn","hasImageUrlColumn","getValue","propertyName","defaultValue","propertyValue","getFillColorByPropertyName","defaultColor","solid","DataViewObjects","objects","propertyId","objectName","getObject","getFillColor","getCommonValue","dataViewObjectsParser_DataViewObjectsParser","properties","dataViewObjectParser","getDefault","getProperties","InnumerablePropertyPrefix","dataViewProperties","instance","instances","keys","forEach","isPropertyEnumerable","propertyNames","createPropertyIdentifier","setGrouped","groupedResult","groupValues","currentGroup","identity","displayName","createValueColumns","valueIdentityFields","identityFields","isImageUrlAllowed","url","isFileImage","imageCheckResultCallBack","request","XMLHttpRequest","onreadystatechange","readyState","HEADERS_RECEIVED","contentType","getResponseHeader","open","send","valueFormatter_valueFormatter","valueFormatter_DataViewObjects","dataViewObjects_namespaceObject","valueFormatter_ValueType","valueType_namespaceObject","ValueType","valueFormatter_PrimitiveType","valueFormatter","lib_stringExtensions_namespaceObject","BeautifiedFormat","0.00 %;-0.00 %;0.00 %","0.0 %;-0.0 %;0.0 %","DefaultIntegerFormat","DefaultNumericFormat","DefaultDateFormat","defaultLocalizedStrings","NullValue","BooleanTrue","BooleanFalse","NaNValue","InfinityValue","NegativeInfinityValue","RestatementComma","RestatementCompoundAnd","RestatementCompoundOr","DisplayUnitSystem_EAuto_Title","DisplayUnitSystem_E0_Title","DisplayUnitSystem_E3_LabelFormat","DisplayUnitSystem_E3_Title","DisplayUnitSystem_E6_LabelFormat","DisplayUnitSystem_E6_Title","DisplayUnitSystem_E9_LabelFormat","DisplayUnitSystem_E9_Title","DisplayUnitSystem_E12_LabelFormat","DisplayUnitSystem_E12_Title","Percentage","Percentage1","TableTotalLabel","Tooltip_HighlightedValueDisplayName","Funnel_PercentOfFirst","Funnel_PercentOfPrevious","Funnel_PercentOfFirst_Highlight","Funnel_PercentOfPrevious_Highlight","GeotaggingString_Continent","GeotaggingString_Continents","GeotaggingString_Country","GeotaggingString_Countries","GeotaggingString_State","GeotaggingString_States","GeotaggingString_City","GeotaggingString_Cities","GeotaggingString_Town","GeotaggingString_Towns","GeotaggingString_Province","GeotaggingString_Provinces","GeotaggingString_County","GeotaggingString_Counties","GeotaggingString_Village","GeotaggingString_Villages","GeotaggingString_Post","GeotaggingString_Zip","GeotaggingString_Code","GeotaggingString_Place","GeotaggingString_Places","GeotaggingString_Address","GeotaggingString_Addresses","GeotaggingString_Street","GeotaggingString_Streets","GeotaggingString_Longitude","GeotaggingString_Longitude_Short","GeotaggingString_Longitude_Short2","GeotaggingString_Latitude","GeotaggingString_Latitude_Short","GeotaggingString_PostalCode","GeotaggingString_PostalCodes","GeotaggingString_ZipCode","GeotaggingString_ZipCodes","GeotaggingString_Territory","GeotaggingString_Territories","getLocalizedString","stringId","localizationOptions","nullValue","trueValue","falseValue","infinity","beautify","describe","exponentLookup","describeUnit","restatementComma","restatementCompoundAnd","restatementCompoundOr","MaxScaledDecimalPlaces","MaxValueForDisplayUnitRounding","MinIntegerValueForDisplayUnits","MinPrecisionForDisplayUnits","DateTimeMetadataColumn","createDefaultFormatter","allowFormatBeautification","formatBeautified","formatCore","createDisplayUnitSystem","displayUnitSystemType","Default","WholeUnits","Verbose","DataLabels","formatStringProperty","suppressTypeFallback","columnType","formatListCompound","strings","conjunction","nullsAreBlank","formattedValue","getStringFormat","NEGATIVE_INFINITY","POSITIVE_INFINITY","getFormatMetadata","setLocaleOptions","reset","value2","formatSingleValues","isCustomFormat","shouldUseNumericDisplayUnits","displayUnitSystem","singleValueFormattingMode","forcePrecision","formatSingleValue","tickCount","shouldUseDateUnits","dateFormatString","formatVariantMeasureValue","formatStringProp","getFormatStringByColumn","formatListAnd","formatListOr","getDisplayUnits","SPACE","BREAKERS_REGEX","content","getWidth","textWidthMeasurer","truncate","truncator","maxWidth","splitByWidth","maxNumLines","words","usedWidth","wordsInLine","word","wordWidth","EphemeralStorageService","clearCacheInterval","cache","defaultClearCacheInterval","clearCache","clearCacheTimerId","setTimeout","ephemeralStorageService","textMeasurementService_textMeasurementService","textMeasurementService","ellipsis","spanElement","svgTextElement","canvasCtx","fallbackFontFamily","ensureDOM","body","svgElement","canvasElement","getContext","fontFamily","measureSvgTextWidth","textProperties","font","fontStyle","fontVariant","fontWeight","measureText","width","measureSvgTextRect","visibility","whiteSpace","createTextNode","getBBox","estimateSvgTextRect","propertiesKey","rect","getData","estimatedTextProperties","height","setData","estimateSvgTextHeight","tightFightForNumeric","getSvgMeasurementProperties","element","getTailoredTextOrDefault","copiedTextProperties","prototype_namespaceObject","inherit","removeSpanElement","measureSvgTextHeight","estimateSvgTextBaselineDelta","measureSvgTextElementWidth","getMeasurementProperties","getDivElementWidth","svgEllipsis","textElement","originalText","tailoredText","wordBreak","maxHeight","linePadding","firstDY","labelText","fragment","createDocumentFragment","dy","wordBreakOverflowingText","span","overflow","textOverflow","display","pixelConverter_namespaceObject","FamilyInfo","families","family","getFamily","css","getCSS","fallbackFonts","noop","dispatch_dispatch","Error","Dispatch","types","dispatch_parseTypenames","that","taskHead","taskTail","src_dispatch","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","tick","ease","schedule_create","init","schedule","schedule_get","schedule_set","define","factory","extend","definition","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","k","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","sqrt","hcl","A","B","C","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","end","rgbSpline","spline","colors","number","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","q","one","degrees","translateX","translateY","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","tweenValue","transition","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","children","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","interpolate","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tween0","tween1","easeConstant","custom","polyIn","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","interrupt","active","settings_DataViewObjectsParser","dataViewObjectsParser_namespaceObject","DataViewObjectsParser","ExternalLinkVisualSettings","linkGeneralSettings","LinkGeneralSettings","linkImageSettings","LinkImageSettings","linkContentSettings","LinkContentSettings","linkBottomSettings","LinkBottomSettings","borderColor","borderHoverColor","show","imageURL","link","linkTitle","linkHoverTitle","showLinkContent","linkContent","linkBottomText","visual_ExternalLinkVisual","host","linkVisualSettings","parseSettings","dataViews","rootElement","topContentElement","middleContentElement","bottomContentElement","elements","launchUrl","error","console","enumerateObjectInstances","powerbi","visuals","plugins","class","version","apiVersion","__webpack_exports__"],"mappings":"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","file":"visual.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = null;","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","/*\r\n*  Power BI Visualizations\r\n*\r\n*  Copyright (c) Microsoft Corporation\r\n*  All rights reserved.\r\n*  MIT License\r\n*\r\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n*  in the Software without restriction, including without limitation the rights\r\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n*  copies of the Software, and to permit persons to whom the Software is\r\n*  furnished to do so, subject to the following conditions:\r\n*\r\n*  The above copyright notice and this permission notice shall be included in\r\n*  all copies or substantial portions of the Software.\r\n*\r\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*  THE SOFTWARE.\r\n*/\r\nlet regexCache;\r\n/**\r\n * Translate .NET format into something supported by jQuery.Globalize.\r\n */\r\nexport function findDateFormat(value, format, cultureName) {\r\n    switch (format) {\r\n        case \"m\":\r\n            // Month + day\r\n            format = \"M\";\r\n            break;\r\n        case \"O\":\r\n        case \"o\":\r\n            // Roundtrip\r\n            format = \"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'0000'\";\r\n            break;\r\n        case \"R\":\r\n        case \"r\":\r\n            // RFC1123 pattern - - time must be converted to UTC before formatting\r\n            value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\r\n            format = \"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\";\r\n            break;\r\n        case \"s\":\r\n            // Sortable - should use invariant culture\r\n            format = \"S\";\r\n            break;\r\n        case \"u\":\r\n            // Universal sortable - should convert to UTC before applying the \"yyyy'-'MM'-'dd HH':'mm':'ss'Z' format.\r\n            value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\r\n            format = \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\";\r\n            break;\r\n        case \"U\":\r\n            // Universal full - the pattern is same as F but the time must be converted to UTC before formatting\r\n            value = new Date(value.getUTCFullYear(), value.getUTCMonth(), value.getUTCDate(), value.getUTCHours(), value.getUTCMinutes(), value.getUTCSeconds(), value.getUTCMilliseconds());\r\n            format = \"F\";\r\n            break;\r\n        case \"y\":\r\n        case \"Y\":\r\n            // Year and month\r\n            switch (cultureName) {\r\n                case \"default\":\r\n                case \"en\":\r\n                case \"en-US\":\r\n                    format = \"MMMM, yyyy\"; // Fix the default year-month pattern for english\r\n                    break;\r\n                default:\r\n                    format = \"Y\"; // For other cultures - use the localized pattern\r\n            }\r\n            break;\r\n    }\r\n    return { value: value, format: format };\r\n}\r\n/**\r\n * Translates unsupported .NET custom format expressions to the custom expressions supported by JQuery.Globalize.\r\n */\r\nexport function fixDateTimeFormat(format) {\r\n    // Fix for the \"K\" format (timezone):\r\n    // T he js dates don't have a kind property so we'll support only local kind which is equavalent to zzz format.\r\n    format = format.replace(/%K/g, \"zzz\");\r\n    format = format.replace(/K/g, \"zzz\");\r\n    format = format.replace(/fffffff/g, \"fff0000\");\r\n    format = format.replace(/ffffff/g, \"fff000\");\r\n    format = format.replace(/fffff/g, \"fff00\");\r\n    format = format.replace(/ffff/g, \"fff0\");\r\n    // Fix for the 5 digit year: \"yyyyy\" format.\r\n    // The Globalize doesn't support dates greater than 9999 so we replace the \"yyyyy\" with \"0yyyy\".\r\n    format = format.replace(/yyyyy/g, \"0yyyy\");\r\n    // Fix for the 3 digit year: \"yyy\" format.\r\n    // The Globalize doesn't support this formatting so we need to replace it with the 4 digit year \"yyyy\" format.\r\n    format = format.replace(/(^y|^)yyy(^y|$)/g, \"yyyy\");\r\n    if (!regexCache) {\r\n        // Creating Regexes for cases \"Using single format specifier\"\r\n        // - http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx#UsingSingleSpecifiers\r\n        // This is not supported from The Globalize.\r\n        // The case covers all single \"%\" lead specifier (like \"%d\" but not %dd)\r\n        // The cases as single \"%d\" are filtered in if the bellow.\r\n        // (?!S) where S is the specifier make sure that we only one symbol for specifier.\r\n        regexCache = [\"d\", \"f\", \"F\", \"g\", \"h\", \"H\", \"K\", \"m\", \"M\", \"s\", \"t\", \"y\", \"z\", \":\", \"/\"].map((s) => {\r\n            return { r: new RegExp(\"\\%\" + s + \"(?!\" + s + \")\", \"g\"), s: s };\r\n        });\r\n    }\r\n    if (format.indexOf(\"%\") !== -1 && format.length > 2) {\r\n        for (let i = 0; i < regexCache.length; i++) {\r\n            format = format.replace(regexCache[i].r, regexCache[i].s);\r\n        }\r\n    }\r\n    return format;\r\n}\r\n//# sourceMappingURL=formatting.js.map","export var ArrayExtensions;\r\n(function (ArrayExtensions) {\r\n    /**\r\n     * Returns items that exist in target and other.\r\n     */\r\n    function intersect(target, other) {\r\n        let result = [];\r\n        for (let i = target.length - 1; i >= 0; --i) {\r\n            if (other.indexOf(target[i]) !== -1) {\r\n                result.push(target[i]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    ArrayExtensions.intersect = intersect;\r\n    /**\r\n     * Return elements exists in target but not exists in other.\r\n     */\r\n    function diff(target, other) {\r\n        let result = [];\r\n        for (let i = target.length - 1; i >= 0; --i) {\r\n            let value = target[i];\r\n            if (other.indexOf(value) === -1) {\r\n                result.push(value);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    ArrayExtensions.diff = diff;\r\n    /**\r\n     * Return an array with only the distinct items in the source.\r\n     */\r\n    function distinct(source) {\r\n        let result = [];\r\n        for (let i = 0, len = source.length; i < len; i++) {\r\n            let value = source[i];\r\n            if (result.indexOf(value) === -1) {\r\n                result.push(value);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    ArrayExtensions.distinct = distinct;\r\n    /**\r\n     * Pushes content of source onto target,\r\n     * for parts of course that do not already exist in target.\r\n     */\r\n    function union(target, source) {\r\n        for (let i = 0, len = source.length; i < len; ++i) {\r\n            unionSingle(target, source[i]);\r\n        }\r\n    }\r\n    ArrayExtensions.union = union;\r\n    /**\r\n     * Pushes value onto target, if value does not already exist in target.\r\n     */\r\n    function unionSingle(target, value) {\r\n        if (target.indexOf(value) < 0) {\r\n            target.push(value);\r\n        }\r\n    }\r\n    ArrayExtensions.unionSingle = unionSingle;\r\n    /**\r\n     * Returns an array with a range of items from source,\r\n     * including the startIndex & endIndex.\r\n     */\r\n    function range(source, startIndex, endIndex) {\r\n        let result = [];\r\n        for (let i = startIndex; i <= endIndex; ++i) {\r\n            result.push(source[i]);\r\n        }\r\n        return result;\r\n    }\r\n    ArrayExtensions.range = range;\r\n    /**\r\n     * Returns an array that includes items from source, up to the specified count.\r\n     */\r\n    function take(source, count) {\r\n        let result = [];\r\n        for (let i = 0; i < count; ++i) {\r\n            result.push(source[i]);\r\n        }\r\n        return result;\r\n    }\r\n    ArrayExtensions.take = take;\r\n    function copy(source) {\r\n        return take(source, source.length);\r\n    }\r\n    ArrayExtensions.copy = copy;\r\n    /**\r\n      * Returns a value indicating whether the arrays have the same values in the same sequence.\r\n      */\r\n    function sequenceEqual(left, right, comparison) {\r\n        // Normalize falsy to null\r\n        if (!left) {\r\n            left = null;\r\n        }\r\n        if (!right) {\r\n            right = null;\r\n        }\r\n        // T can be same as U, and it is possible for left and right to be the same array object...\r\n        if (left === right) {\r\n            return true;\r\n        }\r\n        if (!!left !== !!right) {\r\n            return false;\r\n        }\r\n        let len = left.length;\r\n        if (len !== right.length) {\r\n            return false;\r\n        }\r\n        let i = 0;\r\n        while (i < len && comparison(left[i], right[i])) {\r\n            ++i;\r\n        }\r\n        return i === len;\r\n    }\r\n    ArrayExtensions.sequenceEqual = sequenceEqual;\r\n    /**\r\n     * Returns null if the specified array is empty.\r\n     * Otherwise returns the specified array.\r\n     */\r\n    function emptyToNull(array) {\r\n        if (array && array.length === 0) {\r\n            return null;\r\n        }\r\n        return array;\r\n    }\r\n    ArrayExtensions.emptyToNull = emptyToNull;\r\n    function indexOf(array, predicate) {\r\n        for (let i = 0, len = array.length; i < len; ++i) {\r\n            if (predicate(array[i])) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    ArrayExtensions.indexOf = indexOf;\r\n    /**\r\n     * Returns a copy of the array rotated by the specified offset.\r\n     */\r\n    function rotate(array, offset) {\r\n        if (offset === 0)\r\n            return array.slice();\r\n        let rotated = array.slice(offset);\r\n        Array.prototype.push.apply(rotated, array.slice(0, offset));\r\n        return rotated;\r\n    }\r\n    ArrayExtensions.rotate = rotate;\r\n    function createWithId() {\r\n        return extendWithId([]);\r\n    }\r\n    ArrayExtensions.createWithId = createWithId;\r\n    function extendWithId(array) {\r\n        let extended = array;\r\n        extended.withId = withId;\r\n        return extended;\r\n    }\r\n    ArrayExtensions.extendWithId = extendWithId;\r\n    /**\r\n     * Finds and returns the first item with a matching ID.\r\n     */\r\n    function findWithId(array, id) {\r\n        for (let i = 0, len = array.length; i < len; i++) {\r\n            let item = array[i];\r\n            if (item.id === id)\r\n                return item;\r\n        }\r\n    }\r\n    ArrayExtensions.findWithId = findWithId;\r\n    function withId(id) {\r\n        return ArrayExtensions.findWithId(this, id);\r\n    }\r\n    function createWithName() {\r\n        return extendWithName([]);\r\n    }\r\n    ArrayExtensions.createWithName = createWithName;\r\n    function extendWithName(array) {\r\n        let extended = array;\r\n        extended.withName = withName;\r\n        return extended;\r\n    }\r\n    ArrayExtensions.extendWithName = extendWithName;\r\n    function findItemWithName(array, name) {\r\n        let index = indexWithName(array, name);\r\n        if (index >= 0)\r\n            return array[index];\r\n    }\r\n    ArrayExtensions.findItemWithName = findItemWithName;\r\n    function indexWithName(array, name) {\r\n        for (let i = 0, len = array.length; i < len; i++) {\r\n            let item = array[i];\r\n            if (item.name === name)\r\n                return i;\r\n        }\r\n        return -1;\r\n    }\r\n    ArrayExtensions.indexWithName = indexWithName;\r\n    /**\r\n     * Inserts a number in sorted order into a list of numbers already in sorted order.\r\n     * @returns True if the item was added, false if it already existed.\r\n     */\r\n    function insertSorted(list, value) {\r\n        let len = list.length;\r\n        // NOTE: iterate backwards because incoming values tend to be sorted already.\r\n        for (let i = len - 1; i >= 0; i--) {\r\n            let diff = list[i] - value;\r\n            if (diff === 0)\r\n                return false;\r\n            if (diff > 0)\r\n                continue;\r\n            // diff < 0\r\n            list.splice(i + 1, 0, value);\r\n            return true;\r\n        }\r\n        list.unshift(value);\r\n        return true;\r\n    }\r\n    ArrayExtensions.insertSorted = insertSorted;\r\n    /**\r\n     * Removes the first occurrence of a value from a list if it exists.\r\n     * @returns True if the value was removed, false if it did not exist in the list.\r\n     */\r\n    function removeFirst(list, value) {\r\n        let index = list.indexOf(value);\r\n        if (index < 0)\r\n            return false;\r\n        list.splice(index, 1);\r\n        return true;\r\n    }\r\n    ArrayExtensions.removeFirst = removeFirst;\r\n    /**\r\n     * Finds and returns the first item with a matching name.\r\n     */\r\n    function withName(name) {\r\n        let array = this;\r\n        return findItemWithName(array, name);\r\n    }\r\n    /**\r\n     * Deletes all items from the array.\r\n     */\r\n    function clear(array) {\r\n        if (!array)\r\n            return;\r\n        while (array.length > 0)\r\n            array.pop();\r\n    }\r\n    ArrayExtensions.clear = clear;\r\n    function isUndefinedOrEmpty(array) {\r\n        if (!array || array.length === 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    ArrayExtensions.isUndefinedOrEmpty = isUndefinedOrEmpty;\r\n    function swap(array, firstIndex, secondIndex) {\r\n        let temp = array[firstIndex];\r\n        array[firstIndex] = array[secondIndex];\r\n        array[secondIndex] = temp;\r\n    }\r\n    ArrayExtensions.swap = swap;\r\n    function isInArray(array, lookupItem, compareCallback) {\r\n        return array.some(item => compareCallback(item, lookupItem));\r\n    }\r\n    ArrayExtensions.isInArray = isInArray;\r\n    /** Checks if the given object is an Array, and looking all the way up the prototype chain. */\r\n    function isArrayOrInheritedArray(obj) {\r\n        let nextPrototype = obj;\r\n        while (nextPrototype != null) {\r\n            if (Array.isArray(nextPrototype))\r\n                return true;\r\n            nextPrototype = Object.getPrototypeOf(nextPrototype);\r\n        }\r\n        return false;\r\n    }\r\n    ArrayExtensions.isArrayOrInheritedArray = isArrayOrInheritedArray;\r\n    /**\r\n     * Returns true if the specified values array is sorted in an order as determined by the specified compareFunction.\r\n     */\r\n    function isSorted(values, compareFunction) {\r\n        let ilen = values.length;\r\n        if (ilen >= 2) {\r\n            for (let i = 1; i < ilen; i++) {\r\n                if (compareFunction(values[i - 1], values[i]) > 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    ArrayExtensions.isSorted = isSorted;\r\n    /**\r\n     * Returns true if the specified number values array is sorted in ascending order\r\n     * (or descending order if the specified descendingOrder is truthy).\r\n     */\r\n    function isSortedNumeric(values, descendingOrder) {\r\n        let compareFunction = descendingOrder ?\r\n            (a, b) => b - a :\r\n            (a, b) => a - b;\r\n        return isSorted(values, compareFunction);\r\n    }\r\n    ArrayExtensions.isSortedNumeric = isSortedNumeric;\r\n    /**\r\n     * Ensures that the given T || T[] is in array form, either returning the array or\r\n     * converting single items into an array of length one.\r\n     */\r\n    function ensureArray(value) {\r\n        if (Array.isArray(value)) {\r\n            return value;\r\n        }\r\n        return [value];\r\n    }\r\n    ArrayExtensions.ensureArray = ensureArray;\r\n})(ArrayExtensions || (ArrayExtensions = {}));\r\n//# sourceMappingURL=arrayExtensions.js.map","/*\r\n*  Power BI Visualizations\r\n*\r\n*  Copyright (c) Microsoft Corporation\r\n*  All rights reserved.\r\n*  MIT License\r\n*\r\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n*  in the Software without restriction, including without limitation the rights\r\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n*  copies of the Software, and to permit persons to whom the Software is\r\n*  furnished to do so, subject to the following conditions:\r\n*\r\n*  The above copyright notice and this permission notice shall be included in\r\n*  all copies or substantial portions of the Software.\r\n*\r\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*  THE SOFTWARE.\r\n*/\r\n/**\r\n * Module Double contains a set of constants and precision based utility methods\r\n * for dealing with doubles and their decimal garbage in the javascript.\r\n */\r\n// Constants.\r\nexport const MIN_VALUE = -Number.MAX_VALUE;\r\nexport const MAX_VALUE = Number.MAX_VALUE;\r\nexport const MIN_EXP = -308;\r\nexport const MAX_EXP = 308;\r\nexport const EPSILON = 1E-323;\r\nexport const DEFAULT_PRECISION = 0.0001;\r\nexport const DEFAULT_PRECISION_IN_DECIMAL_DIGITS = 12;\r\nexport const LOG_E_10 = Math.log(10);\r\nexport const POSITIVE_POWERS = [\r\n    1E0, 1E1, 1E2, 1E3, 1E4, 1E5, 1E6, 1E7, 1E8, 1E9, 1E10, 1E11, 1E12, 1E13, 1E14, 1E15, 1E16, 1E17, 1E18, 1E19, 1E20, 1E21, 1E22, 1E23, 1E24, 1E25, 1E26, 1E27, 1E28, 1E29, 1E30, 1E31, 1E32, 1E33, 1E34, 1E35, 1E36, 1E37, 1E38, 1E39, 1E40, 1E41, 1E42, 1E43, 1E44, 1E45, 1E46, 1E47, 1E48, 1E49, 1E50, 1E51, 1E52, 1E53, 1E54, 1E55, 1E56, 1E57, 1E58, 1E59, 1E60, 1E61, 1E62, 1E63, 1E64, 1E65, 1E66, 1E67, 1E68, 1E69, 1E70, 1E71, 1E72, 1E73, 1E74, 1E75, 1E76, 1E77, 1E78, 1E79, 1E80, 1E81, 1E82, 1E83, 1E84, 1E85, 1E86, 1E87, 1E88, 1E89, 1E90, 1E91, 1E92, 1E93, 1E94, 1E95, 1E96, 1E97, 1E98, 1E99,\r\n    1E100, 1E101, 1E102, 1E103, 1E104, 1E105, 1E106, 1E107, 1E108, 1E109, 1E110, 1E111, 1E112, 1E113, 1E114, 1E115, 1E116, 1E117, 1E118, 1E119, 1E120, 1E121, 1E122, 1E123, 1E124, 1E125, 1E126, 1E127, 1E128, 1E129, 1E130, 1E131, 1E132, 1E133, 1E134, 1E135, 1E136, 1E137, 1E138, 1E139, 1E140, 1E141, 1E142, 1E143, 1E144, 1E145, 1E146, 1E147, 1E148, 1E149, 1E150, 1E151, 1E152, 1E153, 1E154, 1E155, 1E156, 1E157, 1E158, 1E159, 1E160, 1E161, 1E162, 1E163, 1E164, 1E165, 1E166, 1E167, 1E168, 1E169, 1E170, 1E171, 1E172, 1E173, 1E174, 1E175, 1E176, 1E177, 1E178, 1E179, 1E180, 1E181, 1E182, 1E183, 1E184, 1E185, 1E186, 1E187, 1E188, 1E189, 1E190, 1E191, 1E192, 1E193, 1E194, 1E195, 1E196, 1E197, 1E198, 1E199,\r\n    1E200, 1E201, 1E202, 1E203, 1E204, 1E205, 1E206, 1E207, 1E208, 1E209, 1E210, 1E211, 1E212, 1E213, 1E214, 1E215, 1E216, 1E217, 1E218, 1E219, 1E220, 1E221, 1E222, 1E223, 1E224, 1E225, 1E226, 1E227, 1E228, 1E229, 1E230, 1E231, 1E232, 1E233, 1E234, 1E235, 1E236, 1E237, 1E238, 1E239, 1E240, 1E241, 1E242, 1E243, 1E244, 1E245, 1E246, 1E247, 1E248, 1E249, 1E250, 1E251, 1E252, 1E253, 1E254, 1E255, 1E256, 1E257, 1E258, 1E259, 1E260, 1E261, 1E262, 1E263, 1E264, 1E265, 1E266, 1E267, 1E268, 1E269, 1E270, 1E271, 1E272, 1E273, 1E274, 1E275, 1E276, 1E277, 1E278, 1E279, 1E280, 1E281, 1E282, 1E283, 1E284, 1E285, 1E286, 1E287, 1E288, 1E289, 1E290, 1E291, 1E292, 1E293, 1E294, 1E295, 1E296, 1E297, 1E298, 1E299,\r\n    1E300, 1E301, 1E302, 1E303, 1E304, 1E305, 1E306, 1E307, 1E308\r\n];\r\nexport const NEGATIVE_POWERS = [\r\n    1E0, 1E-1, 1E-2, 1E-3, 1E-4, 1E-5, 1E-6, 1E-7, 1E-8, 1E-9, 1E-10, 1E-11, 1E-12, 1E-13, 1E-14, 1E-15, 1E-16, 1E-17, 1E-18, 1E-19, 1E-20, 1E-21, 1E-22, 1E-23, 1E-24, 1E-25, 1E-26, 1E-27, 1E-28, 1E-29, 1E-30, 1E-31, 1E-32, 1E-33, 1E-34, 1E-35, 1E-36, 1E-37, 1E-38, 1E-39, 1E-40, 1E-41, 1E-42, 1E-43, 1E-44, 1E-45, 1E-46, 1E-47, 1E-48, 1E-49, 1E-50, 1E-51, 1E-52, 1E-53, 1E-54, 1E-55, 1E-56, 1E-57, 1E-58, 1E-59, 1E-60, 1E-61, 1E-62, 1E-63, 1E-64, 1E-65, 1E-66, 1E-67, 1E-68, 1E-69, 1E-70, 1E-71, 1E-72, 1E-73, 1E-74, 1E-75, 1E-76, 1E-77, 1E-78, 1E-79, 1E-80, 1E-81, 1E-82, 1E-83, 1E-84, 1E-85, 1E-86, 1E-87, 1E-88, 1E-89, 1E-90, 1E-91, 1E-92, 1E-93, 1E-94, 1E-95, 1E-96, 1E-97, 1E-98, 1E-99,\r\n    1E-100, 1E-101, 1E-102, 1E-103, 1E-104, 1E-105, 1E-106, 1E-107, 1E-108, 1E-109, 1E-110, 1E-111, 1E-112, 1E-113, 1E-114, 1E-115, 1E-116, 1E-117, 1E-118, 1E-119, 1E-120, 1E-121, 1E-122, 1E-123, 1E-124, 1E-125, 1E-126, 1E-127, 1E-128, 1E-129, 1E-130, 1E-131, 1E-132, 1E-133, 1E-134, 1E-135, 1E-136, 1E-137, 1E-138, 1E-139, 1E-140, 1E-141, 1E-142, 1E-143, 1E-144, 1E-145, 1E-146, 1E-147, 1E-148, 1E-149, 1E-150, 1E-151, 1E-152, 1E-153, 1E-154, 1E-155, 1E-156, 1E-157, 1E-158, 1E-159, 1E-160, 1E-161, 1E-162, 1E-163, 1E-164, 1E-165, 1E-166, 1E-167, 1E-168, 1E-169, 1E-170, 1E-171, 1E-172, 1E-173, 1E-174, 1E-175, 1E-176, 1E-177, 1E-178, 1E-179, 1E-180, 1E-181, 1E-182, 1E-183, 1E-184, 1E-185, 1E-186, 1E-187, 1E-188, 1E-189, 1E-190, 1E-191, 1E-192, 1E-193, 1E-194, 1E-195, 1E-196, 1E-197, 1E-198, 1E-199,\r\n    1E-200, 1E-201, 1E-202, 1E-203, 1E-204, 1E-205, 1E-206, 1E-207, 1E-208, 1E-209, 1E-210, 1E-211, 1E-212, 1E-213, 1E-214, 1E-215, 1E-216, 1E-217, 1E-218, 1E-219, 1E-220, 1E-221, 1E-222, 1E-223, 1E-224, 1E-225, 1E-226, 1E-227, 1E-228, 1E-229, 1E-230, 1E-231, 1E-232, 1E-233, 1E-234, 1E-235, 1E-236, 1E-237, 1E-238, 1E-239, 1E-240, 1E-241, 1E-242, 1E-243, 1E-244, 1E-245, 1E-246, 1E-247, 1E-248, 1E-249, 1E-250, 1E-251, 1E-252, 1E-253, 1E-254, 1E-255, 1E-256, 1E-257, 1E-258, 1E-259, 1E-260, 1E-261, 1E-262, 1E-263, 1E-264, 1E-265, 1E-266, 1E-267, 1E-268, 1E-269, 1E-270, 1E-271, 1E-272, 1E-273, 1E-274, 1E-275, 1E-276, 1E-277, 1E-278, 1E-279, 1E-280, 1E-281, 1E-282, 1E-283, 1E-284, 1E-285, 1E-286, 1E-287, 1E-288, 1E-289, 1E-290, 1E-291, 1E-292, 1E-293, 1E-294, 1E-295, 1E-296, 1E-297, 1E-298, 1E-299,\r\n    1E-300, 1E-301, 1E-302, 1E-303, 1E-304, 1E-305, 1E-306, 1E-307, 1E-308, 1E-309, 1E-310, 1E-311, 1E-312, 1E-313, 1E-314, 1E-315, 1E-316, 1E-317, 1E-318, 1E-319, 1E-320, 1E-321, 1E-322, 1E-323, 1E-324\r\n];\r\n/**\r\n * Returns powers of 10.\r\n * Unlike the Math.pow this function produces no decimal garbage.\r\n * @param exp Exponent.\r\n */\r\nexport function pow10(exp) {\r\n    // Positive & zero\r\n    if (exp >= 0) {\r\n        if (exp < POSITIVE_POWERS.length) {\r\n            return POSITIVE_POWERS[exp];\r\n        }\r\n        else {\r\n            return Infinity;\r\n        }\r\n    }\r\n    // Negative\r\n    exp = -exp;\r\n    if (exp > 0 && exp < NEGATIVE_POWERS.length) { // if exp==int.MIN_VALUE then changing the sign will overflow and keep the number negative - we need to check for exp > 0 to filter out this corner case\r\n        return NEGATIVE_POWERS[exp];\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns the 10 base logarithm of the number.\r\n * Unlike Math.log function this produces integer results with no decimal garbage.\r\n * @param val Positive value or zero.\r\n */\r\nexport function log10(val) {\r\n    // Fast Log10() algorithm\r\n    if (val > 1 && val < 1E16) {\r\n        if (val < 1E8) {\r\n            if (val < 1E4) {\r\n                if (val < 1E2) {\r\n                    if (val < 1E1) {\r\n                        return 0;\r\n                    }\r\n                    else {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E3) {\r\n                        return 2;\r\n                    }\r\n                    else {\r\n                        return 3;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (val < 1E6) {\r\n                    if (val < 1E5) {\r\n                        return 4;\r\n                    }\r\n                    else {\r\n                        return 5;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E7) {\r\n                        return 6;\r\n                    }\r\n                    else {\r\n                        return 7;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (val < 1E12) {\r\n                if (val < 1E10) {\r\n                    if (val < 1E9) {\r\n                        return 8;\r\n                    }\r\n                    else {\r\n                        return 9;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E11) {\r\n                        return 10;\r\n                    }\r\n                    else {\r\n                        return 11;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (val < 1E14) {\r\n                    if (val < 1E13) {\r\n                        return 12;\r\n                    }\r\n                    else {\r\n                        return 13;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E15) {\r\n                        return 14;\r\n                    }\r\n                    else {\r\n                        return 15;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (val > 1E-16 && val < 1) {\r\n        if (val < 1E-8) {\r\n            if (val < 1E-12) {\r\n                if (val < 1E-14) {\r\n                    if (val < 1E-15) {\r\n                        return -16;\r\n                    }\r\n                    else {\r\n                        return -15;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E-13) {\r\n                        return -14;\r\n                    }\r\n                    else {\r\n                        return -13;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (val < 1E-10) {\r\n                    if (val < 1E-11) {\r\n                        return -12;\r\n                    }\r\n                    else {\r\n                        return -11;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E-9) {\r\n                        return -10;\r\n                    }\r\n                    else {\r\n                        return -9;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (val < 1E-4) {\r\n                if (val < 1E-6) {\r\n                    if (val < 1E-7) {\r\n                        return -8;\r\n                    }\r\n                    else {\r\n                        return -7;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E-5) {\r\n                        return -6;\r\n                    }\r\n                    else {\r\n                        return -5;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (val < 1E-2) {\r\n                    if (val < 1E-3) {\r\n                        return -4;\r\n                    }\r\n                    else {\r\n                        return -3;\r\n                    }\r\n                }\r\n                else {\r\n                    if (val < 1E-1) {\r\n                        return -2;\r\n                    }\r\n                    else {\r\n                        return -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // JS Math provides only natural log function so we need to calc the 10 base logarithm:\r\n    // logb(x) = logk(x)/logk(b);\r\n    let log10 = Math.log(val) / LOG_E_10;\r\n    return floorWithPrecision(log10);\r\n}\r\n/**\r\n * Returns a power of 10 representing precision of the number based on the number of meaningful decimal digits.\r\n * For example the precision of 56,263.3767 with the 6 meaningful decimal digit is 0.1.\r\n * @param x Value.\r\n * @param decimalDigits How many decimal digits are meaningfull.\r\n */\r\nexport function getPrecision(x, decimalDigits) {\r\n    if (decimalDigits === undefined) {\r\n        decimalDigits = DEFAULT_PRECISION_IN_DECIMAL_DIGITS;\r\n    }\r\n    if (!x || !isFinite(x)) {\r\n        return undefined;\r\n    }\r\n    let exp = log10(Math.abs(x));\r\n    if (exp < MIN_EXP) {\r\n        return 0;\r\n    }\r\n    let precisionExp = Math.max(exp - decimalDigits, -NEGATIVE_POWERS.length + 1);\r\n    return pow10(precisionExp);\r\n}\r\n/**\r\n * Checks if a delta between 2 numbers is less than provided precision.\r\n * @param x One value.\r\n * @param y Another value.\r\n * @param precision Precision value.\r\n */\r\nexport function equalWithPrecision(x, y, precision) {\r\n    precision = detectPrecision(precision, x, y);\r\n    return x === y || Math.abs(x - y) < precision;\r\n}\r\n/**\r\n * Checks if a first value is less than another taking\r\n * into account the loose precision based equality.\r\n * @param x One value.\r\n * @param y Another value.\r\n * @param precision Precision value.\r\n */\r\nexport function lessWithPrecision(x, y, precision) {\r\n    precision = detectPrecision(precision, x, y);\r\n    return x < y && Math.abs(x - y) > precision;\r\n}\r\n/**\r\n * Checks if a first value is less or equal than another taking\r\n * into account the loose precision based equality.\r\n * @param x One value.\r\n * @param y Another value.\r\n * @param precision Precision value.\r\n */\r\nexport function lessOrEqualWithPrecision(x, y, precision) {\r\n    precision = detectPrecision(precision, x, y);\r\n    return x < y || Math.abs(x - y) < precision;\r\n}\r\n/**\r\n * Checks if a first value is greater than another taking\r\n * into account the loose precision based equality.\r\n * @param x One value.\r\n * @param y Another value.\r\n * @param precision Precision value.\r\n */\r\nexport function greaterWithPrecision(x, y, precision) {\r\n    precision = detectPrecision(precision, x, y);\r\n    return x > y && Math.abs(x - y) > precision;\r\n}\r\n/**\r\n * Checks if a first value is greater or equal to another taking\r\n * into account the loose precision based equality.\r\n * @param x One value.\r\n * @param y Another value.\r\n * @param precision Precision value.\r\n */\r\nexport function greaterOrEqualWithPrecision(x, y, precision) {\r\n    precision = detectPrecision(precision, x, y);\r\n    return x > y || Math.abs(x - y) < precision;\r\n}\r\n/**\r\n * Floors the number unless it's withing the precision distance from the higher int.\r\n * @param x One value.\r\n * @param precision Precision value.\r\n */\r\nexport function floorWithPrecision(x, precision) {\r\n    precision = precision != null ? precision : DEFAULT_PRECISION;\r\n    let roundX = Math.round(x);\r\n    if (Math.abs(x - roundX) < precision) {\r\n        return roundX;\r\n    }\r\n    else {\r\n        return Math.floor(x);\r\n    }\r\n}\r\n/**\r\n * Ceils the number unless it's withing the precision distance from the lower int.\r\n * @param x One value.\r\n * @param precision Precision value.\r\n */\r\nexport function ceilWithPrecision(x, precision) {\r\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\r\n    let roundX = Math.round(x);\r\n    if (Math.abs(x - roundX) < precision) {\r\n        return roundX;\r\n    }\r\n    else {\r\n        return Math.ceil(x);\r\n    }\r\n}\r\n/**\r\n * Floors the number to the provided precision.\r\n * For example 234,578 floored to 1,000 precision is 234,000.\r\n * @param x One value.\r\n * @param precision Precision value.\r\n */\r\nexport function floorToPrecision(x, precision) {\r\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\r\n    if (precision === 0 || x === 0) {\r\n        return x;\r\n    }\r\n    // Precision must be a Power of 10\r\n    return Math.floor(x / precision) * precision;\r\n}\r\n/**\r\n * Ceils the number to the provided precision.\r\n * For example 234,578 floored to 1,000 precision is 235,000.\r\n * @param x One value.\r\n * @param precision Precision value.\r\n */\r\nexport function ceilToPrecision(x, precision) {\r\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\r\n    if (precision === 0 || x === 0) {\r\n        return x;\r\n    }\r\n    // Precision must be a Power of 10\r\n    return Math.ceil(x / precision) * precision;\r\n}\r\n/**\r\n * Rounds the number to the provided precision.\r\n * For example 234,578 floored to 1,000 precision is 235,000.\r\n * @param x One value.\r\n * @param precision Precision value.\r\n */\r\nexport function roundToPrecision(x, precision) {\r\n    precision = detectPrecision(precision, DEFAULT_PRECISION);\r\n    if (precision === 0 || x === 0) {\r\n        return x;\r\n    }\r\n    // Precision must be a Power of 10\r\n    let result = Math.round(x / precision) * precision;\r\n    let decimalDigits = Math.round(log10(Math.abs(x)) - log10(precision)) + 1;\r\n    if (decimalDigits > 0 && decimalDigits < 16) {\r\n        result = parseFloat(result.toPrecision(decimalDigits));\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Returns the value making sure that it's restricted to the provided range.\r\n * @param x One value.\r\n * @param min Range min boundary.\r\n * @param max Range max boundary.\r\n */\r\nexport function ensureInRange(x, min, max) {\r\n    if (x === undefined || x === null) {\r\n        return x;\r\n    }\r\n    if (x < min) {\r\n        return min;\r\n    }\r\n    if (x > max) {\r\n        return max;\r\n    }\r\n    return x;\r\n}\r\n/**\r\n * Rounds the value - this method is actually faster than Math.round - used in the graphics utils.\r\n * @param x Value to round.\r\n */\r\nexport function round(x) {\r\n    return (0.5 + x) << 0;\r\n}\r\n/**\r\n * Projects the value from the source range into the target range.\r\n * @param value Value to project.\r\n * @param fromMin Minimum of the source range.\r\n * @param toMin Minimum of the target range.\r\n * @param toMax Maximum of the target range.\r\n */\r\nexport function project(value, fromMin, fromSize, toMin, toSize) {\r\n    if (fromSize === 0 || toSize === 0) {\r\n        if (fromMin <= value && value <= fromMin + fromSize) {\r\n            return toMin;\r\n        }\r\n        else {\r\n            return NaN;\r\n        }\r\n    }\r\n    let relativeX = (value - fromMin) / fromSize;\r\n    let projectedX = toMin + relativeX * toSize;\r\n    return projectedX;\r\n}\r\n/**\r\n * Removes decimal noise.\r\n * @param value Value to be processed.\r\n */\r\nexport function removeDecimalNoise(value) {\r\n    return roundToPrecision(value, getPrecision(value));\r\n}\r\n/**\r\n * Checks whether the number is integer.\r\n * @param value Value to be checked.\r\n */\r\nexport function isInteger(value) {\r\n    return value !== null && value % 1 === 0;\r\n}\r\n/**\r\n * Dividing by increment will give us count of increments\r\n * Round out the rough edges into even integer\r\n * Multiply back by increment to get rounded value\r\n * e.g. Rounder.toIncrement(0.647291, 0.05) => 0.65\r\n * @param value - value to round to nearest increment\r\n * @param increment - smallest increment to round toward\r\n */\r\nexport function toIncrement(value, increment) {\r\n    return Math.round(value / increment) * increment;\r\n}\r\n/**\r\n * Overrides the given precision with defaults if necessary. Exported only for tests\r\n *\r\n * precision defined returns precision\r\n * x defined with y undefined returns twelve digits of precision based on x\r\n * x defined but zero with y defined; returns twelve digits of precision based on y\r\n * x and y defined retursn twelve digits of precision based on the minimum of the two\r\n * if no applicable precision is found based on those (such as x and y being zero), the default precision is used\r\n */\r\nexport function detectPrecision(precision, x, y) {\r\n    if (precision !== undefined) {\r\n        return precision;\r\n    }\r\n    let calculatedPrecision;\r\n    if (!y) {\r\n        calculatedPrecision = getPrecision(x);\r\n    }\r\n    else if (!x) {\r\n        calculatedPrecision = getPrecision(y);\r\n    }\r\n    else {\r\n        calculatedPrecision = getPrecision(Math.min(Math.abs(x), Math.abs(y)));\r\n    }\r\n    return calculatedPrecision || DEFAULT_PRECISION;\r\n}\r\n//# sourceMappingURL=double.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\r\nimport * as Double from \"../double\";\r\n/**\r\n * Extensions for Enumerations.\r\n */\r\nexport var EnumExtensions;\r\n(function (EnumExtensions) {\r\n    /**\r\n     * Gets a value indicating whether the value has the bit flags set.\r\n     */\r\n    function hasFlag(value, flag) {\r\n        return (value & flag) === flag;\r\n    }\r\n    EnumExtensions.hasFlag = hasFlag;\r\n    /**\r\n     * Sets a value of a flag without modifying any other flags.\r\n     */\r\n    function setFlag(value, flag) {\r\n        return value |= flag;\r\n    }\r\n    EnumExtensions.setFlag = setFlag;\r\n    /**\r\n     * Resets a value of a flag without modifying any other flags.\r\n     */\r\n    function resetFlag(value, flag) {\r\n        return value &= ~flag;\r\n    }\r\n    EnumExtensions.resetFlag = resetFlag;\r\n    /**\r\n     * According to the TypeScript Handbook, this is safe to do.\r\n     */\r\n    function toString(enumType, value) {\r\n        return enumType[value];\r\n    }\r\n    EnumExtensions.toString = toString;\r\n    /**\r\n     * Returns the number of 1's in the specified value that is a set of binary bit flags.\r\n     */\r\n    function getBitCount(value) {\r\n        if (!Double.isInteger(value))\r\n            return 0;\r\n        let bitCount = 0;\r\n        let shiftingValue = value;\r\n        while (shiftingValue !== 0) {\r\n            if ((shiftingValue & 1) === 1) {\r\n                bitCount++;\r\n            }\r\n            shiftingValue = shiftingValue >>> 1;\r\n        }\r\n        return bitCount;\r\n    }\r\n    EnumExtensions.getBitCount = getBitCount;\r\n})(EnumExtensions || (EnumExtensions = {}));\r\n//# sourceMappingURL=enumExtensions.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\r\nexport var LogicExtensions;\r\n(function (LogicExtensions) {\r\n    function XOR(a, b) {\r\n        return (a || b) && !(a && b);\r\n    }\r\n    LogicExtensions.XOR = XOR;\r\n})(LogicExtensions || (LogicExtensions = {}));\r\n//# sourceMappingURL=logicExtensions.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\r\nexport var RegExpExtensions;\r\n(function (RegExpExtensions) {\r\n    /**\r\n     * Runs exec on regex starting from 0 index\r\n     * This is the expected behavior but RegExp actually remember\r\n     * the last index they stopped at (found match at) and will\r\n     * return unexpected results when run in sequence.\r\n     * @param regex - regular expression object\r\n     * @param value - string to search wiht regex\r\n     * @param start - index within value to start regex\r\n     */\r\n    function run(regex, value, start) {\r\n        regex.lastIndex = start || 0;\r\n        return regex.exec(value);\r\n    }\r\n    RegExpExtensions.run = run;\r\n})(RegExpExtensions || (RegExpExtensions = {}));\r\n//# sourceMappingURL=regExpExtensions.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n/**\r\n * Extensions to String class.\r\n */\r\nexport var StringExtensions;\r\n(function (StringExtensions) {\r\n    /**\r\n     * Checks if a string ends with a sub-string.\r\n     */\r\n    function endsWith(str, suffix) {\r\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n    }\r\n    StringExtensions.endsWith = endsWith;\r\n})(StringExtensions || (StringExtensions = {}));\r\n//# sourceMappingURL=stringExtensions.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nimport * as Double from \"../double\";\r\nexport class NumericSequenceRange {\r\n    _ensureIncludeZero() {\r\n        if (this.includeZero) {\r\n            // fixed min and max has higher priority than includeZero\r\n            if (this.min > 0 && !this.hasFixedMin) {\r\n                this.min = 0;\r\n            }\r\n            if (this.max < 0 && !this.hasFixedMax) {\r\n                this.max = 0;\r\n            }\r\n        }\r\n    }\r\n    _ensureNotEmpty() {\r\n        if (this.min === this.max) {\r\n            if (!this.min) {\r\n                this.min = 0;\r\n                this.max = NumericSequenceRange.DEFAULT_MAX;\r\n                this.hasFixedMin = true;\r\n                this.hasFixedMax = true;\r\n            }\r\n            else {\r\n                // We are dealing with a single data value (includeZero is not set)\r\n                // In order to fix the range we need to extend it in both directions by half of the interval.\r\n                // Interval is calculated based on the number:\r\n                // 1. Integers below 10,000 are extended by 0.5: so the [2006-2006] empty range is extended to [2005.5-2006.5] range and the ForsedSingleStop=2006\r\n                // 2. Other numbers are extended by half of their power: [700,001-700,001] => [650,001-750,001] and the ForsedSingleStop=null as we want the intervals to be calculated to cover the range.\r\n                let value = this.min;\r\n                let exp = Double.log10(Math.abs(value));\r\n                let step;\r\n                if (exp >= 0 && exp < 4) {\r\n                    step = 0.5;\r\n                    this.forcedSingleStop = value;\r\n                }\r\n                else {\r\n                    step = Double.pow10(exp) / 2;\r\n                    this.forcedSingleStop = null;\r\n                }\r\n                this.min = value - step;\r\n                this.max = value + step;\r\n            }\r\n        }\r\n    }\r\n    _ensureDirection() {\r\n        if (this.min > this.max) {\r\n            let temp = this.min;\r\n            this.min = this.max;\r\n            this.max = temp;\r\n        }\r\n    }\r\n    getSize() {\r\n        return this.max - this.min;\r\n    }\r\n    shrinkByStep(range, step) {\r\n        let oldCount = this.min / step;\r\n        let newCount = range.min / step;\r\n        let deltaCount = Math.floor(newCount - oldCount);\r\n        this.min += deltaCount * step;\r\n        oldCount = this.max / step;\r\n        newCount = range.max / step;\r\n        deltaCount = Math.ceil(newCount - oldCount);\r\n        this.max += deltaCount * step;\r\n    }\r\n    static calculate(dataMin, dataMax, fixedMin, fixedMax, includeZero) {\r\n        let result = new NumericSequenceRange();\r\n        result.includeZero = includeZero ? true : false;\r\n        result.hasDataRange = ValueUtil.hasValue(dataMin) && ValueUtil.hasValue(dataMax);\r\n        result.hasFixedMin = ValueUtil.hasValue(fixedMin);\r\n        result.hasFixedMax = ValueUtil.hasValue(fixedMax);\r\n        dataMin = Double.ensureInRange(dataMin, NumericSequenceRange.MIN_SUPPORTED_DOUBLE, NumericSequenceRange.MAX_SUPPORTED_DOUBLE);\r\n        dataMax = Double.ensureInRange(dataMax, NumericSequenceRange.MIN_SUPPORTED_DOUBLE, NumericSequenceRange.MAX_SUPPORTED_DOUBLE);\r\n        // Calculate the range using the min, max, dataRange\r\n        if (result.hasFixedMin && result.hasFixedMax) {\r\n            result.min = fixedMin;\r\n            result.max = fixedMax;\r\n        }\r\n        else if (result.hasFixedMin) {\r\n            result.min = fixedMin;\r\n            result.max = dataMax > fixedMin ? dataMax : fixedMin;\r\n        }\r\n        else if (result.hasFixedMax) {\r\n            result.min = dataMin < fixedMax ? dataMin : fixedMax;\r\n            result.max = fixedMax;\r\n        }\r\n        else if (result.hasDataRange) {\r\n            result.min = dataMin;\r\n            result.max = dataMax;\r\n        }\r\n        else {\r\n            result.min = 0;\r\n            result.max = 0;\r\n        }\r\n        result._ensureIncludeZero();\r\n        result._ensureNotEmpty();\r\n        result._ensureDirection();\r\n        if (result.min === 0) {\r\n            result.hasFixedMin = true; // If the range starts from zero we should prevent extending the intervals into the negative range\r\n        }\r\n        else if (result.max === 0) {\r\n            result.hasFixedMax = true; // If the range ends at zero we should prevent extending the intervals into the positive range\r\n        }\r\n        return result;\r\n    }\r\n    static calculateDataRange(dataMin, dataMax, includeZero) {\r\n        if (!ValueUtil.hasValue(dataMin) || !ValueUtil.hasValue(dataMax)) {\r\n            return NumericSequenceRange.calculateFixedRange(0, NumericSequenceRange.DEFAULT_MAX);\r\n        }\r\n        else {\r\n            return NumericSequenceRange.calculate(dataMin, dataMax, null, null, includeZero);\r\n        }\r\n    }\r\n    static calculateFixedRange(fixedMin, fixedMax, includeZero) {\r\n        let result = new NumericSequenceRange();\r\n        result.hasDataRange = false;\r\n        result.includeZero = includeZero;\r\n        result.min = fixedMin;\r\n        result.max = fixedMax;\r\n        result._ensureIncludeZero();\r\n        result._ensureNotEmpty();\r\n        result._ensureDirection();\r\n        result.hasFixedMin = true;\r\n        result.hasFixedMax = true;\r\n        return result;\r\n    }\r\n}\r\nNumericSequenceRange.DEFAULT_MAX = 10;\r\nNumericSequenceRange.MIN_SUPPORTED_DOUBLE = -1E307;\r\nNumericSequenceRange.MAX_SUPPORTED_DOUBLE = 1E307;\r\n/** Note: Exported for testability */\r\nexport var ValueUtil;\r\n(function (ValueUtil) {\r\n    function hasValue(value) {\r\n        return value !== undefined && value !== null;\r\n    }\r\n    ValueUtil.hasValue = hasValue;\r\n})(ValueUtil || (ValueUtil = {}));\r\n//# sourceMappingURL=numericSequenceRange.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nimport * as Double from \"../double\";\r\nimport { NumericSequenceRange } from \"./numericSequenceRange\";\r\nexport class NumericSequence {\r\n    static calculate(range, expectedCount, maxAllowedMargin, minPower, useZeroRefPoint, steps) {\r\n        let result = new NumericSequence();\r\n        if (expectedCount === undefined)\r\n            expectedCount = 10;\r\n        else\r\n            expectedCount = Double.ensureInRange(expectedCount, NumericSequence.MIN_COUNT, NumericSequence.MAX_COUNT);\r\n        if (minPower === undefined)\r\n            minPower = Double.MIN_EXP;\r\n        if (useZeroRefPoint === undefined)\r\n            useZeroRefPoint = false;\r\n        if (maxAllowedMargin === undefined)\r\n            maxAllowedMargin = 1;\r\n        if (steps === undefined)\r\n            steps = [1, 2, 5];\r\n        // Handle single stop case\r\n        if (range.forcedSingleStop) {\r\n            result.interval = range.getSize();\r\n            result.intervalOffset = result.interval - (range.forcedSingleStop - range.min);\r\n            result.min = range.min;\r\n            result.max = range.max;\r\n            result.sequence = [range.forcedSingleStop];\r\n            return result;\r\n        }\r\n        let interval = 0;\r\n        let min = 0;\r\n        let max = 9;\r\n        let canExtendMin = maxAllowedMargin > 0 && !range.hasFixedMin;\r\n        let canExtendMax = maxAllowedMargin > 0 && !range.hasFixedMax;\r\n        let size = range.getSize();\r\n        let exp = Double.log10(size);\r\n        // Account for Exp of steps\r\n        let stepExp = Double.log10(steps[0]);\r\n        exp = exp - stepExp;\r\n        // Account for MaxCount\r\n        let expectedCountExp = Double.log10(expectedCount);\r\n        exp = exp - expectedCountExp;\r\n        // Account for MinPower\r\n        exp = Math.max(exp, minPower - stepExp + 1);\r\n        let count = undefined;\r\n        // Create array of \"good looking\" numbers\r\n        if (interval !== 0) {\r\n            // If explicit interval is defined - use it instead of the steps array.\r\n            let power = Double.pow10(exp);\r\n            let roundMin = Double.floorToPrecision(range.min, power);\r\n            let roundMax = Double.ceilToPrecision(range.max, power);\r\n            let roundRange = NumericSequenceRange.calculateFixedRange(roundMin, roundMax);\r\n            roundRange.shrinkByStep(range, interval);\r\n            min = roundRange.min;\r\n            max = roundRange.max;\r\n            count = Math.floor(roundRange.getSize() / interval);\r\n        }\r\n        else {\r\n            // No interval defined -> find optimal interval\r\n            let dexp;\r\n            for (dexp = 0; dexp < 3; dexp++) {\r\n                let e = exp + dexp;\r\n                let power = Double.pow10(e);\r\n                let roundMin = Double.floorToPrecision(range.min, power);\r\n                let roundMax = Double.ceilToPrecision(range.max, power);\r\n                // Go throught the steps array looking for the smallest step that produces the right interval count.\r\n                let stepsCount = steps.length;\r\n                let stepPower = Double.pow10(e - 1);\r\n                for (let i = 0; i < stepsCount; i++) {\r\n                    let step = steps[i] * stepPower;\r\n                    let roundRange = NumericSequenceRange.calculateFixedRange(roundMin, roundMax, useZeroRefPoint);\r\n                    roundRange.shrinkByStep(range, step);\r\n                    // If the range is based on Data we might need to extend it to provide nice data margins.\r\n                    if (canExtendMin && range.min === roundRange.min && maxAllowedMargin >= 1)\r\n                        roundRange.min -= step;\r\n                    if (canExtendMax && range.max === roundRange.max && maxAllowedMargin >= 1)\r\n                        roundRange.max += step;\r\n                    // Count the intervals\r\n                    count = Double.ceilWithPrecision(roundRange.getSize() / step, Double.DEFAULT_PRECISION);\r\n                    if (count <= expectedCount || (dexp === 2 && i === stepsCount - 1) || (expectedCount === 1 && count === 2 && (step > range.getSize() || (range.min < 0 && range.max > 0 && step * 2 >= range.getSize())))) {\r\n                        interval = step;\r\n                        min = roundRange.min;\r\n                        max = roundRange.max;\r\n                        break;\r\n                    }\r\n                }\r\n                // Increase the scale power until the interval is found\r\n                if (interval !== 0)\r\n                    break;\r\n            }\r\n        }\r\n        // Avoid extreme count cases (>1000 ticks)\r\n        if (count > expectedCount * 32 || count > NumericSequence.MAX_COUNT) {\r\n            count = Math.min(expectedCount * 32, NumericSequence.MAX_COUNT);\r\n            interval = (max - min) / count;\r\n        }\r\n        result.min = min;\r\n        result.max = max;\r\n        result.interval = interval;\r\n        result.intervalOffset = min - range.min;\r\n        result.maxAllowedMargin = maxAllowedMargin;\r\n        result.canExtendMin = canExtendMin;\r\n        result.canExtendMax = canExtendMax;\r\n        // Fill in the Sequence\r\n        let precision = Double.getPrecision(interval, 0);\r\n        result.precision = precision;\r\n        let sequence = [];\r\n        let x = Double.roundToPrecision(min, precision);\r\n        sequence.push(x);\r\n        for (let i = 0; i < count; i++) {\r\n            x = Double.roundToPrecision(x + interval, precision);\r\n            sequence.push(x);\r\n        }\r\n        result.sequence = sequence;\r\n        result.trimMinMax(range.min, range.max);\r\n        return result;\r\n    }\r\n    /**\r\n     * Calculates the sequence of int numbers which are mapped to the multiples of the units grid.\r\n     * @min - The minimum of the range.\r\n     * @max - The maximum of the range.\r\n     * @maxCount - The max count of intervals.\r\n     * @steps - array of intervals.\r\n     */\r\n    static calculateUnits(min, max, maxCount, steps) {\r\n        // Initialization actions\r\n        maxCount = Double.ensureInRange(maxCount, NumericSequence.MIN_COUNT, NumericSequence.MAX_COUNT);\r\n        if (min === max) {\r\n            max = min + 1;\r\n        }\r\n        let stepCount = 0;\r\n        let step = 0;\r\n        // Calculate step\r\n        for (let i = 0; i < steps.length; i++) {\r\n            step = steps[i];\r\n            let maxStepCount = Double.ceilWithPrecision(max / step);\r\n            let minStepCount = Double.floorWithPrecision(min / step);\r\n            stepCount = maxStepCount - minStepCount;\r\n            if (stepCount <= maxCount) {\r\n                break;\r\n            }\r\n        }\r\n        // Calculate the offset\r\n        let offset = -min;\r\n        offset = offset % step;\r\n        // Create sequence\r\n        let result = new NumericSequence();\r\n        result.sequence = [];\r\n        for (let x = min + offset;; x += step) {\r\n            result.sequence.push(x);\r\n            if (x >= max)\r\n                break;\r\n        }\r\n        result.interval = step;\r\n        result.intervalOffset = offset;\r\n        result.min = result.sequence[0];\r\n        result.max = result.sequence[result.sequence.length - 1];\r\n        return result;\r\n    }\r\n    trimMinMax(min, max) {\r\n        let minMargin = (min - this.min) / this.interval;\r\n        let maxMargin = (this.max - max) / this.interval;\r\n        let marginPrecision = 0.001;\r\n        if (!this.canExtendMin || (minMargin > this.maxAllowedMargin && minMargin > marginPrecision)) {\r\n            this.min = min;\r\n        }\r\n        if (!this.canExtendMax || (maxMargin > this.maxAllowedMargin && maxMargin > marginPrecision)) {\r\n            this.max = max;\r\n        }\r\n    }\r\n}\r\nNumericSequence.MIN_COUNT = 1;\r\nNumericSequence.MAX_COUNT = 1000;\r\n//# sourceMappingURL=numericSequence.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nconst PxPtRatio = 4 / 3;\r\nconst PixelString = \"px\";\r\n/**\r\n * Appends 'px' to the end of number value for use as pixel string in styles\r\n */\r\nexport function toString(px) {\r\n    return px + PixelString;\r\n}\r\n/**\r\n * Converts point value (pt) to pixels\r\n * Returns a string for font-size property\r\n * e.g. fromPoint(8) => '24px'\r\n */\r\nexport function fromPoint(pt) {\r\n    return toString(fromPointToPixel(pt));\r\n}\r\n/**\r\n * Converts point value (pt) to pixels\r\n * Returns a number for font-size property\r\n * e.g. fromPoint(8) => 24px\r\n */\r\nexport function fromPointToPixel(pt) {\r\n    return (PxPtRatio * pt);\r\n}\r\n/**\r\n * Converts pixel value (px) to pt\r\n * e.g. toPoint(24) => 8\r\n */\r\nexport function toPoint(px) {\r\n    return px / PxPtRatio;\r\n}\r\n//# sourceMappingURL=pixelConverter.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n/**\r\n * Returns a new object with the provided obj as its prototype.\r\n */\r\nexport function inherit(obj, extension) {\r\n    function wrapCtor() { }\r\n    wrapCtor.prototype = obj;\r\n    let inherited = new wrapCtor();\r\n    if (extension)\r\n        extension(inherited);\r\n    return inherited;\r\n}\r\n/**\r\n * Returns a new object with the provided obj as its prototype\r\n * if, and only if, the prototype has not been previously set\r\n */\r\nexport function inheritSingle(obj) {\r\n    let proto = Object.getPrototypeOf(obj);\r\n    if (proto === Object.prototype || proto === Array.prototype)\r\n        obj = inherit(obj);\r\n    return obj;\r\n}\r\n/**\r\n * Uses the provided callback function to selectively replace contents in the provided array.\r\n * @return A new array with those values overriden\r\n * or undefined if no overrides are necessary.\r\n */\r\nexport function overrideArray(prototype, override) {\r\n    if (!prototype)\r\n        return;\r\n    let overwritten;\r\n    for (let i = 0, len = prototype.length; i < len; i++) {\r\n        let value = override(prototype[i]);\r\n        if (value) {\r\n            if (!overwritten)\r\n                overwritten = inherit(prototype);\r\n            overwritten[i] = value;\r\n        }\r\n    }\r\n    return overwritten;\r\n}\r\n//# sourceMappingURL=prototype.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n// powerbi.extensibility.utils.type\r\nimport { EnumExtensions } from \"./extensions/enumExtensions\";\r\nimport * as JsonComparer from \"./jsonComparer\";\r\n/** Describes a data value type, including a primitive type and extended type if any (derived from data category). */\r\nexport class ValueType {\r\n    /** Do not call the ValueType constructor directly. Use the ValueType.fromXXX methods. */\r\n    constructor(underlyingType, category, enumType, variantTypes) {\r\n        this.underlyingType = underlyingType;\r\n        this.category = category;\r\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Temporal)) {\r\n            this.temporalType = new TemporalType(underlyingType);\r\n        }\r\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Geography)) {\r\n            this.geographyType = new GeographyType(underlyingType);\r\n        }\r\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Miscellaneous)) {\r\n            this.miscType = new MiscellaneousType(underlyingType);\r\n        }\r\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Formatting)) {\r\n            this.formattingType = new FormattingType(underlyingType);\r\n        }\r\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Enumeration)) {\r\n            this.enumType = enumType;\r\n        }\r\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Scripting)) {\r\n            this.scriptingType = new ScriptType(underlyingType);\r\n        }\r\n        if (EnumExtensions.hasFlag(underlyingType, ExtendedType.Variant)) {\r\n            this.variationTypes = variantTypes;\r\n        }\r\n    }\r\n    /** Creates or retrieves a ValueType object based on the specified ValueTypeDescriptor. */\r\n    static fromDescriptor(descriptor) {\r\n        descriptor = descriptor || {};\r\n        // Simplified primitive types\r\n        if (descriptor.text)\r\n            return ValueType.fromExtendedType(ExtendedType.Text);\r\n        if (descriptor.integer)\r\n            return ValueType.fromExtendedType(ExtendedType.Integer);\r\n        if (descriptor.numeric)\r\n            return ValueType.fromExtendedType(ExtendedType.Double);\r\n        if (descriptor.bool)\r\n            return ValueType.fromExtendedType(ExtendedType.Boolean);\r\n        if (descriptor.dateTime)\r\n            return ValueType.fromExtendedType(ExtendedType.DateTime);\r\n        if (descriptor.duration)\r\n            return ValueType.fromExtendedType(ExtendedType.Duration);\r\n        if (descriptor.binary)\r\n            return ValueType.fromExtendedType(ExtendedType.Binary);\r\n        if (descriptor.none)\r\n            return ValueType.fromExtendedType(ExtendedType.None);\r\n        // Extended types\r\n        if (descriptor.scripting) {\r\n            if (descriptor.scripting.source)\r\n                return ValueType.fromExtendedType(ExtendedType.ScriptSource);\r\n        }\r\n        if (descriptor.enumeration)\r\n            return ValueType.fromEnum(descriptor.enumeration);\r\n        if (descriptor.temporal) {\r\n            if (descriptor.temporal.year)\r\n                return ValueType.fromExtendedType(ExtendedType.Years_Integer);\r\n            if (descriptor.temporal.quarter)\r\n                return ValueType.fromExtendedType(ExtendedType.Quarters_Integer);\r\n            if (descriptor.temporal.month)\r\n                return ValueType.fromExtendedType(ExtendedType.Months_Integer);\r\n            if (descriptor.temporal.day)\r\n                return ValueType.fromExtendedType(ExtendedType.DayOfMonth_Integer);\r\n            if (descriptor.temporal.paddedDateTableDate)\r\n                return ValueType.fromExtendedType(ExtendedType.PaddedDateTableDates);\r\n        }\r\n        if (descriptor.geography) {\r\n            if (descriptor.geography.address)\r\n                return ValueType.fromExtendedType(ExtendedType.Address);\r\n            if (descriptor.geography.city)\r\n                return ValueType.fromExtendedType(ExtendedType.City);\r\n            if (descriptor.geography.continent)\r\n                return ValueType.fromExtendedType(ExtendedType.Continent);\r\n            if (descriptor.geography.country)\r\n                return ValueType.fromExtendedType(ExtendedType.Country);\r\n            if (descriptor.geography.county)\r\n                return ValueType.fromExtendedType(ExtendedType.County);\r\n            if (descriptor.geography.region)\r\n                return ValueType.fromExtendedType(ExtendedType.Region);\r\n            if (descriptor.geography.postalCode)\r\n                return ValueType.fromExtendedType(ExtendedType.PostalCode_Text);\r\n            if (descriptor.geography.stateOrProvince)\r\n                return ValueType.fromExtendedType(ExtendedType.StateOrProvince);\r\n            if (descriptor.geography.place)\r\n                return ValueType.fromExtendedType(ExtendedType.Place);\r\n            if (descriptor.geography.latitude)\r\n                return ValueType.fromExtendedType(ExtendedType.Latitude_Double);\r\n            if (descriptor.geography.longitude)\r\n                return ValueType.fromExtendedType(ExtendedType.Longitude_Double);\r\n        }\r\n        if (descriptor.misc) {\r\n            if (descriptor.misc.image)\r\n                return ValueType.fromExtendedType(ExtendedType.Image);\r\n            if (descriptor.misc.imageUrl)\r\n                return ValueType.fromExtendedType(ExtendedType.ImageUrl);\r\n            if (descriptor.misc.webUrl)\r\n                return ValueType.fromExtendedType(ExtendedType.WebUrl);\r\n            if (descriptor.misc.barcode)\r\n                return ValueType.fromExtendedType(ExtendedType.Barcode_Text);\r\n        }\r\n        if (descriptor.formatting) {\r\n            if (descriptor.formatting.color)\r\n                return ValueType.fromExtendedType(ExtendedType.Color);\r\n            if (descriptor.formatting.formatString)\r\n                return ValueType.fromExtendedType(ExtendedType.FormatString);\r\n            if (descriptor.formatting.alignment)\r\n                return ValueType.fromExtendedType(ExtendedType.Alignment);\r\n            if (descriptor.formatting.labelDisplayUnits)\r\n                return ValueType.fromExtendedType(ExtendedType.LabelDisplayUnits);\r\n            if (descriptor.formatting.fontSize)\r\n                return ValueType.fromExtendedType(ExtendedType.FontSize);\r\n            if (descriptor.formatting.labelDensity)\r\n                return ValueType.fromExtendedType(ExtendedType.LabelDensity);\r\n        }\r\n        if (descriptor.extendedType) {\r\n            return ValueType.fromExtendedType(descriptor.extendedType);\r\n        }\r\n        if (descriptor.operations) {\r\n            if (descriptor.operations.searchEnabled)\r\n                return ValueType.fromExtendedType(ExtendedType.SearchEnabled);\r\n        }\r\n        if (descriptor.variant) {\r\n            let variantTypes = descriptor.variant.map((variantType) => ValueType.fromDescriptor(variantType));\r\n            return ValueType.fromVariant(variantTypes);\r\n        }\r\n        return ValueType.fromExtendedType(ExtendedType.Null);\r\n    }\r\n    /** Advanced: Generally use fromDescriptor instead. Creates or retrieves a ValueType object for the specified ExtendedType. */\r\n    static fromExtendedType(extendedType) {\r\n        extendedType = extendedType || ExtendedType.Null;\r\n        let primitiveType = getPrimitiveType(extendedType), category = getCategoryFromExtendedType(extendedType);\r\n        return ValueType.fromPrimitiveTypeAndCategory(primitiveType, category);\r\n    }\r\n    /** Creates or retrieves a ValueType object for the specified PrimitiveType and data category. */\r\n    static fromPrimitiveTypeAndCategory(primitiveType, category) {\r\n        primitiveType = primitiveType || PrimitiveType.Null;\r\n        category = category || null;\r\n        let id = primitiveType.toString();\r\n        if (category)\r\n            id += \"|\" + category;\r\n        return ValueType.typeCache[id] || (ValueType.typeCache[id] = new ValueType(toExtendedType(primitiveType, category), category));\r\n    }\r\n    /** Creates a ValueType to describe the given IEnumType. */\r\n    static fromEnum(enumType) {\r\n        return new ValueType(ExtendedType.Enumeration, null, enumType);\r\n    }\r\n    /** Creates a ValueType to describe the given Variant type. */\r\n    static fromVariant(variantTypes) {\r\n        return new ValueType(ExtendedType.Variant, /* category */ null, /* enumType */ null, variantTypes);\r\n    }\r\n    /** Determines if the specified type is compatible from at least one of the otherTypes. */\r\n    static isCompatibleTo(typeDescriptor, otherTypes) {\r\n        let valueType = ValueType.fromDescriptor(typeDescriptor);\r\n        for (let otherType of otherTypes) {\r\n            let otherValueType = ValueType.fromDescriptor(otherType);\r\n            if (otherValueType.isCompatibleFrom(valueType))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    /** Determines if the instance ValueType is convertable from the 'other' ValueType. */\r\n    isCompatibleFrom(other) {\r\n        let otherPrimitiveType = other.primitiveType;\r\n        if (this === other ||\r\n            this.primitiveType === otherPrimitiveType ||\r\n            otherPrimitiveType === PrimitiveType.Null ||\r\n            // Return true if both types are numbers\r\n            (this.numeric && other.numeric))\r\n            return true;\r\n        return false;\r\n    }\r\n    /**\r\n     * Determines if the instance ValueType is equal to the 'other' ValueType\r\n     * @param {ValueType} other the other ValueType to check equality against\r\n     * @returns True if the instance ValueType is equal to the 'other' ValueType\r\n     */\r\n    equals(other) {\r\n        return JsonComparer.equals(this, other);\r\n    }\r\n    /** Gets the exact primitive type of this ValueType. */\r\n    get primitiveType() {\r\n        return getPrimitiveType(this.underlyingType);\r\n    }\r\n    /** Gets the exact extended type of this ValueType. */\r\n    get extendedType() {\r\n        return this.underlyingType;\r\n    }\r\n    /** Gets the data category string (if any) for this ValueType. */\r\n    get categoryString() {\r\n        return this.category;\r\n    }\r\n    // Simplified primitive types\r\n    /** Indicates whether the type represents text values. */\r\n    get text() {\r\n        return this.primitiveType === PrimitiveType.Text;\r\n    }\r\n    /** Indicates whether the type represents any numeric value. */\r\n    get numeric() {\r\n        return EnumExtensions.hasFlag(this.underlyingType, ExtendedType.Numeric);\r\n    }\r\n    /** Indicates whether the type represents integer numeric values. */\r\n    get integer() {\r\n        return this.primitiveType === PrimitiveType.Integer;\r\n    }\r\n    /** Indicates whether the type represents Boolean values. */\r\n    get bool() {\r\n        return this.primitiveType === PrimitiveType.Boolean;\r\n    }\r\n    /** Indicates whether the type represents any date/time values. */\r\n    get dateTime() {\r\n        return this.primitiveType === PrimitiveType.DateTime ||\r\n            this.primitiveType === PrimitiveType.Date ||\r\n            this.primitiveType === PrimitiveType.Time;\r\n    }\r\n    /** Indicates whether the type represents duration values. */\r\n    get duration() {\r\n        return this.primitiveType === PrimitiveType.Duration;\r\n    }\r\n    /** Indicates whether the type represents binary values. */\r\n    get binary() {\r\n        return this.primitiveType === PrimitiveType.Binary;\r\n    }\r\n    /** Indicates whether the type represents none values. */\r\n    get none() {\r\n        return this.primitiveType === PrimitiveType.None;\r\n    }\r\n    // Extended types\r\n    /** Returns an object describing temporal values represented by the type, if it represents a temporal type. */\r\n    get temporal() {\r\n        return this.temporalType;\r\n    }\r\n    /** Returns an object describing geographic values represented by the type, if it represents a geographic type. */\r\n    get geography() {\r\n        return this.geographyType;\r\n    }\r\n    /** Returns an object describing the specific values represented by the type, if it represents a miscellaneous extended type. */\r\n    get misc() {\r\n        return this.miscType;\r\n    }\r\n    /** Returns an object describing the formatting values represented by the type, if it represents a formatting type. */\r\n    get formatting() {\r\n        return this.formattingType;\r\n    }\r\n    /** Returns an object describing the enum values represented by the type, if it represents an enumeration type. */\r\n    get enumeration() {\r\n        return this.enumType;\r\n    }\r\n    get scripting() {\r\n        return this.scriptingType;\r\n    }\r\n    /** Returns an array describing the variant values represented by the type, if it represents an Variant type. */\r\n    get variant() {\r\n        return this.variationTypes;\r\n    }\r\n}\r\nValueType.typeCache = {};\r\nexport class ScriptType {\r\n    constructor(underlyingType) {\r\n        this.underlyingType = underlyingType;\r\n    }\r\n    get source() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.ScriptSource);\r\n    }\r\n}\r\nexport class TemporalType {\r\n    constructor(underlyingType) {\r\n        this.underlyingType = underlyingType;\r\n    }\r\n    get year() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Years);\r\n    }\r\n    get quarter() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Quarters);\r\n    }\r\n    get month() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Months);\r\n    }\r\n    get day() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.DayOfMonth);\r\n    }\r\n    get paddedDateTableDate() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.PaddedDateTableDates);\r\n    }\r\n}\r\nexport class GeographyType {\r\n    constructor(underlyingType) {\r\n        this.underlyingType = underlyingType;\r\n    }\r\n    get address() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Address);\r\n    }\r\n    get city() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.City);\r\n    }\r\n    get continent() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Continent);\r\n    }\r\n    get country() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Country);\r\n    }\r\n    get county() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.County);\r\n    }\r\n    get region() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Region);\r\n    }\r\n    get postalCode() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.PostalCode);\r\n    }\r\n    get stateOrProvince() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.StateOrProvince);\r\n    }\r\n    get place() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Place);\r\n    }\r\n    get latitude() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Latitude);\r\n    }\r\n    get longitude() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Longitude);\r\n    }\r\n}\r\nexport class MiscellaneousType {\r\n    constructor(underlyingType) {\r\n        this.underlyingType = underlyingType;\r\n    }\r\n    get image() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Image);\r\n    }\r\n    get imageUrl() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.ImageUrl);\r\n    }\r\n    get webUrl() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.WebUrl);\r\n    }\r\n    get barcode() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Barcode);\r\n    }\r\n}\r\nexport class FormattingType {\r\n    constructor(underlyingType) {\r\n        this.underlyingType = underlyingType;\r\n    }\r\n    get color() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Color);\r\n    }\r\n    get formatString() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.FormatString);\r\n    }\r\n    get alignment() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.Alignment);\r\n    }\r\n    get labelDisplayUnits() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.LabelDisplayUnits);\r\n    }\r\n    get fontSize() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.FontSize);\r\n    }\r\n    get labelDensity() {\r\n        return matchesExtendedTypeWithAnyPrimitive(this.underlyingType, ExtendedType.LabelDensity);\r\n    }\r\n}\r\n/** Defines primitive value types. Must be consistent with types defined by server conceptual schema. */\r\nexport var PrimitiveType;\r\n(function (PrimitiveType) {\r\n    PrimitiveType[PrimitiveType[\"Null\"] = 0] = \"Null\";\r\n    PrimitiveType[PrimitiveType[\"Text\"] = 1] = \"Text\";\r\n    PrimitiveType[PrimitiveType[\"Decimal\"] = 2] = \"Decimal\";\r\n    PrimitiveType[PrimitiveType[\"Double\"] = 3] = \"Double\";\r\n    PrimitiveType[PrimitiveType[\"Integer\"] = 4] = \"Integer\";\r\n    PrimitiveType[PrimitiveType[\"Boolean\"] = 5] = \"Boolean\";\r\n    PrimitiveType[PrimitiveType[\"Date\"] = 6] = \"Date\";\r\n    PrimitiveType[PrimitiveType[\"DateTime\"] = 7] = \"DateTime\";\r\n    PrimitiveType[PrimitiveType[\"DateTimeZone\"] = 8] = \"DateTimeZone\";\r\n    PrimitiveType[PrimitiveType[\"Time\"] = 9] = \"Time\";\r\n    PrimitiveType[PrimitiveType[\"Duration\"] = 10] = \"Duration\";\r\n    PrimitiveType[PrimitiveType[\"Binary\"] = 11] = \"Binary\";\r\n    PrimitiveType[PrimitiveType[\"None\"] = 12] = \"None\";\r\n    PrimitiveType[PrimitiveType[\"Variant\"] = 13] = \"Variant\";\r\n})(PrimitiveType || (PrimitiveType = {}));\r\nvar PrimitiveTypeStrings;\r\n(function (PrimitiveTypeStrings) {\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Null\"] = 0] = \"Null\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Text\"] = 1] = \"Text\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Decimal\"] = 2] = \"Decimal\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Double\"] = 3] = \"Double\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Integer\"] = 4] = \"Integer\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Boolean\"] = 5] = \"Boolean\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Date\"] = 6] = \"Date\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"DateTime\"] = 7] = \"DateTime\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"DateTimeZone\"] = 8] = \"DateTimeZone\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Time\"] = 9] = \"Time\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Duration\"] = 10] = \"Duration\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Binary\"] = 11] = \"Binary\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"None\"] = 12] = \"None\";\r\n    PrimitiveTypeStrings[PrimitiveTypeStrings[\"Variant\"] = 13] = \"Variant\";\r\n})(PrimitiveTypeStrings || (PrimitiveTypeStrings = {}));\r\n/** Defines extended value types, which include primitive types and known data categories constrained to expected primitive types. */\r\nexport var ExtendedType;\r\n(function (ExtendedType) {\r\n    // Flags (1 << 8-15 range [0xFF00])\r\n    // Important: Enum members must be declared before they are used in TypeScript.\r\n    ExtendedType[ExtendedType[\"Numeric\"] = 256] = \"Numeric\";\r\n    ExtendedType[ExtendedType[\"Temporal\"] = 512] = \"Temporal\";\r\n    ExtendedType[ExtendedType[\"Geography\"] = 1024] = \"Geography\";\r\n    ExtendedType[ExtendedType[\"Miscellaneous\"] = 2048] = \"Miscellaneous\";\r\n    ExtendedType[ExtendedType[\"Formatting\"] = 4096] = \"Formatting\";\r\n    ExtendedType[ExtendedType[\"Scripting\"] = 8192] = \"Scripting\";\r\n    // Primitive types (0-255 range [0xFF] | flags)\r\n    // The member names and base values must match those in PrimitiveType.\r\n    ExtendedType[ExtendedType[\"Null\"] = 0] = \"Null\";\r\n    ExtendedType[ExtendedType[\"Text\"] = 1] = \"Text\";\r\n    ExtendedType[ExtendedType[\"Decimal\"] = 258] = \"Decimal\";\r\n    ExtendedType[ExtendedType[\"Double\"] = 259] = \"Double\";\r\n    ExtendedType[ExtendedType[\"Integer\"] = 260] = \"Integer\";\r\n    ExtendedType[ExtendedType[\"Boolean\"] = 5] = \"Boolean\";\r\n    ExtendedType[ExtendedType[\"Date\"] = 518] = \"Date\";\r\n    ExtendedType[ExtendedType[\"DateTime\"] = 519] = \"DateTime\";\r\n    ExtendedType[ExtendedType[\"DateTimeZone\"] = 520] = \"DateTimeZone\";\r\n    ExtendedType[ExtendedType[\"Time\"] = 521] = \"Time\";\r\n    ExtendedType[ExtendedType[\"Duration\"] = 10] = \"Duration\";\r\n    ExtendedType[ExtendedType[\"Binary\"] = 11] = \"Binary\";\r\n    ExtendedType[ExtendedType[\"None\"] = 12] = \"None\";\r\n    ExtendedType[ExtendedType[\"Variant\"] = 13] = \"Variant\";\r\n    // Extended types (0-32767 << 16 range [0xFFFF0000] | corresponding primitive type | flags)\r\n    // Temporal\r\n    ExtendedType[ExtendedType[\"Years\"] = 66048] = \"Years\";\r\n    ExtendedType[ExtendedType[\"Years_Text\"] = 66049] = \"Years_Text\";\r\n    ExtendedType[ExtendedType[\"Years_Integer\"] = 66308] = \"Years_Integer\";\r\n    ExtendedType[ExtendedType[\"Years_Date\"] = 66054] = \"Years_Date\";\r\n    ExtendedType[ExtendedType[\"Years_DateTime\"] = 66055] = \"Years_DateTime\";\r\n    ExtendedType[ExtendedType[\"Months\"] = 131584] = \"Months\";\r\n    ExtendedType[ExtendedType[\"Months_Text\"] = 131585] = \"Months_Text\";\r\n    ExtendedType[ExtendedType[\"Months_Integer\"] = 131844] = \"Months_Integer\";\r\n    ExtendedType[ExtendedType[\"Months_Date\"] = 131590] = \"Months_Date\";\r\n    ExtendedType[ExtendedType[\"Months_DateTime\"] = 131591] = \"Months_DateTime\";\r\n    ExtendedType[ExtendedType[\"PaddedDateTableDates\"] = 197127] = \"PaddedDateTableDates\";\r\n    ExtendedType[ExtendedType[\"Quarters\"] = 262656] = \"Quarters\";\r\n    ExtendedType[ExtendedType[\"Quarters_Text\"] = 262657] = \"Quarters_Text\";\r\n    ExtendedType[ExtendedType[\"Quarters_Integer\"] = 262916] = \"Quarters_Integer\";\r\n    ExtendedType[ExtendedType[\"Quarters_Date\"] = 262662] = \"Quarters_Date\";\r\n    ExtendedType[ExtendedType[\"Quarters_DateTime\"] = 262663] = \"Quarters_DateTime\";\r\n    ExtendedType[ExtendedType[\"DayOfMonth\"] = 328192] = \"DayOfMonth\";\r\n    ExtendedType[ExtendedType[\"DayOfMonth_Text\"] = 328193] = \"DayOfMonth_Text\";\r\n    ExtendedType[ExtendedType[\"DayOfMonth_Integer\"] = 328452] = \"DayOfMonth_Integer\";\r\n    ExtendedType[ExtendedType[\"DayOfMonth_Date\"] = 328198] = \"DayOfMonth_Date\";\r\n    ExtendedType[ExtendedType[\"DayOfMonth_DateTime\"] = 328199] = \"DayOfMonth_DateTime\";\r\n    // Geography\r\n    ExtendedType[ExtendedType[\"Address\"] = 6554625] = \"Address\";\r\n    ExtendedType[ExtendedType[\"City\"] = 6620161] = \"City\";\r\n    ExtendedType[ExtendedType[\"Continent\"] = 6685697] = \"Continent\";\r\n    ExtendedType[ExtendedType[\"Country\"] = 6751233] = \"Country\";\r\n    ExtendedType[ExtendedType[\"County\"] = 6816769] = \"County\";\r\n    ExtendedType[ExtendedType[\"Region\"] = 6882305] = \"Region\";\r\n    ExtendedType[ExtendedType[\"PostalCode\"] = 6947840] = \"PostalCode\";\r\n    ExtendedType[ExtendedType[\"PostalCode_Text\"] = 6947841] = \"PostalCode_Text\";\r\n    ExtendedType[ExtendedType[\"PostalCode_Integer\"] = 6948100] = \"PostalCode_Integer\";\r\n    ExtendedType[ExtendedType[\"StateOrProvince\"] = 7013377] = \"StateOrProvince\";\r\n    ExtendedType[ExtendedType[\"Place\"] = 7078913] = \"Place\";\r\n    ExtendedType[ExtendedType[\"Latitude\"] = 7144448] = \"Latitude\";\r\n    ExtendedType[ExtendedType[\"Latitude_Decimal\"] = 7144706] = \"Latitude_Decimal\";\r\n    ExtendedType[ExtendedType[\"Latitude_Double\"] = 7144707] = \"Latitude_Double\";\r\n    ExtendedType[ExtendedType[\"Longitude\"] = 7209984] = \"Longitude\";\r\n    ExtendedType[ExtendedType[\"Longitude_Decimal\"] = 7210242] = \"Longitude_Decimal\";\r\n    ExtendedType[ExtendedType[\"Longitude_Double\"] = 7210243] = \"Longitude_Double\";\r\n    // Miscellaneous\r\n    ExtendedType[ExtendedType[\"Image\"] = 13109259] = \"Image\";\r\n    ExtendedType[ExtendedType[\"ImageUrl\"] = 13174785] = \"ImageUrl\";\r\n    ExtendedType[ExtendedType[\"WebUrl\"] = 13240321] = \"WebUrl\";\r\n    ExtendedType[ExtendedType[\"Barcode\"] = 13305856] = \"Barcode\";\r\n    ExtendedType[ExtendedType[\"Barcode_Text\"] = 13305857] = \"Barcode_Text\";\r\n    ExtendedType[ExtendedType[\"Barcode_Integer\"] = 13306116] = \"Barcode_Integer\";\r\n    // Formatting\r\n    ExtendedType[ExtendedType[\"Color\"] = 19664897] = \"Color\";\r\n    ExtendedType[ExtendedType[\"FormatString\"] = 19730433] = \"FormatString\";\r\n    ExtendedType[ExtendedType[\"Alignment\"] = 20058113] = \"Alignment\";\r\n    ExtendedType[ExtendedType[\"LabelDisplayUnits\"] = 20123649] = \"LabelDisplayUnits\";\r\n    ExtendedType[ExtendedType[\"FontSize\"] = 20189443] = \"FontSize\";\r\n    ExtendedType[ExtendedType[\"LabelDensity\"] = 20254979] = \"LabelDensity\";\r\n    // Enumeration\r\n    ExtendedType[ExtendedType[\"Enumeration\"] = 26214401] = \"Enumeration\";\r\n    // Scripting\r\n    ExtendedType[ExtendedType[\"ScriptSource\"] = 32776193] = \"ScriptSource\";\r\n    // NOTE: To avoid confusion, underscores should be used only to delimit primitive type variants of an extended type\r\n    // (e.g. Year_Integer or Latitude_Double above)\r\n    // Operations\r\n    ExtendedType[ExtendedType[\"SearchEnabled\"] = 65541] = \"SearchEnabled\";\r\n})(ExtendedType || (ExtendedType = {}));\r\nvar ExtendedTypeStrings;\r\n(function (ExtendedTypeStrings) {\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Numeric\"] = 256] = \"Numeric\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Temporal\"] = 512] = \"Temporal\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Geography\"] = 1024] = \"Geography\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Miscellaneous\"] = 2048] = \"Miscellaneous\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Formatting\"] = 4096] = \"Formatting\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Scripting\"] = 8192] = \"Scripting\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Null\"] = 0] = \"Null\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Text\"] = 1] = \"Text\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Decimal\"] = 258] = \"Decimal\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Double\"] = 259] = \"Double\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Integer\"] = 260] = \"Integer\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Boolean\"] = 5] = \"Boolean\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Date\"] = 518] = \"Date\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DateTime\"] = 519] = \"DateTime\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DateTimeZone\"] = 520] = \"DateTimeZone\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Time\"] = 521] = \"Time\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Duration\"] = 10] = \"Duration\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Binary\"] = 11] = \"Binary\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"None\"] = 12] = \"None\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Variant\"] = 13] = \"Variant\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years\"] = 66048] = \"Years\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_Text\"] = 66049] = \"Years_Text\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_Integer\"] = 66308] = \"Years_Integer\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_Date\"] = 66054] = \"Years_Date\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Years_DateTime\"] = 66055] = \"Years_DateTime\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months\"] = 131584] = \"Months\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_Text\"] = 131585] = \"Months_Text\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_Integer\"] = 131844] = \"Months_Integer\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_Date\"] = 131590] = \"Months_Date\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Months_DateTime\"] = 131591] = \"Months_DateTime\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PaddedDateTableDates\"] = 197127] = \"PaddedDateTableDates\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters\"] = 262656] = \"Quarters\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_Text\"] = 262657] = \"Quarters_Text\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_Integer\"] = 262916] = \"Quarters_Integer\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_Date\"] = 262662] = \"Quarters_Date\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Quarters_DateTime\"] = 262663] = \"Quarters_DateTime\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth\"] = 328192] = \"DayOfMonth\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_Text\"] = 328193] = \"DayOfMonth_Text\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_Integer\"] = 328452] = \"DayOfMonth_Integer\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_Date\"] = 328198] = \"DayOfMonth_Date\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"DayOfMonth_DateTime\"] = 328199] = \"DayOfMonth_DateTime\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Address\"] = 6554625] = \"Address\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"City\"] = 6620161] = \"City\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Continent\"] = 6685697] = \"Continent\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Country\"] = 6751233] = \"Country\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"County\"] = 6816769] = \"County\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Region\"] = 6882305] = \"Region\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PostalCode\"] = 6947840] = \"PostalCode\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PostalCode_Text\"] = 6947841] = \"PostalCode_Text\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"PostalCode_Integer\"] = 6948100] = \"PostalCode_Integer\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"StateOrProvince\"] = 7013377] = \"StateOrProvince\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Place\"] = 7078913] = \"Place\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Latitude\"] = 7144448] = \"Latitude\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Latitude_Decimal\"] = 7144706] = \"Latitude_Decimal\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Latitude_Double\"] = 7144707] = \"Latitude_Double\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Longitude\"] = 7209984] = \"Longitude\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Longitude_Decimal\"] = 7210242] = \"Longitude_Decimal\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Longitude_Double\"] = 7210243] = \"Longitude_Double\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Image\"] = 13109259] = \"Image\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"ImageUrl\"] = 13174785] = \"ImageUrl\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"WebUrl\"] = 13240321] = \"WebUrl\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Barcode\"] = 13305856] = \"Barcode\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Barcode_Text\"] = 13305857] = \"Barcode_Text\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Barcode_Integer\"] = 13306116] = \"Barcode_Integer\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Color\"] = 19664897] = \"Color\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"FormatString\"] = 19730433] = \"FormatString\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Alignment\"] = 20058113] = \"Alignment\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"LabelDisplayUnits\"] = 20123649] = \"LabelDisplayUnits\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"FontSize\"] = 20189443] = \"FontSize\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"LabelDensity\"] = 20254979] = \"LabelDensity\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"Enumeration\"] = 26214401] = \"Enumeration\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"ScriptSource\"] = 32776193] = \"ScriptSource\";\r\n    ExtendedTypeStrings[ExtendedTypeStrings[\"SearchEnabled\"] = 65541] = \"SearchEnabled\";\r\n})(ExtendedTypeStrings || (ExtendedTypeStrings = {}));\r\nconst PrimitiveTypeMask = 0xFF;\r\nconst PrimitiveTypeWithFlagsMask = 0xFFFF;\r\nconst PrimitiveTypeFlagsExcludedMask = 0xFFFF0000;\r\nfunction getPrimitiveType(extendedType) {\r\n    return extendedType & PrimitiveTypeMask;\r\n}\r\nfunction isPrimitiveType(extendedType) {\r\n    return (extendedType & PrimitiveTypeWithFlagsMask) === extendedType;\r\n}\r\nfunction getCategoryFromExtendedType(extendedType) {\r\n    if (isPrimitiveType(extendedType))\r\n        return null;\r\n    let category = ExtendedTypeStrings[extendedType];\r\n    if (category) {\r\n        // Check for ExtendedType declaration without a primitive type.\r\n        // If exists, use it as category (e.g. Longitude rather than Longitude_Double)\r\n        // Otherwise use the ExtendedType declaration with a primitive type (e.g. Address)\r\n        let delimIdx = category.lastIndexOf(\"_\");\r\n        if (delimIdx > 0) {\r\n            let baseCategory = category.slice(0, delimIdx);\r\n            if (ExtendedTypeStrings[baseCategory]) {\r\n                category = baseCategory;\r\n            }\r\n        }\r\n    }\r\n    return category || null;\r\n}\r\nfunction toExtendedType(primitiveType, category) {\r\n    let primitiveString = PrimitiveTypeStrings[primitiveType];\r\n    let t = ExtendedTypeStrings[primitiveString];\r\n    if (t == null) {\r\n        t = ExtendedType.Null;\r\n    }\r\n    if (primitiveType && category) {\r\n        let categoryType = ExtendedTypeStrings[category];\r\n        if (categoryType) {\r\n            let categoryPrimitiveType = getPrimitiveType(categoryType);\r\n            if (categoryPrimitiveType === PrimitiveType.Null) {\r\n                // Category supports multiple primitive types, check if requested primitive type is supported\r\n                // (note: important to use t here rather than primitiveType as it may include primitive type flags)\r\n                categoryType = t | categoryType;\r\n                if (ExtendedTypeStrings[categoryType]) {\r\n                    t = categoryType;\r\n                }\r\n            }\r\n            else if (categoryPrimitiveType === primitiveType) {\r\n                // Primitive type matches the single supported type for the category\r\n                t = categoryType;\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nfunction matchesExtendedTypeWithAnyPrimitive(a, b) {\r\n    return (a & PrimitiveTypeFlagsExcludedMask) === (b & PrimitiveTypeFlagsExcludedMask);\r\n}\r\n//# sourceMappingURL=valueType.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n// NOTE: this file includes standalone utilities that should have no dependencies on external libraries, including jQuery.\r\n/**\r\n * Performs JSON-style comparison of two objects.\r\n */\r\nexport function equals(x, y) {\r\n    if (x === y)\r\n        return true;\r\n    return JSON.stringify(x) === JSON.stringify(y);\r\n}\r\n//# sourceMappingURL=jsonComparer.js.map","/*\r\n*  Power BI Visualizations\r\n*\r\n*  Copyright (c) Microsoft Corporation\r\n*  All rights reserved.\r\n*  MIT License\r\n*\r\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n*  in the Software without restriction, including without limitation the rights\r\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n*  copies of the Software, and to permit persons to whom the Software is\r\n*  furnished to do so, subject to the following conditions:\r\n*\r\n*  The above copyright notice and this permission notice shall be included in\r\n*  all copies or substantial portions of the Software.\r\n*\r\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*  THE SOFTWARE.\r\n*/\r\nconst HtmlTagRegex = new RegExp(\"[<>]\", \"g\");\r\n/**\r\n * Checks if a string ends with a sub-string.\r\n */\r\nexport function endsWith(str, suffix) {\r\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n}\r\nexport function format(...args) {\r\n    let s = args[0];\r\n    if (isNullOrUndefinedOrWhiteSpaceString(s))\r\n        return s;\r\n    for (let i = 0; i < args.length - 1; i++) {\r\n        let reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\r\n        s = s.replace(reg, args[i + 1]);\r\n    }\r\n    return s;\r\n}\r\n/**\r\n * Compares two strings for equality, ignoring case.\r\n */\r\nexport function equalIgnoreCase(a, b) {\r\n    return normalizeCase(a) === normalizeCase(b);\r\n}\r\nexport function startsWithIgnoreCase(a, b) {\r\n    let normalizedSearchString = normalizeCase(b);\r\n    return normalizeCase(a).indexOf(normalizedSearchString) === 0;\r\n}\r\nexport function startsWith(a, b) {\r\n    return a.indexOf(b) === 0;\r\n}\r\n/** Determines whether a string contains a specified substring (by case-sensitive comparison). */\r\nexport function contains(source, substring) {\r\n    if (source == null)\r\n        return false;\r\n    return source.indexOf(substring) !== -1;\r\n}\r\n/** Determines whether a string contains a specified substring (while ignoring case). */\r\nexport function containsIgnoreCase(source, substring) {\r\n    if (source == null)\r\n        return false;\r\n    return contains(normalizeCase(source), normalizeCase(substring));\r\n}\r\n/**\r\n * Normalizes case for a string.\r\n * Used by equalIgnoreCase method.\r\n */\r\nexport function normalizeCase(value) {\r\n    return value.toUpperCase();\r\n}\r\n/**\r\n * Receives a string and returns an ArrayBuffer of its characters.\r\n * @return An ArrayBuffer of the string's characters.\r\n * If the string is empty or null or undefined - returns null.\r\n */\r\nexport function stringToArrayBuffer(str) {\r\n    if (isNullOrEmpty(str)) {\r\n        return null;\r\n    }\r\n    let buffer = new ArrayBuffer(str.length);\r\n    let bufferView = new Uint8Array(buffer);\r\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\r\n        bufferView[i] = str.charCodeAt(i);\r\n    }\r\n    return bufferView;\r\n}\r\n/**\r\n * Is string null or empty or undefined?\r\n * @return True if the value is null or undefined or empty string,\r\n * otherwise false.\r\n */\r\nexport function isNullOrEmpty(value) {\r\n    return (value == null) || (value.length === 0);\r\n}\r\n/**\r\n * Returns true if the string is null, undefined, empty, or only includes white spaces.\r\n * @return True if the str is null, undefined, empty, or only includes white spaces,\r\n * otherwise false.\r\n */\r\nexport function isNullOrUndefinedOrWhiteSpaceString(str) {\r\n    return isNullOrEmpty(str) || isNullOrEmpty(str.trim());\r\n}\r\n/**\r\n * Returns a value indicating whether the str contains any whitespace.\r\n */\r\nexport function containsWhitespace(str) {\r\n    let expr = /\\s/;\r\n    return expr.test(str);\r\n}\r\n/**\r\n * Returns a value indicating whether the str is a whitespace string.\r\n */\r\nexport function isWhitespace(str) {\r\n    return str.trim() === \"\";\r\n}\r\n/**\r\n * Returns the string with any trailing whitespace from str removed.\r\n */\r\nexport function trimTrailingWhitespace(str) {\r\n    return str.replace(/\\s+$/, \"\");\r\n}\r\n/**\r\n * Returns the string with any leading and trailing whitespace from str removed.\r\n */\r\nexport function trimWhitespace(str) {\r\n    return str.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\r\n}\r\n/**\r\n * Returns length difference between the two provided strings.\r\n */\r\nexport function getLengthDifference(left, right) {\r\n    return Math.abs(left.length - right.length);\r\n}\r\n/**\r\n * Repeat char or string several times.\r\n * @param char The string to repeat.\r\n * @param count How many times to repeat the string.\r\n */\r\nexport function repeat(char, count) {\r\n    let result = \"\";\r\n    for (let i = 0; i < count; i++) {\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Replace all the occurrences of the textToFind in the text with the textToReplace.\r\n * @param text The original string.\r\n * @param textToFind Text to find in the original string.\r\n * @param textToReplace New text replacing the textToFind.\r\n */\r\nexport function replaceAll(text, textToFind, textToReplace) {\r\n    if (!textToFind)\r\n        return text;\r\n    let pattern = escapeStringForRegex(textToFind);\r\n    return text.replace(new RegExp(pattern, \"gi\"), textToReplace);\r\n}\r\nexport function ensureUniqueNames(names) {\r\n    let usedNames = {};\r\n    // Make sure we are giving fair chance for all columns to stay with their original name\r\n    // First we fill the used names map to contain all the original unique names from the list.\r\n    for (let name of names) {\r\n        usedNames[name] = false;\r\n    }\r\n    let uniqueNames = [];\r\n    // Now we go over all names and find a unique name for each\r\n    for (let name of names) {\r\n        let uniqueName = name;\r\n        // If the (original) column name is already taken lets try to find another name\r\n        if (usedNames[uniqueName]) {\r\n            let counter = 0;\r\n            // Find a name that is not already in the map\r\n            while (usedNames[uniqueName] !== undefined) {\r\n                uniqueName = name + \".\" + (++counter);\r\n            }\r\n        }\r\n        uniqueNames.push(uniqueName);\r\n        usedNames[uniqueName] = true;\r\n    }\r\n    return uniqueNames;\r\n}\r\n/**\r\n * Returns a name that is not specified in the values.\r\n */\r\nexport function findUniqueName(usedNames, baseName) {\r\n    // Find a unique name\r\n    let i = 0, uniqueName = baseName;\r\n    while (usedNames[uniqueName]) {\r\n        uniqueName = baseName + (++i);\r\n    }\r\n    return uniqueName;\r\n}\r\nexport function constructNameFromList(list, separator, maxCharacter) {\r\n    let labels = [];\r\n    let exceeded;\r\n    let length = 0;\r\n    for (let item of list) {\r\n        if (length + item.length > maxCharacter && labels.length > 0) {\r\n            exceeded = true;\r\n            break;\r\n        }\r\n        labels.push(item);\r\n        length += item.length;\r\n    }\r\n    let separatorWithSpace = \" \" + separator + \" \";\r\n    let name = labels.join(separatorWithSpace);\r\n    if (exceeded)\r\n        name += separatorWithSpace + \"...\";\r\n    return name;\r\n}\r\nexport function escapeStringForRegex(s) {\r\n    return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, \"\\\\$1\");\r\n}\r\n/**\r\n * Remove file name reserved characters <>:\"/\\|?* from input string.\r\n */\r\nexport function normalizeFileName(fileName) {\r\n    return fileName.replace(/[\\<\\>\\:\"\\/\\\\\\|\\?*]/g, \"\");\r\n}\r\n/**\r\n * Similar to JSON.stringify, but strips away escape sequences so that the resulting\r\n * string is human-readable (and parsable by JSON formatting/validating tools).\r\n */\r\nexport function stringifyAsPrettyJSON(object) {\r\n    // let specialCharacterRemover = (key: string, value: string) => value.replace(/[^\\w\\s]/gi, \"\");\r\n    return JSON.stringify(object /*, specialCharacterRemover*/);\r\n}\r\n/**\r\n * Derive a CLS-compliant name from a specified string.  If no allowed characters are present, return a fallback string instead.\r\n * TODO (6708134): this should have a fully Unicode-aware implementation\r\n */\r\nexport function deriveClsCompliantName(input, fallback) {\r\n    let result = input.replace(/^[^A-Za-z]*/g, \"\").replace(/[ :\\.\\/\\\\\\-\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000]/g, \"_\").replace(/[\\W]/g, \"\");\r\n    return result.length > 0 ? result : fallback;\r\n}\r\n/** Performs cheap sanitization by stripping away HTML tag (<>) characters. */\r\nexport function stripTagDelimiters(s) {\r\n    return s.replace(HtmlTagRegex, \"\");\r\n}\r\n//# sourceMappingURL=stringExtensions.js.map","/*\r\n*  Power BI Visualizations\r\n*\r\n*  Copyright (c) Microsoft Corporation\r\n*  All rights reserved.\r\n*  MIT License\r\n*\r\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n*  in the Software without restriction, including without limitation the rights\r\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n*  copies of the Software, and to permit persons to whom the Software is\r\n*  furnished to do so, subject to the following conditions:\r\n*\r\n*  The above copyright notice and this permission notice shall be included in\r\n*  all copies or substantial portions of the Software.\r\n*\r\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*  THE SOFTWARE.\r\n*/\r\n/** Enumeration of DateTimeUnits */\r\nexport var DateTimeUnit;\r\n(function (DateTimeUnit) {\r\n    DateTimeUnit[DateTimeUnit[\"Year\"] = 0] = \"Year\";\r\n    DateTimeUnit[DateTimeUnit[\"Month\"] = 1] = \"Month\";\r\n    DateTimeUnit[DateTimeUnit[\"Week\"] = 2] = \"Week\";\r\n    DateTimeUnit[DateTimeUnit[\"Day\"] = 3] = \"Day\";\r\n    DateTimeUnit[DateTimeUnit[\"Hour\"] = 4] = \"Hour\";\r\n    DateTimeUnit[DateTimeUnit[\"Minute\"] = 5] = \"Minute\";\r\n    DateTimeUnit[DateTimeUnit[\"Second\"] = 6] = \"Second\";\r\n    DateTimeUnit[DateTimeUnit[\"Millisecond\"] = 7] = \"Millisecond\";\r\n})(DateTimeUnit || (DateTimeUnit = {}));\r\n//# sourceMappingURL=iFormattingService.js.map","export default class DateFormatter {\r\n    static pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len)\r\n            val = \"0\" + val;\r\n        return val;\r\n    }\r\n    // Regexes and supporting functions are cached through closure\r\n    static format(date, mask, utc) {\r\n        let dF = DateFormatter;\r\n        // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\r\n        if (arguments.length === 1 && Object.prototype.toString.call(date) === \"[object String]\" && !/\\d/.test(date)) {\r\n            mask = date;\r\n            date = undefined;\r\n        }\r\n        // Passing date through Date applies Date.parse, if necessary\r\n        date = date ? new Date(date) : new Date;\r\n        if (isNaN(date))\r\n            throw SyntaxError(\"invalid date\");\r\n        mask = String(DateFormatter.masks[mask] || mask || DateFormatter.masks[\"default\"]);\r\n        // Allow setting the utc argument via the mask\r\n        if (mask.slice(0, 4) === \"UTC:\") {\r\n            mask = mask.slice(4);\r\n            utc = true;\r\n        }\r\n        let _ = utc ? \"getUTC\" : \"get\", d = date[_ + \"Date\"](), D = date[_ + \"Day\"](), M = date[_ + \"Month\"](), y = date[_ + \"FullYear\"](), H = date[_ + \"Hours\"](), m = date[_ + \"Minutes\"](), s = date[_ + \"Seconds\"](), L = date[_ + \"Milliseconds\"](), o = utc ? 0 : date.getTimezoneOffset(), flags = {\r\n            d: d,\r\n            dd: DateFormatter.pad(d),\r\n            ddd: dF.i18n.dayNames[D],\r\n            dddd: dF.i18n.dayNames[D + 7],\r\n            m: m,\r\n            mm: DateFormatter.pad(m),\r\n            mmm: dF.i18n.monthNames[m],\r\n            mmmm: dF.i18n.monthNames[m + 12],\r\n            MMM: dF.i18n.monthNames[M],\r\n            yy: String(y).slice(2),\r\n            yyyy: y,\r\n            h: H % 12 || 12,\r\n            hh: DateFormatter.pad(H % 12 || 12),\r\n            H: H,\r\n            HH: DateFormatter.pad(H),\r\n            M: M + 1,\r\n            MM: DateFormatter.pad(M + 1),\r\n            s: s,\r\n            ss: DateFormatter.pad(s),\r\n            l: DateFormatter.pad(L, 3),\r\n            L: DateFormatter.pad(L > 99 ? Math.round(L / 10) : L),\r\n            t: H < 12 ? \"a\" : \"p\",\r\n            tt: H < 12 ? \"AM\" : \"PM\",\r\n            T: H < 12 ? \"A\" : \"P\",\r\n            TT: H < 12 ? \"AM\" : \"PM\",\r\n            Z: utc ? \"UTC\" : (String(date).match(DateFormatter.timezone) || [\"\"]).pop().replace(DateFormatter.timezoneClip, \"\"),\r\n            o: (o > 0 ? \"-\" : \"+\") + DateFormatter.pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n            S: [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10]\r\n        };\r\n        return mask.replace(DateFormatter.token, function ($0) {\r\n            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n        });\r\n    }\r\n}\r\nDateFormatter.token = /d{1,4}|m{1,4}|M{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g;\r\nDateFormatter.timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\r\nDateFormatter.timezoneClip = /[^-+\\dA-Z]/g;\r\n// Some common format strings\r\nDateFormatter.masks = {\r\n    \"default\": \"ddd mmm dd yyyy HH:MM:ss\",\r\n    shortDate: \"m/d/yy\",\r\n    mediumDate: \"mmm d, yyyy\",\r\n    longDate: \"mmmm d, yyyy\",\r\n    fullDate: \"dddd, mmmm d, yyyy\",\r\n    shortTime: \"h:MM TT\",\r\n    mediumTime: \"h:MM:ss TT\",\r\n    longTime: \"h:MM:ss TT Z\",\r\n    isoDate: \"yyyy-mm-dd\",\r\n    isoTime: \"HH:MM:ss\",\r\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:ss\",\r\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\r\n};\r\n// Internationalization strings\r\nDateFormatter.i18n = {\r\n    dayNames: [\r\n        \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\r\n        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n    ],\r\n    monthNames: [\r\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ]\r\n};\r\n//# sourceMappingURL=dateFormatter.js.map","export default class NumberFormatter {\r\n    static expandNumber(number_, precision, formatInfo) {\r\n        let groupSizes = formatInfo.groupSizes, curSize = groupSizes[0], curGroupIndex = 1, factor = Math.pow(10, precision), rounded = Math.round(number_ * factor) / factor;\r\n        if (!isFinite(rounded)) {\r\n            rounded = number_;\r\n        }\r\n        number_ = rounded;\r\n        let numberString = number_ + \"\", right = \"\", split = numberString.split(/e/i), exponent = split.length > 1 ? parseInt(split[1], 10) : 0;\r\n        numberString = split[0];\r\n        split = numberString.split(\".\");\r\n        numberString = split[0];\r\n        right = split.length > 1 ? split[1] : \"\";\r\n        let l;\r\n        if (exponent > 0) {\r\n            right = NumberFormatter.zeroPad(right, exponent, false);\r\n            numberString += right.slice(0, exponent);\r\n            right = right.substr(exponent);\r\n        }\r\n        else if (exponent < 0) {\r\n            exponent = -exponent;\r\n            numberString = NumberFormatter.zeroPad(numberString, exponent + 1);\r\n            right = numberString.slice(-exponent, numberString.length) + right;\r\n            numberString = numberString.slice(0, -exponent);\r\n        }\r\n        if (precision > 0) {\r\n            right = formatInfo[\".\"] +\r\n                ((right.length > precision) ? right.slice(0, precision) : NumberFormatter.zeroPad(right, precision));\r\n        }\r\n        else {\r\n            right = \"\";\r\n        }\r\n        let stringIndex = numberString.length - 1, sep = formatInfo[\",\"], ret = \"\";\r\n        while (stringIndex >= 0) {\r\n            if (curSize === 0 || curSize > stringIndex) {\r\n                return numberString.slice(0, stringIndex + 1) + (ret.length ? (sep + ret + right) : right);\r\n            }\r\n            ret = numberString.slice(stringIndex - curSize + 1, stringIndex + 1) + (ret.length ? (sep + ret) : \"\");\r\n            stringIndex -= curSize;\r\n            if (curGroupIndex < groupSizes.length) {\r\n                curSize = groupSizes[curGroupIndex];\r\n                curGroupIndex++;\r\n            }\r\n        }\r\n        return numberString.slice(0, stringIndex + 1) + sep + ret + right;\r\n    }\r\n    static zeroPad(str, count, left) {\r\n        let l;\r\n        for (l = str.length; l < count; l += 1) {\r\n            str = (left ? (\"0\" + str) : (str + \"0\"));\r\n        }\r\n        return str;\r\n    }\r\n    static formatNumber(value, format, culture) {\r\n        if (!format || format === \"i\") {\r\n            return culture.name.length ? value.toLocaleString() : value.toString();\r\n        }\r\n        format = format || \"D\";\r\n        let nf = NumberFormatter.numberFormat, number_ = Math.abs(value), precision = -1, pattern;\r\n        if (format.length > 1)\r\n            precision = parseInt(format.slice(1), 10);\r\n        let current = format.charAt(0).toUpperCase(), formatInfo;\r\n        switch (current) {\r\n            case \"D\":\r\n                pattern = \"n\";\r\n                if (precision !== -1) {\r\n                    number_ = NumberFormatter.zeroPad(\"\" + number_, precision, true);\r\n                }\r\n                if (value < 0)\r\n                    number_ = -number_;\r\n                break;\r\n            case \"N\":\r\n                formatInfo = nf;\r\n            // fall through\r\n            case \"C\":\r\n                formatInfo = formatInfo || nf.currency;\r\n            // fall through\r\n            case \"P\":\r\n                formatInfo = formatInfo || nf.percent;\r\n                pattern = value < 0 ? formatInfo.pattern[0] : (formatInfo.pattern[1] || \"n\");\r\n                if (precision === -1)\r\n                    precision = formatInfo.decimals;\r\n                number_ = NumberFormatter.expandNumber(number_ * (current === \"P\" ? 100 : 1), precision, formatInfo);\r\n                break;\r\n            default:\r\n                throw \"Bad number format specifier: \" + current;\r\n        }\r\n        let patternParts = /n|\\$|-|%/g, ret = \"\";\r\n        for (;;) {\r\n            let index = patternParts.lastIndex, ar = patternParts.exec(pattern);\r\n            ret += pattern.slice(index, ar ? ar.index : pattern.length);\r\n            if (!ar) {\r\n                break;\r\n            }\r\n            switch (ar[0]) {\r\n                case \"n\":\r\n                    ret += number_;\r\n                    break;\r\n                case \"$\":\r\n                    ret += nf.currency.symbl;\r\n                    break;\r\n                case \"-\":\r\n                    // don't make 0 negative\r\n                    if (/[1-9]/.test(number_.toString())) {\r\n                        ret += nf[\"-\"];\r\n                    }\r\n                    break;\r\n                case \"%\":\r\n                    ret += nf.percent.symbl;\r\n                    break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n//# sourceMappingURL=numberFormatter.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n// powerbi.extensibility.utils.type\r\nimport { double as Double, regExpExtensions } from \"powerbi-visuals-utils-typeutils\";\r\nvar RegExpExtensions = regExpExtensions.RegExpExtensions;\r\n// powerbi.extensibility.utils.formatting\r\nimport * as stringExtensions from \"./../stringExtensions\";\r\nimport { findDateFormat, fixDateTimeFormat } from \"./../formatting\";\r\nimport { DateTimeUnit } from \"./iFormattingService\";\r\nimport powerbi from \"powerbi-visuals-api\";\r\nimport DateFormatter from \"./../date/dateFormatter\";\r\nimport NumberFormatter from \"./../number/numberFormatter\";\r\n/** Formatting Encoder */\r\nvar formattingEncoder;\r\n(function (formattingEncoder) {\r\n    // quoted and escaped literal patterns\r\n    // NOTE: the final three cases match .NET behavior\r\n    const literalPatterns = [\r\n        \"'[^']*'\",\r\n        `\"[^\"]*\"`,\r\n        \"\\\\\\\\.\",\r\n        \"'[^']*$\",\r\n        `\"[^\"]*$`,\r\n        \"\\\\\\\\$\",\r\n    ];\r\n    const literalMatcher = new RegExp(literalPatterns.join(\"|\"), \"g\");\r\n    // Unicode U+E000 - U+F8FF is a private area and so we can use the chars from the range to encode the escaped sequences\r\n    function removeLiterals(format) {\r\n        literalMatcher.lastIndex = 0;\r\n        // just in case consecutive non-literals have some meaning\r\n        return format.replace(literalMatcher, \"\\uE100\");\r\n    }\r\n    formattingEncoder.removeLiterals = removeLiterals;\r\n    function preserveLiterals(format, literals) {\r\n        literalMatcher.lastIndex = 0;\r\n        for (;;) {\r\n            let match = literalMatcher.exec(format);\r\n            if (!match)\r\n                break;\r\n            let literal = match[0];\r\n            let literalOffset = literalMatcher.lastIndex - literal.length;\r\n            let token = String.fromCharCode(0xE100 + literals.length);\r\n            literals.push(literal);\r\n            format = format.substr(0, literalOffset) + token + format.substr(literalMatcher.lastIndex);\r\n            // back to avoid skipping due to removed literal substring\r\n            literalMatcher.lastIndex = literalOffset + 1;\r\n        }\r\n        return format;\r\n    }\r\n    formattingEncoder.preserveLiterals = preserveLiterals;\r\n    function restoreLiterals(format, literals, quoted = true) {\r\n        let count = literals.length;\r\n        for (let i = 0; i < count; i++) {\r\n            let token = String.fromCharCode(0xE100 + i);\r\n            let literal = literals[i];\r\n            if (!quoted) {\r\n                // caller wants literals to be re-inserted without escaping\r\n                let firstChar = literal[0];\r\n                if (firstChar === \"\\\\\" || literal.length === 1 || literal[literal.length - 1] !== firstChar) {\r\n                    // either escaped literal OR quoted literal that's missing the trailing quote\r\n                    // in either case we only remove the leading character\r\n                    literal = literal.substring(1);\r\n                }\r\n                else {\r\n                    // so must be a quoted literal with both starting and ending quote\r\n                    literal = literal.substring(1, literal.length - 1);\r\n                }\r\n            }\r\n            format = format.replace(token, literal);\r\n        }\r\n        return format;\r\n    }\r\n    formattingEncoder.restoreLiterals = restoreLiterals;\r\n})(formattingEncoder || (formattingEncoder = {}));\r\nconst IndexedTokensRegex = /({{)|(}})|{(\\d+[^}]*)}/g;\r\nconst ZeroPlaceholder = \"0\";\r\nconst DigitPlaceholder = \"#\";\r\nconst ExponentialFormatChar = \"E\";\r\nconst NumericPlaceholders = [ZeroPlaceholder, DigitPlaceholder];\r\nconst NumericPlaceholderRegex = new RegExp(NumericPlaceholders.join(\"|\"), \"g\");\r\nclass Globalize {\r\n    static format(value, format, culture = null) {\r\n        if (!culture) {\r\n            culture = Globalize.enUSCulture;\r\n        }\r\n        if (value instanceof Date) {\r\n            if (typeof format === \"undefined\") {\r\n                value = Intl.DateTimeFormat(culture.name).format(value);\r\n            }\r\n            else {\r\n                value = DateFormatter.format(value, format, false);\r\n            }\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            if (typeof format === \"undefined\") {\r\n                value = value.toLocaleString(\"en-US\");\r\n            }\r\n            else {\r\n                value = NumberFormatter.formatNumber(value, format, {\r\n                    numberFormat: NumberFormatter.numberFormat\r\n                });\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\nGlobalize.enUSCulture = {\r\n    name: \"en\",\r\n    numberFormat: {\r\n        negativeInfinity: \"\",\r\n        positiveInfinity: \"\",\r\n        pattern: [\"-n\"],\r\n        decimals: 2,\r\n        \",\": \",\",\r\n        \".\": \".\",\r\n        groupSizes: [3],\r\n        \"+\": \"+\",\r\n        \"-\": \"-\",\r\n        percent: {\r\n            pattern: [\"-n %\", \"n %\"],\r\n            decimals: 2,\r\n            groupSizes: [3],\r\n            \",\": \",\",\r\n            \".\": \".\",\r\n            symbol: \"%\"\r\n        },\r\n        currency: {\r\n            pattern: [\"($n)\", \"$n\"],\r\n            decimals: 2,\r\n            groupSizes: [3],\r\n            \",\": \",\",\r\n            \".\": \".\",\r\n            symbol: \"$\"\r\n        }\r\n    },\r\n    calendar: {\r\n        \":\": \":\",\r\n        days: {\r\n            // full day names\r\n            names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n            // abbreviated day names\r\n            namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n            // shortest day names\r\n            namesShort: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"]\r\n        },\r\n        months: {\r\n            // full month names (13 months for lunar calendards -- 13th month should be \"\" if not lunar)\r\n            names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"\"],\r\n            // abbreviated month names\r\n            namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"\"]\r\n        },\r\n        // AM and PM designators in one of these forms:\r\n        // The usual view, and the upper and lower case versions\r\n        //   [ standard, lowercase, uppercase ]\r\n        // The culture does not use AM or PM (likely all standard date formats use 24 hour time)\r\n        //   null\r\n        AM: [\"AM\", \"am\", \"AM\"],\r\n        PM: [\"PM\", \"pm\", \"PM\"],\r\n        eras: [\r\n            // eras in reverse chronological order.\r\n            // name: the name of the era in this culture (e.g. A.D., C.E.)\r\n            // start: when the era starts in ticks (gregorian, gmt), null if it is the earliest supported era.\r\n            // offset: offset in years from gregorian calendar\r\n            {\r\n                \"name\": \"A.D.\",\r\n                \"start\": null,\r\n                \"offset\": 0\r\n            }\r\n        ],\r\n        firstDay: 0,\r\n        patterns: {\r\n            d: \"M/d/yyyy\",\r\n            D: \"dddd, MMMM dd, yyyy\",\r\n            t: \"h:mm tt\",\r\n            T: \"h:mm:ss tt\",\r\n            f: \"dddd, MMMM dd, yyyy h:mm tt\",\r\n            F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\r\n            M: \"MMMM dd\",\r\n            Y: \"yyyy MMMM\",\r\n            S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\"\r\n        }\r\n    },\r\n    calendars: {\r\n        standard: {\r\n            firstDay: 0,\r\n            patterns: {\r\n                d: \"M/d/yyyy\",\r\n                D: \"dddd, MMMM dd, yyyy\",\r\n                t: \"h:mm tt\",\r\n                T: \"h:mm:ss tt\",\r\n                f: \"dddd, MMMM dd, yyyy h:mm tt\",\r\n                F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\r\n                M: \"MMMM dd\",\r\n                Y: \"yyyy MMMM\",\r\n                S: \"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\"\r\n            }\r\n        }\r\n    }\r\n};\r\n/** Formatting Service */\r\nexport class FormattingService {\r\n    formatValue(value, format, cultureSelector) {\r\n        // Handle special cases\r\n        if (value === undefined || value === null) {\r\n            return \"\";\r\n        }\r\n        const gculture = this.getCulture(cultureSelector);\r\n        if (dateTimeFormat.canFormat(value)) {\r\n            // Dates\r\n            return dateTimeFormat.format(value, format, gculture);\r\n        }\r\n        else if (numberFormat.canFormat(value)) {\r\n            // Numbers\r\n            return numberFormat.format(value, format, gculture);\r\n        }\r\n        // Other data types - return as string\r\n        return value.toString();\r\n    }\r\n    format(formatWithIndexedTokens, args, culture) {\r\n        if (!formatWithIndexedTokens) {\r\n            return \"\";\r\n        }\r\n        let result = formatWithIndexedTokens.replace(IndexedTokensRegex, (match, left, right, argToken) => {\r\n            if (left) {\r\n                return \"{\";\r\n            }\r\n            else if (right) {\r\n                return \"}\";\r\n            }\r\n            else {\r\n                let parts = argToken.split(\":\");\r\n                let argIndex = parseInt(parts[0], 10);\r\n                let argFormat = parts[1];\r\n                return this.formatValue(args[argIndex], argFormat, culture);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    isStandardNumberFormat(format) {\r\n        return numberFormat.isStandardFormat(format);\r\n    }\r\n    formatNumberWithCustomOverride(value, format, nonScientificOverrideFormat, culture) {\r\n        let gculture = this.getCulture(culture);\r\n        return numberFormat.formatWithCustomOverride(value, format, nonScientificOverrideFormat, gculture);\r\n    }\r\n    dateFormatString(unit) {\r\n        if (!this._dateTimeScaleFormatInfo)\r\n            this.initialize();\r\n        return this._dateTimeScaleFormatInfo.getFormatString(unit);\r\n    }\r\n    /**\r\n     * Sets the current localization culture\r\n     * @param cultureSelector - name of a culture: \"en\", \"en-UK\", \"fr-FR\" etc. (See National Language Support (NLS) for full lists. Use \"default\" for invariant culture).\r\n     */\r\n    setCurrentCulture(cultureSelector) {\r\n        if (this._currentCultureSelector !== cultureSelector) {\r\n            this._currentCulture = this.getCulture(cultureSelector);\r\n            this._currentCultureSelector = cultureSelector;\r\n            this._dateTimeScaleFormatInfo = new DateTimeScaleFormatInfo(this._currentCulture);\r\n        }\r\n    }\r\n    /**\r\n     * Gets the culture assotiated with the specified cultureSelector (\"en\", \"en-US\", \"fr-FR\" etc).\r\n     * @param cultureSelector - name of a culture: \"en\", \"en-UK\", \"fr-FR\" etc. (See National Language Support (NLS) for full lists. Use \"default\" for invariant culture).\r\n     * Exposing this function for testability of unsupported cultures\r\n     */\r\n    getCulture(cultureSelector) {\r\n        return Globalize.enUSCulture;\r\n    }\r\n    /** By default the Globalization module initializes to the culture/calendar provided in the language/culture URL params */\r\n    initialize() {\r\n        let cultureName = this.getCurrentCulture();\r\n        this.setCurrentCulture(cultureName);\r\n        let calendarName = this.getUrlParam(\"calendar\");\r\n        if (calendarName) {\r\n            let culture = this._currentCulture;\r\n            let c = culture.calendars[calendarName];\r\n            if (c) {\r\n                culture.calendar = c;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *  Exposing this function for testability\r\n     */\r\n    getCurrentCulture() {\r\n        let urlParam = this.getUrlParam(\"language\");\r\n        if (urlParam) {\r\n            return urlParam;\r\n        }\r\n        if (powerbi && powerbi.common && powerbi.common.cultureInfo) {\r\n            // Get cultureInfo set in powerbi\r\n            return powerbi.common.cultureInfo;\r\n        }\r\n        return window.navigator.userLanguage || window.navigator[\"language\"] || \"en-US\";\r\n    }\r\n    /**\r\n     *  Exposing this function for testability\r\n     *  @param name: queryString name\r\n     */\r\n    getUrlParam(name) {\r\n        let param = window.location.search.match(RegExp(\"[?&]\" + name + \"=([^&]*)\"));\r\n        return param ? param[1] : undefined;\r\n    }\r\n}\r\n/**\r\n * DateTimeFormat module contains the static methods for formatting the DateTimes.\r\n * It extends the JQuery.Globalize functionality to support complete set of .NET\r\n * formatting expressions for dates.\r\n */\r\nvar dateTimeFormat;\r\n(function (dateTimeFormat) {\r\n    let _currentCachedFormat;\r\n    let _currentCachedProcessedFormat;\r\n    /** Evaluates if the value can be formatted using the NumberFormat */\r\n    function canFormat(value) {\r\n        let result = value instanceof Date;\r\n        return result;\r\n    }\r\n    dateTimeFormat.canFormat = canFormat;\r\n    /** Formats the date using provided format and culture */\r\n    function format(value, format, culture) {\r\n        format = format || \"G\";\r\n        let isStandard = format.length === 1;\r\n        try {\r\n            if (isStandard) {\r\n                return formatDateStandard(value, format, culture);\r\n            }\r\n            else {\r\n                return formatDateCustom(value, format, culture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return formatDateStandard(value, \"G\", culture);\r\n        }\r\n    }\r\n    dateTimeFormat.format = format;\r\n    /** Formats the date using standard format expression */\r\n    function formatDateStandard(value, format, culture) {\r\n        // In order to provide parity with .NET we have to support additional set of DateTime patterns.\r\n        let patterns = culture.calendar.patterns;\r\n        // Extend supported set of patterns\r\n        ensurePatterns(culture.calendar);\r\n        // Handle extended set of formats\r\n        let output = findDateFormat(value, format, culture.name);\r\n        if (output.format.length === 1)\r\n            format = patterns[output.format];\r\n        else\r\n            format = output.format;\r\n        // need to revisit when globalization is enabled\r\n        if (!culture) {\r\n            culture = this.getCurrentCulture();\r\n        }\r\n        return Globalize.format(output.value, format, culture);\r\n    }\r\n    /** Formats the date using custom format expression */\r\n    function formatDateCustom(value, format, culture) {\r\n        let result;\r\n        let literals = [];\r\n        format = formattingEncoder.preserveLiterals(format, literals);\r\n        if (format.indexOf(\"F\") > -1) {\r\n            // F is not supported so we need to replace the F with f based on the milliseconds\r\n            // Replace all sequences of F longer than 3 with \"FFF\"\r\n            format = stringExtensions.replaceAll(format, \"FFFF\", \"FFF\");\r\n            // Based on milliseconds update the format to use fff\r\n            let milliseconds = value.getMilliseconds();\r\n            if (milliseconds % 10 >= 1) {\r\n                format = stringExtensions.replaceAll(format, \"FFF\", \"fff\");\r\n            }\r\n            format = stringExtensions.replaceAll(format, \"FFF\", \"FF\");\r\n            if ((milliseconds % 100) / 10 >= 1) {\r\n                format = stringExtensions.replaceAll(format, \"FF\", \"ff\");\r\n            }\r\n            format = stringExtensions.replaceAll(format, \"FF\", \"F\");\r\n            if ((milliseconds % 1000) / 100 >= 1) {\r\n                format = stringExtensions.replaceAll(format, \"F\", \"f\");\r\n            }\r\n            format = stringExtensions.replaceAll(format, \"F\", \"\");\r\n            if (format === \"\" || format === \"%\")\r\n                return \"\";\r\n        }\r\n        format = processCustomDateTimeFormat(format);\r\n        result = Globalize.format(value, format, culture);\r\n        result = localize(result, culture.calendar);\r\n        result = formattingEncoder.restoreLiterals(result, literals, false);\r\n        return result;\r\n    }\r\n    /** Translates unsupported .NET custom format expressions to the custom expressions supported by JQuery.Globalize */\r\n    function processCustomDateTimeFormat(format) {\r\n        if (format === _currentCachedFormat) {\r\n            return _currentCachedProcessedFormat;\r\n        }\r\n        _currentCachedFormat = format;\r\n        format = fixDateTimeFormat(format);\r\n        _currentCachedProcessedFormat = format;\r\n        return format;\r\n    }\r\n    /** Localizes the time separator symbol */\r\n    function localize(value, dictionary) {\r\n        let timeSeparator = dictionary[\":\"];\r\n        if (timeSeparator === \":\") {\r\n            return value;\r\n        }\r\n        let result = \"\";\r\n        let count = value.length;\r\n        for (let i = 0; i < count; i++) {\r\n            let char = value.charAt(i);\r\n            switch (char) {\r\n                case \":\":\r\n                    result += timeSeparator;\r\n                    break;\r\n                default:\r\n                    result += char;\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function ensurePatterns(calendar) {\r\n        let patterns = calendar.patterns;\r\n        if (patterns[\"g\"] === undefined) {\r\n            patterns[\"g\"] = patterns[\"f\"].replace(patterns[\"D\"], patterns[\"d\"]); // Generic: Short date, short time\r\n            patterns[\"G\"] = patterns[\"F\"].replace(patterns[\"D\"], patterns[\"d\"]); // Generic: Short date, long time\r\n        }\r\n    }\r\n})(dateTimeFormat || (dateTimeFormat = {}));\r\n/**\r\n * NumberFormat module contains the static methods for formatting the numbers.\r\n * It extends the JQuery.Globalize functionality to support complete set of .NET\r\n * formatting expressions for numeric types including custom formats.\r\n */\r\nexport var numberFormat;\r\n(function (numberFormat) {\r\n    const NonScientificFormatRegex = /^\\{.+\\}.*/;\r\n    const NumericalPlaceHolderRegex = /\\{.+\\}/;\r\n    const ScientificFormatRegex = /e[+-]*[0#]+/i;\r\n    const StandardFormatRegex = /^[a-z]\\d{0,2}$/i; // a letter + up to 2 digits for precision specifier\r\n    const TrailingZerosRegex = /0+$/;\r\n    const DecimalFormatRegex = /\\.([0#]*)/g;\r\n    const NumericFormatRegex = /[0#,\\.]+[0,#]*/g;\r\n    // (?=...) is a positive lookahead assertion. The RE is asking for the last digit placeholder, [0#],\r\n    // which is followed by non-digit placeholders and the end of string, [^0#]*$. But it only matches\r\n    // the last digit placeholder, not anything that follows because the positive lookahead isn\"t included\r\n    // in the match - it is only a condition.\r\n    const LastNumericPlaceholderRegex = /([0#])(?=[^0#]*$)/;\r\n    const DecimalFormatCharacter = \".\";\r\n    numberFormat.NumberFormatComponentsDelimeter = \";\";\r\n    function getNonScientificFormatWithPrecision(baseFormat, numericFormat) {\r\n        if (!numericFormat || baseFormat === undefined)\r\n            return baseFormat;\r\n        let newFormat = \"{0:\" + numericFormat + \"}\";\r\n        return baseFormat.replace(\"{0}\", newFormat);\r\n    }\r\n    function getNumericFormat(value, baseFormat) {\r\n        if (baseFormat == null)\r\n            return baseFormat;\r\n        if (hasFormatComponents(baseFormat)) {\r\n            let { positive, negative, zero } = numberFormat.getComponents(baseFormat);\r\n            if (value > 0)\r\n                return getNumericFormatFromComponent(value, positive);\r\n            else if (value === 0)\r\n                return getNumericFormatFromComponent(value, zero);\r\n            return getNumericFormatFromComponent(value, negative);\r\n        }\r\n        return getNumericFormatFromComponent(value, baseFormat);\r\n    }\r\n    numberFormat.getNumericFormat = getNumericFormat;\r\n    function getNumericFormatFromComponent(value, format) {\r\n        let match = RegExpExtensions.run(NumericFormatRegex, format);\r\n        if (match)\r\n            return match[0];\r\n        return format;\r\n    }\r\n    function addDecimalsToFormat(baseFormat, decimals, trailingZeros) {\r\n        if (decimals == null)\r\n            return baseFormat;\r\n        // Default format string\r\n        if (baseFormat == null)\r\n            baseFormat = ZeroPlaceholder;\r\n        if (hasFormatComponents(baseFormat)) {\r\n            let { positive, negative, zero } = numberFormat.getComponents(baseFormat);\r\n            let formats = [positive, negative, zero];\r\n            for (let i = 0; i < formats.length; i++) {\r\n                // Update format in formats array\r\n                formats[i] = addDecimalsToFormatComponent(formats[i], decimals, trailingZeros);\r\n            }\r\n            return formats.join(numberFormat.NumberFormatComponentsDelimeter);\r\n        }\r\n        return addDecimalsToFormatComponent(baseFormat, decimals, trailingZeros);\r\n    }\r\n    numberFormat.addDecimalsToFormat = addDecimalsToFormat;\r\n    function addDecimalsToFormatComponent(format, decimals, trailingZeros) {\r\n        decimals = Math.abs(decimals);\r\n        if (decimals >= 0) {\r\n            let literals = [];\r\n            format = formattingEncoder.preserveLiterals(format, literals);\r\n            let placeholder = trailingZeros ? ZeroPlaceholder : DigitPlaceholder;\r\n            let decimalPlaceholders = stringExtensions.repeat(placeholder, Math.abs(decimals));\r\n            let match = RegExpExtensions.run(DecimalFormatRegex, format);\r\n            if (match) {\r\n                let beforeDecimal = format.substr(0, match.index);\r\n                let formatDecimal = format.substr(match.index + 1, match[1].length);\r\n                let afterDecimal = format.substr(match.index + match[0].length);\r\n                if (trailingZeros)\r\n                    // Use explicit decimals argument as placeholders\r\n                    formatDecimal = decimalPlaceholders;\r\n                else {\r\n                    let decimalChange = decimalPlaceholders.length - formatDecimal.length;\r\n                    if (decimalChange > 0)\r\n                        // Append decimalPlaceholders to existing decimal portion of format string\r\n                        formatDecimal = formatDecimal + decimalPlaceholders.slice(-decimalChange);\r\n                    else if (decimalChange < 0)\r\n                        // Remove decimals from formatDecimal\r\n                        formatDecimal = formatDecimal.slice(0, decimalChange);\r\n                }\r\n                if (formatDecimal.length > 0)\r\n                    formatDecimal = DecimalFormatCharacter + formatDecimal;\r\n                format = beforeDecimal + formatDecimal + afterDecimal;\r\n            }\r\n            else if (decimalPlaceholders.length > 0) {\r\n                // Replace last numeric placeholder with decimal portion\r\n                format = format.replace(LastNumericPlaceholderRegex, \"$1\" + DecimalFormatCharacter + decimalPlaceholders);\r\n            }\r\n            if (literals.length !== 0)\r\n                format = formattingEncoder.restoreLiterals(format, literals);\r\n        }\r\n        return format;\r\n    }\r\n    function hasFormatComponents(format) {\r\n        return formattingEncoder.removeLiterals(format).indexOf(numberFormat.NumberFormatComponentsDelimeter) !== -1;\r\n    }\r\n    numberFormat.hasFormatComponents = hasFormatComponents;\r\n    function getComponents(format) {\r\n        let signFormat = {\r\n            hasNegative: false,\r\n            positive: format,\r\n            negative: format,\r\n            zero: format,\r\n        };\r\n        // escape literals so semi-colon in a literal isn't interpreted as a delimiter\r\n        // NOTE: OK to use the literals extracted here for all three components before since the literals are indexed.\r\n        // For example, \"'pos-lit';'neg-lit'\" will get preserved as \"\\uE000;\\uE001\" and the literal array will be\r\n        // ['pos-lit', 'neg-lit']. When the negative components is restored, its \\uE001 will select the second\r\n        // literal.\r\n        let literals = [];\r\n        format = formattingEncoder.preserveLiterals(format, literals);\r\n        let signSpecificFormats = format.split(numberFormat.NumberFormatComponentsDelimeter);\r\n        let formatCount = signSpecificFormats.length;\r\n        if (formatCount > 1) {\r\n            if (literals.length !== 0)\r\n                signSpecificFormats = signSpecificFormats.map((signSpecificFormat) => formattingEncoder.restoreLiterals(signSpecificFormat, literals));\r\n            signFormat.hasNegative = true;\r\n            signFormat.positive = signFormat.zero = signSpecificFormats[0];\r\n            signFormat.negative = signSpecificFormats[1];\r\n            if (formatCount > 2)\r\n                signFormat.zero = signSpecificFormats[2];\r\n        }\r\n        return signFormat;\r\n    }\r\n    numberFormat.getComponents = getComponents;\r\n    let _lastCustomFormatMeta;\r\n    /** Evaluates if the value can be formatted using the NumberFormat */\r\n    function canFormat(value) {\r\n        let result = typeof (value) === \"number\";\r\n        return result;\r\n    }\r\n    numberFormat.canFormat = canFormat;\r\n    function isStandardFormat(format) {\r\n        return StandardFormatRegex.test(format);\r\n    }\r\n    numberFormat.isStandardFormat = isStandardFormat;\r\n    /** Formats the number using specified format expression and culture */\r\n    function format(value, format, culture) {\r\n        format = format || \"G\";\r\n        try {\r\n            if (isStandardFormat(format))\r\n                return formatNumberStandard(value, format, culture);\r\n            return formatNumberCustom(value, format, culture);\r\n        }\r\n        catch (e) {\r\n            return Globalize.format(value, undefined, culture);\r\n        }\r\n    }\r\n    numberFormat.format = format;\r\n    /** Performs a custom format with a value override.  Typically used for custom formats showing scaled values. */\r\n    function formatWithCustomOverride(value, format, nonScientificOverrideFormat, culture) {\r\n        return formatNumberCustom(value, format, culture, nonScientificOverrideFormat);\r\n    }\r\n    numberFormat.formatWithCustomOverride = formatWithCustomOverride;\r\n    /** Formats the number using standard format expression */\r\n    function formatNumberStandard(value, format, culture) {\r\n        let result;\r\n        let precision = (format.length > 1 ? parseInt(format.substr(1, format.length - 1), 10) : undefined);\r\n        let numberFormatInfo = Globalize.enUSCulture.numberFormat;\r\n        let formatChar = format.charAt(0);\r\n        switch (formatChar) {\r\n            case \"e\":\r\n            case \"E\":\r\n                if (precision === undefined) {\r\n                    precision = 6;\r\n                }\r\n                let mantissaDecimalDigits = stringExtensions.repeat(\"0\", precision);\r\n                format = \"0.\" + mantissaDecimalDigits + formatChar + \"+000\";\r\n                result = formatNumberCustom(value, format, culture);\r\n                break;\r\n            case \"f\":\r\n            case \"F\":\r\n                result = precision !== undefined ? value.toFixed(precision) : value.toFixed(numberFormatInfo.decimals);\r\n                result = localize(result, numberFormatInfo);\r\n                break;\r\n            case \"g\":\r\n            case \"G\":\r\n                let abs = Math.abs(value);\r\n                if (abs === 0 || (1E-4 <= abs && abs < 1E15)) {\r\n                    // For the range of 0.0001 to 1,000,000,000,000,000 - use the normal form\r\n                    result = precision !== undefined ? value.toPrecision(precision) : value.toString();\r\n                }\r\n                else {\r\n                    // Otherwise use exponential\r\n                    // Assert that value is a number and fall back on returning value if it is not\r\n                    if (typeof (value) !== \"number\")\r\n                        return String(value);\r\n                    result = precision !== undefined ? value.toExponential(precision) : value.toExponential();\r\n                    result = result.replace(\"e\", \"E\");\r\n                }\r\n                result = localize(result, numberFormatInfo);\r\n                break;\r\n            case \"r\":\r\n            case \"R\":\r\n                result = value.toString();\r\n                result = localize(result, numberFormatInfo);\r\n                break;\r\n            case \"x\":\r\n            case \"X\":\r\n                result = value.toString(16);\r\n                if (formatChar === \"X\") {\r\n                    result = result.toUpperCase();\r\n                }\r\n                if (precision !== undefined) {\r\n                    let actualPrecision = result.length;\r\n                    let isNegative = value < 0;\r\n                    if (isNegative) {\r\n                        actualPrecision--;\r\n                    }\r\n                    let paddingZerosCount = precision - actualPrecision;\r\n                    let paddingZeros = undefined;\r\n                    if (paddingZerosCount > 0) {\r\n                        paddingZeros = stringExtensions.repeat(\"0\", paddingZerosCount);\r\n                    }\r\n                    if (isNegative) {\r\n                        result = \"-\" + paddingZeros + result.substr(1);\r\n                    }\r\n                    else {\r\n                        result = paddingZeros + result;\r\n                    }\r\n                }\r\n                result = localize(result, numberFormatInfo);\r\n                break;\r\n            default:\r\n                result = Globalize.format(value, format, culture);\r\n        }\r\n        return result;\r\n    }\r\n    /** Formats the number using custom format expression */\r\n    function formatNumberCustom(value, format, culture, nonScientificOverrideFormat) {\r\n        let result;\r\n        let numberFormatInfo = {\r\n            negativeInfinity: \"\",\r\n            positiveInfinity: \"\",\r\n            pattern: [\"-n\"],\r\n            decimals: 2,\r\n            \",\": \",\",\r\n            \".\": \".\",\r\n            groupSizes: [3],\r\n            \"+\": \"+\",\r\n            \"-\": \"-\",\r\n            percent: {\r\n                pattern: [\"-n %\", \"n %\"],\r\n                decimals: 2,\r\n                groupSizes: [3],\r\n                \",\": \",\",\r\n                \".\": \".\",\r\n                symbol: \"%\"\r\n            },\r\n            currency: {\r\n                pattern: [\"($n)\", \"$n\"],\r\n                decimals: 2,\r\n                groupSizes: [3],\r\n                \",\": \",\",\r\n                \".\": \".\",\r\n                symbol: \"$\"\r\n            }\r\n        };\r\n        if (isFinite(value)) {\r\n            // Split format by positive[;negative;zero] pattern\r\n            let formatComponents = getComponents(format);\r\n            // Pick a format based on the sign of value\r\n            if (value > 0) {\r\n                format = formatComponents.positive;\r\n            }\r\n            else if (value === 0) {\r\n                format = formatComponents.zero;\r\n            }\r\n            else {\r\n                format = formatComponents.negative;\r\n            }\r\n            // Normalize value if we have an explicit negative format\r\n            if (formatComponents.hasNegative)\r\n                value = Math.abs(value);\r\n            // Get format metadata\r\n            let formatMeta = getCustomFormatMetadata(format, true /*calculatePrecision*/);\r\n            // Preserve literals and escaped chars\r\n            let literals = [];\r\n            if (formatMeta.hasLiterals) {\r\n                format = formattingEncoder.preserveLiterals(format, literals);\r\n            }\r\n            // Scientific format\r\n            if (formatMeta.hasE && !nonScientificOverrideFormat) {\r\n                let scientificMatch = RegExpExtensions.run(ScientificFormatRegex, format);\r\n                if (scientificMatch) {\r\n                    // Case 2.1. Scientific custom format\r\n                    let formatM = format.substr(0, scientificMatch.index);\r\n                    let formatE = format.substr(scientificMatch.index + 2); // E(+|-)\r\n                    let precision = getCustomFormatPrecision(formatM, formatMeta);\r\n                    let scale = getCustomFormatScale(formatM, formatMeta);\r\n                    if (scale !== 1) {\r\n                        value = value * scale;\r\n                    }\r\n                    // Assert that value is a number and fall back on returning value if it is not\r\n                    if (typeof (value) !== \"number\")\r\n                        return String(value);\r\n                    let s = value.toExponential(precision);\r\n                    let indexOfE = s.indexOf(\"e\");\r\n                    let mantissa = s.substr(0, indexOfE);\r\n                    let exp = s.substr(indexOfE + 1);\r\n                    let resultM = fuseNumberWithCustomFormat(mantissa, formatM, numberFormatInfo);\r\n                    let resultE = fuseNumberWithCustomFormat(exp, formatE, numberFormatInfo);\r\n                    if (resultE.charAt(0) === \"+\" && scientificMatch[0].charAt(1) !== \"+\") {\r\n                        resultE = resultE.substr(1);\r\n                    }\r\n                    let e = scientificMatch[0].charAt(0);\r\n                    result = resultM + e + resultE;\r\n                }\r\n            }\r\n            // Non scientific format\r\n            if (result === undefined) {\r\n                let valueFormatted;\r\n                let isValueGlobalized = false;\r\n                let precision = getCustomFormatPrecision(format, formatMeta);\r\n                let scale = getCustomFormatScale(format, formatMeta);\r\n                if (scale !== 1)\r\n                    value = value * scale;\r\n                // Rounding\r\n                value = parseFloat(toNonScientific(value, precision));\r\n                if (!isFinite(value)) {\r\n                    // very large and small finite values can become infinite by parseFloat(toNonScientific())\r\n                    return Globalize.format(value, undefined);\r\n                }\r\n                if (nonScientificOverrideFormat) {\r\n                    // Get numeric format from format string\r\n                    let numericFormat = numberFormat.getNumericFormat(value, format);\r\n                    // Add separators and decimalFormat to nonScientificFormat\r\n                    nonScientificOverrideFormat = getNonScientificFormatWithPrecision(nonScientificOverrideFormat, numericFormat);\r\n                    // Format the value\r\n                    valueFormatted = formattingService.format(nonScientificOverrideFormat, [value], culture.name);\r\n                    isValueGlobalized = true;\r\n                }\r\n                else\r\n                    valueFormatted = toNonScientific(value, precision);\r\n                result = fuseNumberWithCustomFormat(valueFormatted, format, numberFormatInfo, nonScientificOverrideFormat, isValueGlobalized);\r\n            }\r\n            if (formatMeta.hasLiterals) {\r\n                result = formattingEncoder.restoreLiterals(result, literals, false);\r\n            }\r\n            _lastCustomFormatMeta = formatMeta;\r\n        }\r\n        else {\r\n            return Globalize.format(value, undefined);\r\n        }\r\n        return result;\r\n    }\r\n    /** Returns string with the fixed point respresentation of the number */\r\n    function toNonScientific(value, precision) {\r\n        let result = \"\";\r\n        let precisionZeros = 0;\r\n        // Double precision numbers support actual 15-16 decimal digits of precision.\r\n        if (precision > 16) {\r\n            precisionZeros = precision - 16;\r\n            precision = 16;\r\n        }\r\n        let digitsBeforeDecimalPoint = Double.log10(Math.abs(value));\r\n        if (digitsBeforeDecimalPoint < 16) {\r\n            if (digitsBeforeDecimalPoint > 0) {\r\n                let maxPrecision = 16 - digitsBeforeDecimalPoint;\r\n                if (precision > maxPrecision) {\r\n                    precisionZeros += precision - maxPrecision;\r\n                    precision = maxPrecision;\r\n                }\r\n            }\r\n            result = value.toFixed(precision);\r\n        }\r\n        else if (digitsBeforeDecimalPoint === 16) {\r\n            result = value.toFixed(0);\r\n            precisionZeros += precision;\r\n            if (precisionZeros > 0) {\r\n                result += \".\";\r\n            }\r\n        }\r\n        else { // digitsBeforeDecimalPoint > 16\r\n            // Different browsers have different implementations of the toFixed().\r\n            // In IE it returns fixed format no matter what's the number. In FF and Chrome the method returns exponential format for numbers greater than 1E21.\r\n            // So we need to check for range and convert the to exponential with the max precision.\r\n            // Then we convert exponential string to fixed by removing the dot and padding with \"power\" zeros.\r\n            // Assert that value is a number and fall back on returning value if it is not\r\n            if (typeof (value) !== \"number\")\r\n                return String(value);\r\n            result = value.toExponential(15);\r\n            let indexOfE = result.indexOf(\"e\");\r\n            if (indexOfE > 0) {\r\n                let indexOfDot = result.indexOf(\".\");\r\n                let mantissa = result.substr(0, indexOfE);\r\n                let exp = result.substr(indexOfE + 1);\r\n                let powerZeros = parseInt(exp, 10) - (mantissa.length - indexOfDot - 1);\r\n                result = mantissa.replace(\".\", \"\") + stringExtensions.repeat(\"0\", powerZeros);\r\n                if (precision > 0) {\r\n                    result = result + \".\" + stringExtensions.repeat(\"0\", precision);\r\n                }\r\n            }\r\n        }\r\n        if (precisionZeros > 0) {\r\n            result = result + stringExtensions.repeat(\"0\", precisionZeros);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Returns the formatMetadata of the format\r\n     * When calculating precision and scale, if format string of\r\n     * positive[;negative;zero] => positive format will be used\r\n     * @param (required) format - format string\r\n     * @param (optional) calculatePrecision - calculate precision of positive format\r\n     * @param (optional) calculateScale - calculate scale of positive format\r\n     */\r\n    function getCustomFormatMetadata(format, calculatePrecision, calculateScale, calculatePartsPerScale) {\r\n        if (_lastCustomFormatMeta !== undefined && format === _lastCustomFormatMeta.format) {\r\n            return _lastCustomFormatMeta;\r\n        }\r\n        let literals = [];\r\n        let escaped = formattingEncoder.preserveLiterals(format, literals);\r\n        let result = {\r\n            format: format,\r\n            hasLiterals: literals.length !== 0,\r\n            hasE: false,\r\n            hasCommas: false,\r\n            hasDots: false,\r\n            hasPercent: false,\r\n            hasPermile: false,\r\n            precision: undefined,\r\n            scale: undefined,\r\n            partsPerScale: undefined,\r\n        };\r\n        for (let i = 0, length = escaped.length; i < length; i++) {\r\n            let c = escaped.charAt(i);\r\n            switch (c) {\r\n                case \"e\":\r\n                case \"E\":\r\n                    result.hasE = true;\r\n                    break;\r\n                case \",\":\r\n                    result.hasCommas = true;\r\n                    break;\r\n                case \".\":\r\n                    result.hasDots = true;\r\n                    break;\r\n                case \"%\":\r\n                    result.hasPercent = true;\r\n                    break;\r\n                case \"\\u2030\": // ‰\r\n                    result.hasPermile = true;\r\n                    break;\r\n            }\r\n        }\r\n        // Use positive format for calculating these values\r\n        let formatComponents = getComponents(format);\r\n        if (calculatePrecision)\r\n            result.precision = getCustomFormatPrecision(formatComponents.positive, result);\r\n        if (calculatePartsPerScale)\r\n            result.partsPerScale = getCustomFormatPartsPerScale(formatComponents.positive, result);\r\n        if (calculateScale)\r\n            result.scale = getCustomFormatScale(formatComponents.positive, result);\r\n        return result;\r\n    }\r\n    numberFormat.getCustomFormatMetadata = getCustomFormatMetadata;\r\n    /** Returns the decimal precision of format based on the number of # and 0 chars after the decimal point\r\n      * Important: The input format string needs to be split to the appropriate pos/neg/zero portion to work correctly */\r\n    function getCustomFormatPrecision(format, formatMeta) {\r\n        if (formatMeta.precision > -1) {\r\n            return formatMeta.precision;\r\n        }\r\n        let result = 0;\r\n        if (formatMeta.hasDots) {\r\n            if (formatMeta.hasLiterals) {\r\n                format = formattingEncoder.removeLiterals(format);\r\n            }\r\n            let dotIndex = format.indexOf(\".\");\r\n            if (dotIndex > -1) {\r\n                let count = format.length;\r\n                for (let i = dotIndex; i < count; i++) {\r\n                    let char = format.charAt(i);\r\n                    if (char.match(NumericPlaceholderRegex))\r\n                        result++;\r\n                    // 0.00E+0 :: Break before counting 0 in\r\n                    // exponential portion of format string\r\n                    if (char === ExponentialFormatChar)\r\n                        break;\r\n                }\r\n                result = Math.min(19, result);\r\n            }\r\n        }\r\n        formatMeta.precision = result;\r\n        return result;\r\n    }\r\n    function getCustomFormatPartsPerScale(format, formatMeta) {\r\n        if (formatMeta.partsPerScale != null)\r\n            return formatMeta.partsPerScale;\r\n        let result = 1;\r\n        if (formatMeta.hasPercent && format.indexOf(\"%\") > -1) {\r\n            result = result * 100;\r\n        }\r\n        if (formatMeta.hasPermile && format.indexOf(/* ‰ */ \"\\u2030\") > -1) {\r\n            result = result * 1000;\r\n        }\r\n        formatMeta.partsPerScale = result;\r\n        return result;\r\n    }\r\n    /** Returns the scale factor of the format based on the \"%\" and scaling \",\" chars in the format */\r\n    function getCustomFormatScale(format, formatMeta) {\r\n        if (formatMeta.scale > -1) {\r\n            return formatMeta.scale;\r\n        }\r\n        let result = getCustomFormatPartsPerScale(format, formatMeta);\r\n        if (formatMeta.hasCommas) {\r\n            let dotIndex = format.indexOf(\".\");\r\n            if (dotIndex === -1) {\r\n                dotIndex = format.length;\r\n            }\r\n            for (let i = dotIndex - 1; i > -1; i--) {\r\n                let char = format.charAt(i);\r\n                if (char === \",\") {\r\n                    result = result / 1000;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        formatMeta.scale = result;\r\n        return result;\r\n    }\r\n    function fuseNumberWithCustomFormat(value, format, numberFormatInfo, nonScientificOverrideFormat, isValueGlobalized) {\r\n        let suppressModifyValue = !!nonScientificOverrideFormat;\r\n        let formatParts = format.split(\".\", 2);\r\n        if (formatParts.length === 2) {\r\n            let wholeFormat = formatParts[0];\r\n            let fractionFormat = formatParts[1];\r\n            let displayUnit = \"\";\r\n            // Remove display unit from value before splitting on \".\" as localized display units sometimes end with \".\"\r\n            if (nonScientificOverrideFormat) {\r\n                displayUnit = nonScientificOverrideFormat.replace(NumericalPlaceHolderRegex, \"\");\r\n                value = value.replace(displayUnit, \"\");\r\n            }\r\n            let globalizedDecimalSeparator = numberFormatInfo[\".\"];\r\n            let decimalSeparator = isValueGlobalized ? globalizedDecimalSeparator : \".\";\r\n            let valueParts = value.split(decimalSeparator, 2);\r\n            let wholeValue = valueParts.length === 1 ? valueParts[0] + displayUnit : valueParts[0];\r\n            let fractionValue = valueParts.length === 2 ? valueParts[1] + displayUnit : \"\";\r\n            fractionValue = fractionValue.replace(TrailingZerosRegex, \"\");\r\n            let wholeFormattedValue = fuseNumberWithCustomFormatLeft(wholeValue, wholeFormat, numberFormatInfo, suppressModifyValue);\r\n            let fractionFormattedValue = fuseNumberWithCustomFormatRight(fractionValue, fractionFormat, suppressModifyValue);\r\n            if (fractionFormattedValue.fmtOnly || fractionFormattedValue.value === \"\")\r\n                return wholeFormattedValue + fractionFormattedValue.value;\r\n            return wholeFormattedValue + globalizedDecimalSeparator + fractionFormattedValue.value;\r\n        }\r\n        return fuseNumberWithCustomFormatLeft(value, format, numberFormatInfo, suppressModifyValue);\r\n    }\r\n    function fuseNumberWithCustomFormatLeft(value, format, numberFormatInfo, suppressModifyValue) {\r\n        let groupSymbolIndex = format.indexOf(\",\");\r\n        let enableGroups = groupSymbolIndex > -1 && groupSymbolIndex < Math.max(format.lastIndexOf(\"0\"), format.lastIndexOf(\"#\")) && numberFormatInfo[\",\"];\r\n        let groupDigitCount = 0;\r\n        let groupIndex = 0;\r\n        let groupSizes = numberFormatInfo.groupSizes || [3];\r\n        let groupSize = groupSizes[0];\r\n        let groupSeparator = numberFormatInfo[\",\"];\r\n        let sign = \"\";\r\n        let firstChar = value.charAt(0);\r\n        if (firstChar === \"+\" || firstChar === \"-\") {\r\n            sign = numberFormatInfo[firstChar];\r\n            value = value.substr(1);\r\n        }\r\n        let isZero = value === \"0\";\r\n        let result = \"\";\r\n        let leftBuffer = \"\";\r\n        let vi = value.length - 1;\r\n        let fmtOnly = true;\r\n        // Iterate through format chars and replace 0 and # with the digits from the value string\r\n        for (let fi = format.length - 1; fi > -1; fi--) {\r\n            let formatChar = format.charAt(fi);\r\n            switch (formatChar) {\r\n                case ZeroPlaceholder:\r\n                case DigitPlaceholder:\r\n                    fmtOnly = false;\r\n                    if (leftBuffer !== \"\") {\r\n                        result = leftBuffer + result;\r\n                        leftBuffer = \"\";\r\n                    }\r\n                    if (!suppressModifyValue) {\r\n                        if (vi > -1 || formatChar === ZeroPlaceholder) {\r\n                            if (enableGroups) {\r\n                                // If the groups are enabled we'll need to keep track of the current group index and periodically insert group separator,\r\n                                if (groupDigitCount === groupSize) {\r\n                                    result = groupSeparator + result;\r\n                                    groupIndex++;\r\n                                    if (groupIndex < groupSizes.length) {\r\n                                        groupSize = groupSizes[groupIndex];\r\n                                    }\r\n                                    groupDigitCount = 1;\r\n                                }\r\n                                else {\r\n                                    groupDigitCount++;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (vi > -1) {\r\n                            if (isZero && formatChar === DigitPlaceholder) {\r\n                                // Special case - if we need to format a zero value and the # symbol is used - we don't copy it into the result)\r\n                            }\r\n                            else {\r\n                                result = value.charAt(vi) + result;\r\n                            }\r\n                            vi--;\r\n                        }\r\n                        else if (formatChar !== DigitPlaceholder) {\r\n                            result = formatChar + result;\r\n                        }\r\n                    }\r\n                    break;\r\n                case \",\":\r\n                    // We should skip all the , chars\r\n                    break;\r\n                default:\r\n                    leftBuffer = formatChar + leftBuffer;\r\n                    break;\r\n            }\r\n        }\r\n        // If the value didn't fit into the number of zeros provided in the format then we should insert the missing part of the value into the result\r\n        if (!suppressModifyValue) {\r\n            if (vi > -1 && result !== \"\") {\r\n                if (enableGroups) {\r\n                    while (vi > -1) {\r\n                        if (groupDigitCount === groupSize) {\r\n                            result = groupSeparator + result;\r\n                            groupIndex++;\r\n                            if (groupIndex < groupSizes.length) {\r\n                                groupSize = groupSizes[groupIndex];\r\n                            }\r\n                            groupDigitCount = 1;\r\n                        }\r\n                        else {\r\n                            groupDigitCount++;\r\n                        }\r\n                        result = value.charAt(vi) + result;\r\n                        vi--;\r\n                    }\r\n                }\r\n                else {\r\n                    result = value.substr(0, vi + 1) + result;\r\n                }\r\n            }\r\n            // Insert sign in front of the leftBuffer and result\r\n            return sign + leftBuffer + result;\r\n        }\r\n        if (fmtOnly)\r\n            // If the format doesn't specify any digits to be displayed, then just return the format we've parsed up until now.\r\n            return sign + leftBuffer + result;\r\n        return sign + leftBuffer + value + result;\r\n    }\r\n    function fuseNumberWithCustomFormatRight(value, format, suppressModifyValue) {\r\n        let vi = 0;\r\n        let fCount = format.length;\r\n        let vCount = value.length;\r\n        if (suppressModifyValue) {\r\n            let lastChar = format.charAt(fCount - 1);\r\n            if (!lastChar.match(NumericPlaceholderRegex))\r\n                return {\r\n                    value: value + lastChar,\r\n                    fmtOnly: value === \"\",\r\n                };\r\n            return {\r\n                value: value,\r\n                fmtOnly: value === \"\",\r\n            };\r\n        }\r\n        let result = \"\", fmtOnly = true;\r\n        for (let fi = 0; fi < fCount; fi++) {\r\n            let formatChar = format.charAt(fi);\r\n            if (vi < vCount) {\r\n                switch (formatChar) {\r\n                    case ZeroPlaceholder:\r\n                    case DigitPlaceholder:\r\n                        result += value[vi++];\r\n                        fmtOnly = false;\r\n                        break;\r\n                    default:\r\n                        result += formatChar;\r\n                }\r\n            }\r\n            else {\r\n                if (formatChar !== DigitPlaceholder) {\r\n                    result += formatChar;\r\n                    fmtOnly = fmtOnly && (formatChar !== ZeroPlaceholder);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: result,\r\n            fmtOnly: fmtOnly,\r\n        };\r\n    }\r\n    function localize(value, dictionary) {\r\n        let plus = dictionary[\"+\"];\r\n        let minus = dictionary[\"-\"];\r\n        let dot = dictionary[\".\"];\r\n        let comma = dictionary[\",\"];\r\n        if (plus === \"+\" && minus === \"-\" && dot === \".\" && comma === \",\") {\r\n            return value;\r\n        }\r\n        let count = value.length;\r\n        let result = \"\";\r\n        for (let i = 0; i < count; i++) {\r\n            let char = value.charAt(i);\r\n            switch (char) {\r\n                case \"+\":\r\n                    result = result + plus;\r\n                    break;\r\n                case \"-\":\r\n                    result = result + minus;\r\n                    break;\r\n                case \".\":\r\n                    result = result + dot;\r\n                    break;\r\n                case \",\":\r\n                    result = result + comma;\r\n                    break;\r\n                default:\r\n                    result = result + char;\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n})(numberFormat || (numberFormat = {}));\r\n/** DateTimeScaleFormatInfo is used to calculate and keep the Date formats used for different units supported by the DateTimeScaleModel */\r\nclass DateTimeScaleFormatInfo {\r\n    // Constructor\r\n    /**\r\n     * Creates new instance of the DateTimeScaleFormatInfo class.\r\n     * @param culture - culture which calendar info is going to be used to derive the formats.\r\n     */\r\n    constructor(culture) {\r\n        let calendar = culture.calendar;\r\n        let patterns = calendar.patterns;\r\n        let monthAbbreviations = calendar[\"months\"][\"namesAbbr\"];\r\n        let cultureHasMonthAbbr = monthAbbreviations && monthAbbreviations[0];\r\n        let yearMonthPattern = patterns[\"Y\"];\r\n        let monthDayPattern = patterns[\"M\"];\r\n        let fullPattern = patterns[\"f\"];\r\n        let longTimePattern = patterns[\"T\"];\r\n        let shortTimePattern = patterns[\"t\"];\r\n        let separator = fullPattern.indexOf(\",\") > -1 ? \", \" : \" \";\r\n        let hasYearSymbol = yearMonthPattern.indexOf(\"yyyy'\") === 0 && yearMonthPattern.length > 6 && yearMonthPattern[6] === \"\\'\";\r\n        this.YearPattern = hasYearSymbol ? yearMonthPattern.substr(0, 7) : \"yyyy\";\r\n        let yearPos = fullPattern.indexOf(\"yy\");\r\n        let monthPos = fullPattern.indexOf(\"MMMM\");\r\n        this.MonthPattern = cultureHasMonthAbbr && monthPos > -1 ? (yearPos > monthPos ? \"MMM yyyy\" : \"yyyy MMM\") : yearMonthPattern;\r\n        this.DayPattern = cultureHasMonthAbbr ? monthDayPattern.replace(\"MMMM\", \"MMM\") : monthDayPattern;\r\n        let minutePos = fullPattern.indexOf(\"mm\");\r\n        let pmPos = fullPattern.indexOf(\"tt\");\r\n        let shortHourPattern = pmPos > -1 ? shortTimePattern.replace(\":mm \", \"\") : shortTimePattern;\r\n        this.HourPattern = yearPos < minutePos ? this.DayPattern + separator + shortHourPattern : shortHourPattern + separator + this.DayPattern;\r\n        this.MinutePattern = shortTimePattern;\r\n        this.SecondPattern = longTimePattern;\r\n        this.MillisecondPattern = longTimePattern.replace(\"ss\", \"ss.fff\");\r\n        // Special cases\r\n        switch (culture.name) {\r\n            case \"fi-FI\":\r\n                this.DayPattern = this.DayPattern.replace(\"'ta'\", \"\"); // Fix for finish 'ta' suffix for month names.\r\n                this.HourPattern = this.HourPattern.replace(\"'ta'\", \"\");\r\n                break;\r\n        }\r\n    }\r\n    // Methods\r\n    /**\r\n     * Returns the format string of the provided DateTimeUnit.\r\n     * @param unit - date or time unit\r\n     */\r\n    getFormatString(unit) {\r\n        switch (unit) {\r\n            case DateTimeUnit.Year:\r\n                return this.YearPattern;\r\n            case DateTimeUnit.Month:\r\n                return this.MonthPattern;\r\n            case DateTimeUnit.Week:\r\n            case DateTimeUnit.Day:\r\n                return this.DayPattern;\r\n            case DateTimeUnit.Hour:\r\n                return this.HourPattern;\r\n            case DateTimeUnit.Minute:\r\n                return this.MinutePattern;\r\n            case DateTimeUnit.Second:\r\n                return this.SecondPattern;\r\n            case DateTimeUnit.Millisecond:\r\n                return this.MillisecondPattern;\r\n        }\r\n    }\r\n}\r\nexport const formattingService = new FormattingService();\r\n//# sourceMappingURL=formattingService.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nimport { numberFormat as NumberFormat, formattingService } from \"./../formattingService/formattingService\";\r\nimport { double as Double } from \"powerbi-visuals-utils-typeutils\";\r\n// Constants\r\nconst maxExponent = 24;\r\nconst defaultScientificBigNumbersBoundary = 1E15;\r\nconst scientificSmallNumbersBoundary = 1E-4;\r\nconst PERCENTAGE_FORMAT = \"%\";\r\nconst SCIENTIFIC_FORMAT = \"E+0\";\r\nconst DEFAULT_SCIENTIFIC_FORMAT = \"0.##\" + SCIENTIFIC_FORMAT;\r\n// Regular expressions\r\n/**\r\n * This regex looks for strings that match one of the following conditions:\r\n *   - Optionally contain \"0\", \"#\", followed by a period, followed by at least one \"0\" or \"#\" (Ex. ###,000.###)\r\n *   - Contains at least one of \"0\", \"#\", or \",\" (Ex. ###,000)\r\n *   - Contain a \"g\" (indicates to use the general .NET numeric format string)\r\n * The entire string (start to end) must match, and the match is not case-sensitive.\r\n */\r\nconst SUPPORTED_SCIENTIFIC_FORMATS = /^([0\\#,]*\\.[0\\#]+|[0\\#,]+|g)$/i;\r\nexport class DisplayUnit {\r\n    // Methods\r\n    project(value) {\r\n        if (this.value) {\r\n            return Double.removeDecimalNoise(value / this.value);\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    reverseProject(value) {\r\n        if (this.value) {\r\n            return value * this.value;\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    isApplicableTo(value) {\r\n        value = Math.abs(value);\r\n        let precision = Double.getPrecision(value, 3);\r\n        return Double.greaterOrEqualWithPrecision(value, this.applicableRangeMin, precision) && Double.lessWithPrecision(value, this.applicableRangeMax, precision);\r\n    }\r\n    isScaling() {\r\n        return this.value > 1;\r\n    }\r\n}\r\nexport class DisplayUnitSystem {\r\n    // Constructor\r\n    constructor(units) {\r\n        this.units = units ? units : [];\r\n    }\r\n    // Properties\r\n    get title() {\r\n        return this.displayUnit ? this.displayUnit.title : undefined;\r\n    }\r\n    // Methods\r\n    update(value) {\r\n        if (value === undefined)\r\n            return;\r\n        this.unitBaseValue = value;\r\n        this.displayUnit = this.findApplicableDisplayUnit(value);\r\n    }\r\n    findApplicableDisplayUnit(value) {\r\n        for (let unit of this.units) {\r\n            if (unit.isApplicableTo(value))\r\n                return unit;\r\n        }\r\n        return undefined;\r\n    }\r\n    format(value, format, decimals, trailingZeros, cultureSelector) {\r\n        decimals = this.getNumberOfDecimalsForFormatting(format, decimals);\r\n        let nonScientificFormat = \"\";\r\n        if (this.isFormatSupported(format)\r\n            && !this.hasScientitifcFormat(format)\r\n            && this.isScalingUnit()\r\n            && this.shouldRespectScalingUnit(format)) {\r\n            value = this.displayUnit.project(value);\r\n            nonScientificFormat = this.displayUnit.labelFormat;\r\n        }\r\n        return this.formatHelper({\r\n            value,\r\n            nonScientificFormat,\r\n            format,\r\n            decimals,\r\n            trailingZeros,\r\n            cultureSelector\r\n        });\r\n    }\r\n    isFormatSupported(format) {\r\n        return !DisplayUnitSystem.UNSUPPORTED_FORMATS.test(format);\r\n    }\r\n    isPercentageFormat(format) {\r\n        return format && format.indexOf(PERCENTAGE_FORMAT) >= 0;\r\n    }\r\n    shouldRespectScalingUnit(format) {\r\n        return true;\r\n    }\r\n    getNumberOfDecimalsForFormatting(format, decimals) {\r\n        return decimals;\r\n    }\r\n    isScalingUnit() {\r\n        return this.displayUnit && this.displayUnit.isScaling();\r\n    }\r\n    formatHelper(options) {\r\n        let { value, nonScientificFormat, cultureSelector, format, decimals, trailingZeros } = options;\r\n        // If the format is \"general\" and we want to override the number of decimal places then use the default numeric format string.\r\n        if ((format === \"g\" || format === \"G\") && decimals != null) {\r\n            format = \"#,0.00\";\r\n        }\r\n        format = NumberFormat.addDecimalsToFormat(format, decimals, trailingZeros);\r\n        if (format && !formattingService.isStandardNumberFormat(format))\r\n            return formattingService.formatNumberWithCustomOverride(value, format, nonScientificFormat, cultureSelector);\r\n        if (!format) {\r\n            format = \"G\";\r\n        }\r\n        if (!nonScientificFormat) {\r\n            nonScientificFormat = \"{0}\";\r\n        }\r\n        let text = formattingService.formatValue(value, format, cultureSelector);\r\n        return formattingService.format(nonScientificFormat, [text]);\r\n    }\r\n    /** Formats a single value by choosing an appropriate base for the DisplayUnitSystem before formatting. */\r\n    formatSingleValue(value, format, decimals, trailingZeros, cultureSelector) {\r\n        // Change unit base to a value appropriate for this value\r\n        this.update(this.shouldUseValuePrecision(value) ? Double.getPrecision(value, 8) : value);\r\n        return this.format(value, format, decimals, trailingZeros, cultureSelector);\r\n    }\r\n    shouldUseValuePrecision(value) {\r\n        if (this.units.length === 0)\r\n            return true;\r\n        // Check if the value is big enough to have a valid unit by checking against the smallest unit (that it's value bigger than 1).\r\n        let applicableRangeMin = 0;\r\n        for (let i = 0; i < this.units.length; i++) {\r\n            if (this.units[i].isScaling()) {\r\n                applicableRangeMin = this.units[i].applicableRangeMin;\r\n                break;\r\n            }\r\n        }\r\n        return Math.abs(value) < applicableRangeMin;\r\n    }\r\n    isScientific(value) {\r\n        return value < -defaultScientificBigNumbersBoundary || value > defaultScientificBigNumbersBoundary ||\r\n            (-scientificSmallNumbersBoundary < value && value < scientificSmallNumbersBoundary && value !== 0);\r\n    }\r\n    hasScientitifcFormat(format) {\r\n        return format && format.toUpperCase().indexOf(\"E\") !== -1;\r\n    }\r\n    supportsScientificFormat(format) {\r\n        if (format)\r\n            return SUPPORTED_SCIENTIFIC_FORMATS.test(format);\r\n        return true;\r\n    }\r\n    shouldFallbackToScientific(value, format) {\r\n        return !this.hasScientitifcFormat(format)\r\n            && this.supportsScientificFormat(format)\r\n            && this.isScientific(value);\r\n    }\r\n    getScientificFormat(data, format, decimals, trailingZeros) {\r\n        // Use scientific format outside of the range\r\n        if (this.isFormatSupported(format) && this.shouldFallbackToScientific(data, format)) {\r\n            let numericFormat = NumberFormat.getNumericFormat(data, format);\r\n            if (decimals)\r\n                numericFormat = NumberFormat.addDecimalsToFormat(numericFormat ? numericFormat : \"0\", Math.abs(decimals), trailingZeros);\r\n            if (numericFormat)\r\n                return numericFormat + SCIENTIFIC_FORMAT;\r\n            else\r\n                return DEFAULT_SCIENTIFIC_FORMAT;\r\n        }\r\n        return format;\r\n    }\r\n}\r\nDisplayUnitSystem.UNSUPPORTED_FORMATS = /^(p\\d*)|(e\\d*)$/i;\r\n/** Provides a unit system that is defined by formatting in the model, and is suitable for visualizations shown in single number visuals in explore mode. */\r\nexport class NoDisplayUnitSystem extends DisplayUnitSystem {\r\n    // Constructor\r\n    constructor() {\r\n        super([]);\r\n    }\r\n}\r\n/** Provides a unit system that creates a more concise format for displaying values. This is suitable for most of the cases where\r\n    we are showing values (chart axes) and as such it is the default unit system. */\r\nexport class DefaultDisplayUnitSystem extends DisplayUnitSystem {\r\n    // Constructor\r\n    constructor(unitLookup) {\r\n        super(DefaultDisplayUnitSystem.getUnits(unitLookup));\r\n    }\r\n    // Methods\r\n    format(data, format, decimals, trailingZeros, cultureSelector) {\r\n        format = this.getScientificFormat(data, format, decimals, trailingZeros);\r\n        return super.format(data, format, decimals, trailingZeros, cultureSelector);\r\n    }\r\n    static reset() {\r\n        DefaultDisplayUnitSystem.units = null;\r\n    }\r\n    static getUnits(unitLookup) {\r\n        if (!DefaultDisplayUnitSystem.units) {\r\n            DefaultDisplayUnitSystem.units = createDisplayUnits(unitLookup, (value, previousUnitValue, min) => {\r\n                // When dealing with millions/billions/trillions we need to switch to millions earlier: for example instead of showing 100K 200K 300K we should show 0.1M 0.2M 0.3M etc\r\n                if (value - previousUnitValue >= 1000) {\r\n                    return value / 10;\r\n                }\r\n                return min;\r\n            });\r\n            // Ensure last unit has max of infinity\r\n            DefaultDisplayUnitSystem.units[DefaultDisplayUnitSystem.units.length - 1].applicableRangeMax = Infinity;\r\n        }\r\n        return DefaultDisplayUnitSystem.units;\r\n    }\r\n}\r\n/** Provides a unit system that creates a more concise format for displaying values, but only allows showing a unit if we have at least\r\n    one of those units (e.g. 0.9M is not allowed since it's less than 1 million). This is suitable for cases such as dashboard tiles\r\n    where we have restricted space but do not want to show partial units. */\r\nexport class WholeUnitsDisplayUnitSystem extends DisplayUnitSystem {\r\n    // Constructor\r\n    constructor(unitLookup) {\r\n        super(WholeUnitsDisplayUnitSystem.getUnits(unitLookup));\r\n    }\r\n    static reset() {\r\n        WholeUnitsDisplayUnitSystem.units = null;\r\n    }\r\n    static getUnits(unitLookup) {\r\n        if (!WholeUnitsDisplayUnitSystem.units) {\r\n            WholeUnitsDisplayUnitSystem.units = createDisplayUnits(unitLookup);\r\n            // Ensure last unit has max of infinity\r\n            WholeUnitsDisplayUnitSystem.units[WholeUnitsDisplayUnitSystem.units.length - 1].applicableRangeMax = Infinity;\r\n        }\r\n        return WholeUnitsDisplayUnitSystem.units;\r\n    }\r\n    format(data, format, decimals, trailingZeros, cultureSelector) {\r\n        format = this.getScientificFormat(data, format, decimals, trailingZeros);\r\n        return super.format(data, format, decimals, trailingZeros, cultureSelector);\r\n    }\r\n}\r\nexport class DataLabelsDisplayUnitSystem extends DisplayUnitSystem {\r\n    constructor(unitLookup) {\r\n        super(DataLabelsDisplayUnitSystem.getUnits(unitLookup));\r\n    }\r\n    isFormatSupported(format) {\r\n        return !DataLabelsDisplayUnitSystem.UNSUPPORTED_FORMATS.test(format);\r\n    }\r\n    static getUnits(unitLookup) {\r\n        if (!DataLabelsDisplayUnitSystem.units) {\r\n            let units = [];\r\n            let adjustMinBasedOnPreviousUnit = (value, previousUnitValue, min) => {\r\n                // Never returns true, we are always ignoring\r\n                // We do not early switch (e.g. 100K instead of 0.1M)\r\n                // Intended? If so, remove this function, otherwise, remove if statement\r\n                if (value === -1)\r\n                    if (value - previousUnitValue >= 1000) {\r\n                        return value / 10;\r\n                    }\r\n                return min;\r\n            };\r\n            // Add Auto & None\r\n            let names = unitLookup(-1);\r\n            addUnitIfNonEmpty(units, DataLabelsDisplayUnitSystem.AUTO_DISPLAYUNIT_VALUE, names.title, names.format, adjustMinBasedOnPreviousUnit);\r\n            names = unitLookup(0);\r\n            addUnitIfNonEmpty(units, DataLabelsDisplayUnitSystem.NONE_DISPLAYUNIT_VALUE, names.title, names.format, adjustMinBasedOnPreviousUnit);\r\n            // Add normal units\r\n            DataLabelsDisplayUnitSystem.units = units.concat(createDisplayUnits(unitLookup, adjustMinBasedOnPreviousUnit));\r\n            // Ensure last unit has max of infinity\r\n            DataLabelsDisplayUnitSystem.units[DataLabelsDisplayUnitSystem.units.length - 1].applicableRangeMax = Infinity;\r\n        }\r\n        return DataLabelsDisplayUnitSystem.units;\r\n    }\r\n    format(data, format, decimals, trailingZeros, cultureSelector) {\r\n        format = this.getScientificFormat(data, format, decimals, trailingZeros);\r\n        return super.format(data, format, decimals, trailingZeros, cultureSelector);\r\n    }\r\n}\r\n// Constants\r\nDataLabelsDisplayUnitSystem.AUTO_DISPLAYUNIT_VALUE = 0;\r\nDataLabelsDisplayUnitSystem.NONE_DISPLAYUNIT_VALUE = 1;\r\nDataLabelsDisplayUnitSystem.UNSUPPORTED_FORMATS = /^(e\\d*)$/i;\r\nfunction createDisplayUnits(unitLookup, adjustMinBasedOnPreviousUnit) {\r\n    let units = [];\r\n    for (let i = 3; i < maxExponent; i++) {\r\n        let names = unitLookup(i);\r\n        if (names)\r\n            addUnitIfNonEmpty(units, Double.pow10(i), names.title, names.format, adjustMinBasedOnPreviousUnit);\r\n    }\r\n    return units;\r\n}\r\nfunction addUnitIfNonEmpty(units, value, title, labelFormat, adjustMinBasedOnPreviousUnit) {\r\n    if (title || labelFormat) {\r\n        let min = value;\r\n        if (units.length > 0) {\r\n            let previousUnit = units[units.length - 1];\r\n            if (adjustMinBasedOnPreviousUnit)\r\n                min = adjustMinBasedOnPreviousUnit(value, previousUnit.value, min);\r\n            previousUnit.applicableRangeMax = min;\r\n        }\r\n        let unit = new DisplayUnit();\r\n        unit.value = value;\r\n        unit.applicableRangeMin = min;\r\n        unit.applicableRangeMax = min * 1000;\r\n        unit.title = title;\r\n        unit.labelFormat = labelFormat;\r\n        units.push(unit);\r\n    }\r\n}\r\n//# sourceMappingURL=displayUnitSystem.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n/** The system used to determine display units used during formatting */\r\nexport var DisplayUnitSystemType;\r\n(function (DisplayUnitSystemType) {\r\n    /** Default display unit system, which saves space by using units such as K, M, bn with PowerView rules for when to pick a unit. Suitable for chart axes. */\r\n    DisplayUnitSystemType[DisplayUnitSystemType[\"Default\"] = 0] = \"Default\";\r\n    /** A verbose display unit system that will only respect the formatting defined in the model. Suitable for explore mode single-value cards. */\r\n    DisplayUnitSystemType[DisplayUnitSystemType[\"Verbose\"] = 1] = \"Verbose\";\r\n    /**\r\n     * A display unit system that uses units such as K, M, bn if we have at least one of those units (e.g. 0.9M is not valid as it's less than 1 million).\r\n     * Suitable for dashboard tile cards\r\n     */\r\n    DisplayUnitSystemType[DisplayUnitSystemType[\"WholeUnits\"] = 2] = \"WholeUnits\";\r\n    /**A display unit system that also contains Auto and None units for data labels*/\r\n    DisplayUnitSystemType[DisplayUnitSystemType[\"DataLabels\"] = 3] = \"DataLabels\";\r\n})(DisplayUnitSystemType || (DisplayUnitSystemType = {}));\r\n//# sourceMappingURL=displayUnitSystemType.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\n/** dateUtils module provides DateTimeSequence with set of additional date manipulation routines */\r\nexport var dateUtils;\r\n(function (dateUtils) {\r\n    let MonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    let MonthDaysLeap = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    /**\r\n     * Returns bool indicating weither the provided year is a leap year.\r\n     * @param year - year value\r\n     */\r\n    function isLeap(year) {\r\n        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\r\n    }\r\n    /**\r\n     * Returns number of days in the provided year/month.\r\n     * @param year - year value\r\n     * @param month - month value\r\n     */\r\n    function getMonthDays(year, month) {\r\n        return isLeap(year) ? MonthDaysLeap[month] : MonthDays[month];\r\n    }\r\n    /**\r\n     * Adds a specified number of years to the provided date.\r\n     * @param date - date value\r\n     * @param yearDelta - number of years to add\r\n     */\r\n    function addYears(date, yearDelta) {\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth();\r\n        let day = date.getDate();\r\n        let isLeapDay = month === 2 && day === 29;\r\n        let result = new Date(date.getTime());\r\n        year = year + yearDelta;\r\n        if (isLeapDay && !isLeap(year)) {\r\n            day = 28;\r\n        }\r\n        result.setFullYear(year, month, day);\r\n        return result;\r\n    }\r\n    dateUtils.addYears = addYears;\r\n    /**\r\n     * Adds a specified number of months to the provided date.\r\n     * @param date - date value\r\n     * @param monthDelta - number of months to add\r\n     */\r\n    function addMonths(date, monthDelta) {\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth();\r\n        let day = date.getDate();\r\n        let result = new Date(date.getTime());\r\n        year += (monthDelta - (monthDelta % 12)) / 12;\r\n        month += monthDelta % 12;\r\n        // VSTS 1325771: Certain column charts don't display any data\r\n        // Wrap arround the month if is after december (value 11)\r\n        if (month > 11) {\r\n            month = month % 12;\r\n            year++;\r\n        }\r\n        day = Math.min(day, getMonthDays(year, month));\r\n        result.setFullYear(year, month, day);\r\n        return result;\r\n    }\r\n    dateUtils.addMonths = addMonths;\r\n    /**\r\n     * Adds a specified number of weeks to the provided date.\r\n     * @param date - date value\r\n     * @param weeks - number of weeks to add\r\n     */\r\n    function addWeeks(date, weeks) {\r\n        return addDays(date, weeks * 7);\r\n    }\r\n    dateUtils.addWeeks = addWeeks;\r\n    /**\r\n     * Adds a specified number of days to the provided date.\r\n     * @param date - date value\r\n     * @param days - number of days to add\r\n     */\r\n    function addDays(date, days) {\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth();\r\n        let day = date.getDate();\r\n        let result = new Date(date.getTime());\r\n        result.setFullYear(year, month, day + days);\r\n        return result;\r\n    }\r\n    dateUtils.addDays = addDays;\r\n    /**\r\n     * Adds a specified number of hours to the provided date.\r\n     * @param date - date value\r\n     * @param hours - number of hours to add\r\n     */\r\n    function addHours(date, hours) {\r\n        return new Date(date.getTime() + hours * 3600000);\r\n    }\r\n    dateUtils.addHours = addHours;\r\n    /**\r\n     * Adds a specified number of minutes to the provided date.\r\n     * @param date - date value\r\n     * @param minutes - number of minutes to add\r\n     */\r\n    function addMinutes(date, minutes) {\r\n        return new Date(date.getTime() + minutes * 60000);\r\n    }\r\n    dateUtils.addMinutes = addMinutes;\r\n    /**\r\n     * Adds a specified number of seconds to the provided date.\r\n     * @param date - date value\r\n     * @param seconds - number of seconds to add\r\n     */\r\n    function addSeconds(date, seconds) {\r\n        return new Date(date.getTime() + seconds * 1000);\r\n    }\r\n    dateUtils.addSeconds = addSeconds;\r\n    /**\r\n     * Adds a specified number of milliseconds to the provided date.\r\n     * @param date - date value\r\n     * @param milliseconds - number of milliseconds to add\r\n     */\r\n    function addMilliseconds(date, milliseconds) {\r\n        return new Date(date.getTime() + milliseconds);\r\n    }\r\n    dateUtils.addMilliseconds = addMilliseconds;\r\n})(dateUtils || (dateUtils = {}));\r\n//# sourceMappingURL=dateUtils.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nimport { dateUtils } from \"./dateUtils\";\r\n// powerbi.extensibility.utils.type\r\nimport { numericSequence, numericSequenceRange, double as Double } from \"powerbi-visuals-utils-typeutils\";\r\nvar NumericSequence = numericSequence.NumericSequence;\r\nvar NumericSequenceRange = numericSequenceRange.NumericSequenceRange;\r\n// powerbi.extensibility.utils.formatting\r\nimport { DateTimeUnit } from \"./../formattingService/iFormattingService\";\r\n/** Repreasents the sequence of the dates/times */\r\nexport class DateTimeSequence {\r\n    // Constructors\r\n    /** Creates new instance of the DateTimeSequence */\r\n    constructor(unit) {\r\n        this.unit = unit;\r\n        this.sequence = [];\r\n        this.min = new Date(\"9999-12-31T23:59:59.999\");\r\n        this.max = new Date(\"0001-01-01T00:00:00.000\");\r\n    }\r\n    // Methods\r\n    /**\r\n     * Add a new Date to a sequence.\r\n     * @param date - date to add\r\n     */\r\n    add(date) {\r\n        if (date < this.min) {\r\n            this.min = date;\r\n        }\r\n        if (date > this.max) {\r\n            this.max = date;\r\n        }\r\n        this.sequence.push(date);\r\n    }\r\n    // Methods\r\n    /**\r\n     * Extends the sequence to cover new date range\r\n     * @param min - new min to be covered by sequence\r\n     * @param max - new max to be covered by sequence\r\n     */\r\n    extendToCover(min, max) {\r\n        let x = this.min;\r\n        while (min < x) {\r\n            x = DateTimeSequence.addInterval(x, -this.interval, this.unit);\r\n            this.sequence.splice(0, 0, x);\r\n        }\r\n        this.min = x;\r\n        x = this.max;\r\n        while (x < max) {\r\n            x = DateTimeSequence.addInterval(x, this.interval, this.unit);\r\n            this.sequence.push(x);\r\n        }\r\n        this.max = x;\r\n    }\r\n    /**\r\n     * Move the sequence to cover new date range\r\n     * @param min - new min to be covered by sequence\r\n     * @param max - new max to be covered by sequence\r\n     */\r\n    moveToCover(min, max) {\r\n        let delta = DateTimeSequence.getDelta(min, max, this.unit);\r\n        let count = Math.floor(delta / this.interval);\r\n        this.min = DateTimeSequence.addInterval(this.min, count * this.interval, this.unit);\r\n        this.sequence = [];\r\n        this.sequence.push(this.min);\r\n        this.max = this.min;\r\n        while (this.max < max) {\r\n            this.max = DateTimeSequence.addInterval(this.max, this.interval, this.unit);\r\n            this.sequence.push(this.max);\r\n        }\r\n    }\r\n    // Static\r\n    /**\r\n     * Calculate a new DateTimeSequence\r\n     * @param dataMin - Date representing min of the data range\r\n     * @param dataMax - Date representing max of the data range\r\n     * @param expectedCount - expected number of intervals in the sequence\r\n     * @param unit - of the intervals in the sequence\r\n     */\r\n    static calculate(dataMin, dataMax, expectedCount, unit) {\r\n        if (!unit) {\r\n            unit = DateTimeSequence.getIntervalUnit(dataMin, dataMax, expectedCount);\r\n        }\r\n        switch (unit) {\r\n            case DateTimeUnit.Year:\r\n                return DateTimeSequence.calculateYears(dataMin, dataMax, expectedCount);\r\n            case DateTimeUnit.Month:\r\n                return DateTimeSequence.calculateMonths(dataMin, dataMax, expectedCount);\r\n            case DateTimeUnit.Week:\r\n                return DateTimeSequence.calculateWeeks(dataMin, dataMax, expectedCount);\r\n            case DateTimeUnit.Day:\r\n                return DateTimeSequence.calculateDays(dataMin, dataMax, expectedCount);\r\n            case DateTimeUnit.Hour:\r\n                return DateTimeSequence.calculateHours(dataMin, dataMax, expectedCount);\r\n            case DateTimeUnit.Minute:\r\n                return DateTimeSequence.calculateMinutes(dataMin, dataMax, expectedCount);\r\n            case DateTimeUnit.Second:\r\n                return DateTimeSequence.calculateSeconds(dataMin, dataMax, expectedCount);\r\n            case DateTimeUnit.Millisecond:\r\n                return DateTimeSequence.calculateMilliseconds(dataMin, dataMax, expectedCount);\r\n        }\r\n    }\r\n    static calculateYears(dataMin, dataMax, expectedCount) {\r\n        // Calculate range and sequence\r\n        let yearsRange = NumericSequenceRange.calculateDataRange(dataMin.getFullYear(), dataMax.getFullYear(), false);\r\n        // Calculate year sequence\r\n        let sequence = NumericSequence.calculate(NumericSequenceRange.calculate(0, yearsRange.max - yearsRange.min), expectedCount, 0, null, null, [1, 2, 5]);\r\n        let newMinYear = Math.floor(yearsRange.min / sequence.interval) * sequence.interval;\r\n        let date = new Date(newMinYear, 0, 1);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Year);\r\n        return result;\r\n    }\r\n    static calculateMonths(dataMin, dataMax, expectedCount) {\r\n        // Calculate range\r\n        let minYear = dataMin.getFullYear();\r\n        let maxYear = dataMax.getFullYear();\r\n        let minMonth = dataMin.getMonth();\r\n        let maxMonth = (maxYear - minYear) * 12 + dataMax.getMonth();\r\n        let date = new Date(minYear, 0, 1);\r\n        // Calculate month sequence\r\n        let sequence = NumericSequence.calculateUnits(minMonth, maxMonth, expectedCount, [1, 2, 3, 6, 12]);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Month);\r\n        return result;\r\n    }\r\n    static calculateWeeks(dataMin, dataMax, expectedCount) {\r\n        let firstDayOfWeek = 0;\r\n        let minDayOfWeek = dataMin.getDay();\r\n        let dayOffset = (minDayOfWeek - firstDayOfWeek + 7) % 7;\r\n        let minDay = dataMin.getDate() - dayOffset;\r\n        // Calculate range\r\n        let date = new Date(dataMin.getFullYear(), dataMin.getMonth(), minDay);\r\n        let min = 0;\r\n        let max = Double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, DateTimeUnit.Week));\r\n        // Calculate week sequence\r\n        let sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 4, 8]);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Week);\r\n        return result;\r\n    }\r\n    static calculateDays(dataMin, dataMax, expectedCount) {\r\n        // Calculate range\r\n        let date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate());\r\n        let min = 0;\r\n        let max = Double.ceilWithPrecision(DateTimeSequence.getDelta(dataMin, dataMax, DateTimeUnit.Day));\r\n        // Calculate day sequence\r\n        let sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 7, 14]);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Day);\r\n        return result;\r\n    }\r\n    static calculateHours(dataMin, dataMax, expectedCount) {\r\n        // Calculate range\r\n        let date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate());\r\n        let min = Double.floorWithPrecision(DateTimeSequence.getDelta(date, dataMin, DateTimeUnit.Hour));\r\n        let max = Double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, DateTimeUnit.Hour));\r\n        // Calculate hour sequence\r\n        let sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 3, 6, 12, 24]);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Hour);\r\n        return result;\r\n    }\r\n    static calculateMinutes(dataMin, dataMax, expectedCount) {\r\n        // Calculate range\r\n        let date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate(), dataMin.getHours());\r\n        let min = Double.floorWithPrecision(DateTimeSequence.getDelta(date, dataMin, DateTimeUnit.Minute));\r\n        let max = Double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, DateTimeUnit.Minute));\r\n        // Calculate minutes numeric sequence\r\n        let sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 5, 10, 15, 30, 60, 60 * 2, 60 * 3, 60 * 6, 60 * 12, 60 * 24]);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Minute);\r\n        return result;\r\n    }\r\n    static calculateSeconds(dataMin, dataMax, expectedCount) {\r\n        // Calculate range\r\n        let date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate(), dataMin.getHours(), dataMin.getMinutes());\r\n        let min = Double.floorWithPrecision(DateTimeSequence.getDelta(date, dataMin, DateTimeUnit.Second));\r\n        let max = Double.ceilWithPrecision(DateTimeSequence.getDelta(date, dataMax, DateTimeUnit.Second));\r\n        // Calculate minutes numeric sequence\r\n        let sequence = NumericSequence.calculateUnits(min, max, expectedCount, [1, 2, 5, 10, 15, 30, 60, 60 * 2, 60 * 5, 60 * 10, 60 * 15, 60 * 30, 60 * 60]);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Second);\r\n        return result;\r\n    }\r\n    static calculateMilliseconds(dataMin, dataMax, expectedCount) {\r\n        // Calculate range\r\n        let date = new Date(dataMin.getFullYear(), dataMin.getMonth(), dataMin.getDate(), dataMin.getHours(), dataMin.getMinutes(), dataMin.getSeconds());\r\n        let min = DateTimeSequence.getDelta(date, dataMin, DateTimeUnit.Millisecond);\r\n        let max = DateTimeSequence.getDelta(date, dataMax, DateTimeUnit.Millisecond);\r\n        // Calculate milliseconds numeric sequence\r\n        let sequence = NumericSequence.calculate(NumericSequenceRange.calculate(min, max), expectedCount, 0);\r\n        // Convert to date sequence\r\n        let result = DateTimeSequence.fromNumericSequence(date, sequence, DateTimeUnit.Millisecond);\r\n        return result;\r\n    }\r\n    static addInterval(value, interval, unit) {\r\n        interval = Math.round(interval);\r\n        switch (unit) {\r\n            case DateTimeUnit.Year:\r\n                return dateUtils.addYears(value, interval);\r\n            case DateTimeUnit.Month:\r\n                return dateUtils.addMonths(value, interval);\r\n            case DateTimeUnit.Week:\r\n                return dateUtils.addWeeks(value, interval);\r\n            case DateTimeUnit.Day:\r\n                return dateUtils.addDays(value, interval);\r\n            case DateTimeUnit.Hour:\r\n                return dateUtils.addHours(value, interval);\r\n            case DateTimeUnit.Minute:\r\n                return dateUtils.addMinutes(value, interval);\r\n            case DateTimeUnit.Second:\r\n                return dateUtils.addSeconds(value, interval);\r\n            case DateTimeUnit.Millisecond:\r\n                return dateUtils.addMilliseconds(value, interval);\r\n        }\r\n    }\r\n    static fromNumericSequence(date, sequence, unit) {\r\n        let result = new DateTimeSequence(unit);\r\n        for (let i = 0; i < sequence.sequence.length; i++) {\r\n            let x = sequence.sequence[i];\r\n            let d = DateTimeSequence.addInterval(date, x, unit);\r\n            result.add(d);\r\n        }\r\n        result.interval = sequence.interval;\r\n        result.intervalOffset = sequence.intervalOffset;\r\n        return result;\r\n    }\r\n    static getDelta(min, max, unit) {\r\n        let delta = 0;\r\n        switch (unit) {\r\n            case DateTimeUnit.Year:\r\n                delta = max.getFullYear() - min.getFullYear();\r\n                break;\r\n            case DateTimeUnit.Month:\r\n                delta = (max.getFullYear() - min.getFullYear()) * 12 + max.getMonth() - min.getMonth();\r\n                break;\r\n            case DateTimeUnit.Week:\r\n                delta = (max.getTime() - min.getTime()) / (7 * 24 * 3600000);\r\n                break;\r\n            case DateTimeUnit.Day:\r\n                delta = (max.getTime() - min.getTime()) / (24 * 3600000);\r\n                break;\r\n            case DateTimeUnit.Hour:\r\n                delta = (max.getTime() - min.getTime()) / 3600000;\r\n                break;\r\n            case DateTimeUnit.Minute:\r\n                delta = (max.getTime() - min.getTime()) / 60000;\r\n                break;\r\n            case DateTimeUnit.Second:\r\n                delta = (max.getTime() - min.getTime()) / 1000;\r\n                break;\r\n            case DateTimeUnit.Millisecond:\r\n                delta = max.getTime() - min.getTime();\r\n                break;\r\n        }\r\n        return delta;\r\n    }\r\n    static getIntervalUnit(min, max, maxCount) {\r\n        maxCount = Math.max(maxCount, 2);\r\n        let totalDays = DateTimeSequence.getDelta(min, max, DateTimeUnit.Day);\r\n        if (totalDays > 356 && totalDays >= 30 * 6 * maxCount)\r\n            return DateTimeUnit.Year;\r\n        if (totalDays > 60 && totalDays > 7 * maxCount)\r\n            return DateTimeUnit.Month;\r\n        if (totalDays > 14 && totalDays > 2 * maxCount)\r\n            return DateTimeUnit.Week;\r\n        let totalHours = DateTimeSequence.getDelta(min, max, DateTimeUnit.Hour);\r\n        if (totalDays > 2 && totalHours > 12 * maxCount)\r\n            return DateTimeUnit.Day;\r\n        if (totalHours >= 24 && totalHours >= maxCount)\r\n            return DateTimeUnit.Hour;\r\n        let totalMinutes = DateTimeSequence.getDelta(min, max, DateTimeUnit.Minute);\r\n        if (totalMinutes > 2 && totalMinutes >= maxCount)\r\n            return DateTimeUnit.Minute;\r\n        let totalSeconds = DateTimeSequence.getDelta(min, max, DateTimeUnit.Second);\r\n        if (totalSeconds > 2 && totalSeconds >= 0.8 * maxCount)\r\n            return DateTimeUnit.Second;\r\n        let totalMilliseconds = DateTimeSequence.getDelta(min, max, DateTimeUnit.Millisecond);\r\n        if (totalMilliseconds > 0)\r\n            return DateTimeUnit.Millisecond;\r\n        // If the size of the range is 0 we need to guess the unit based on the date's non-zero values starting with milliseconds\r\n        let date = min;\r\n        if (date.getMilliseconds() !== 0)\r\n            return DateTimeUnit.Millisecond;\r\n        if (date.getSeconds() !== 0)\r\n            return DateTimeUnit.Second;\r\n        if (date.getMinutes() !== 0)\r\n            return DateTimeUnit.Minute;\r\n        if (date.getHours() !== 0)\r\n            return DateTimeUnit.Hour;\r\n        if (date.getDate() !== 1)\r\n            return DateTimeUnit.Day;\r\n        if (date.getMonth() !== 0)\r\n            return DateTimeUnit.Month;\r\n        return DateTimeUnit.Year;\r\n    }\r\n}\r\n// Constants\r\nDateTimeSequence.MIN_COUNT = 1;\r\nDateTimeSequence.MAX_COUNT = 1000;\r\n//# sourceMappingURL=dateTimeSequence.js.map","export var DataRoleHelper;\r\n(function (DataRoleHelper) {\r\n    function getMeasureIndexOfRole(grouped, roleName) {\r\n        if (!grouped || !grouped.length) {\r\n            return -1;\r\n        }\r\n        let firstGroup = grouped[0];\r\n        if (firstGroup.values && firstGroup.values.length > 0) {\r\n            for (let i = 0, len = firstGroup.values.length; i < len; ++i) {\r\n                let value = firstGroup.values[i];\r\n                if (value && value.source) {\r\n                    if (hasRole(value.source, roleName)) {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    DataRoleHelper.getMeasureIndexOfRole = getMeasureIndexOfRole;\r\n    function getCategoryIndexOfRole(categories, roleName) {\r\n        if (categories && categories.length) {\r\n            for (let i = 0, ilen = categories.length; i < ilen; i++) {\r\n                if (hasRole(categories[i].source, roleName)) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    DataRoleHelper.getCategoryIndexOfRole = getCategoryIndexOfRole;\r\n    function hasRole(column, name) {\r\n        let roles = column.roles;\r\n        return roles && roles[name];\r\n    }\r\n    DataRoleHelper.hasRole = hasRole;\r\n    function hasRoleInDataView(dataView, name) {\r\n        return dataView != null\r\n            && dataView.metadata != null\r\n            && dataView.metadata.columns\r\n            && dataView.metadata.columns.some((c) => c.roles && c.roles[name] !== undefined); // any is an alias of some\r\n    }\r\n    DataRoleHelper.hasRoleInDataView = hasRoleInDataView;\r\n    function hasRoleInValueColumn(valueColumn, name) {\r\n        return valueColumn\r\n            && valueColumn.source\r\n            && valueColumn.source.roles\r\n            && (valueColumn.source.roles[name] === true);\r\n    }\r\n    DataRoleHelper.hasRoleInValueColumn = hasRoleInValueColumn;\r\n})(DataRoleHelper || (DataRoleHelper = {}));\r\n//# sourceMappingURL=dataRoleHelper.js.map","// powerbi.extensibility.utils.dataview\r\nimport { DataRoleHelper } from \"./dataRoleHelper\";\r\nexport var converterHelper;\r\n(function (converterHelper) {\r\n    function categoryIsAlsoSeriesRole(dataView, seriesRoleName, categoryRoleName) {\r\n        if (dataView.categories && dataView.categories.length > 0) {\r\n            // Need to pivot data if our category soure is a series role\r\n            let category = dataView.categories[0];\r\n            return category.source &&\r\n                DataRoleHelper.hasRole(category.source, seriesRoleName) &&\r\n                DataRoleHelper.hasRole(category.source, categoryRoleName);\r\n        }\r\n        return false;\r\n    }\r\n    converterHelper.categoryIsAlsoSeriesRole = categoryIsAlsoSeriesRole;\r\n    function getSeriesName(source) {\r\n        return (source.groupName !== undefined)\r\n            ? source.groupName\r\n            : source.queryName;\r\n    }\r\n    converterHelper.getSeriesName = getSeriesName;\r\n    function isImageUrlColumn(column) {\r\n        let misc = getMiscellaneousTypeDescriptor(column);\r\n        return misc != null && misc.imageUrl === true;\r\n    }\r\n    converterHelper.isImageUrlColumn = isImageUrlColumn;\r\n    function isWebUrlColumn(column) {\r\n        let misc = getMiscellaneousTypeDescriptor(column);\r\n        return misc != null && misc.webUrl === true;\r\n    }\r\n    converterHelper.isWebUrlColumn = isWebUrlColumn;\r\n    function getMiscellaneousTypeDescriptor(column) {\r\n        return column\r\n            && column.type\r\n            && column.type.misc;\r\n    }\r\n    converterHelper.getMiscellaneousTypeDescriptor = getMiscellaneousTypeDescriptor;\r\n    function hasImageUrlColumn(dataView) {\r\n        if (!dataView || !dataView.metadata || !dataView.metadata.columns || !dataView.metadata.columns.length) {\r\n            return false;\r\n        }\r\n        return dataView.metadata.columns.some((column) => isImageUrlColumn(column) === true);\r\n    }\r\n    converterHelper.hasImageUrlColumn = hasImageUrlColumn;\r\n})(converterHelper || (converterHelper = {}));\r\n//# sourceMappingURL=converterHelper.js.map","export var DataViewObject;\r\n(function (DataViewObject) {\r\n    function getValue(object, propertyName, defaultValue) {\r\n        if (!object) {\r\n            return defaultValue;\r\n        }\r\n        let propertyValue = object[propertyName];\r\n        if (propertyValue === undefined) {\r\n            return defaultValue;\r\n        }\r\n        return propertyValue;\r\n    }\r\n    DataViewObject.getValue = getValue;\r\n    /** Gets the solid color from a fill property using only a propertyName */\r\n    function getFillColorByPropertyName(object, propertyName, defaultColor) {\r\n        let value = getValue(object, propertyName);\r\n        if (!value || !value.solid) {\r\n            return defaultColor;\r\n        }\r\n        return value.solid.color;\r\n    }\r\n    DataViewObject.getFillColorByPropertyName = getFillColorByPropertyName;\r\n})(DataViewObject || (DataViewObject = {}));\r\n//# sourceMappingURL=dataViewObject.js.map","import { DataViewObject } from \"./dataViewObject\";\r\nexport var DataViewObjects;\r\n(function (DataViewObjects) {\r\n    /** Gets the value of the given object/property pair. */\r\n    function getValue(objects, propertyId, defaultValue) {\r\n        if (!objects) {\r\n            return defaultValue;\r\n        }\r\n        return DataViewObject.getValue(objects[propertyId.objectName], propertyId.propertyName, defaultValue);\r\n    }\r\n    DataViewObjects.getValue = getValue;\r\n    /** Gets an object from objects. */\r\n    function getObject(objects, objectName, defaultValue) {\r\n        if (objects && objects[objectName]) {\r\n            return objects[objectName];\r\n        }\r\n        return defaultValue;\r\n    }\r\n    DataViewObjects.getObject = getObject;\r\n    /** Gets the solid color from a fill property. */\r\n    function getFillColor(objects, propertyId, defaultColor) {\r\n        const value = getValue(objects, propertyId);\r\n        if (!value || !value.solid) {\r\n            return defaultColor;\r\n        }\r\n        return value.solid.color;\r\n    }\r\n    DataViewObjects.getFillColor = getFillColor;\r\n    function getCommonValue(objects, propertyId, defaultValue) {\r\n        const value = getValue(objects, propertyId, defaultValue);\r\n        if (value && value.solid) {\r\n            return value.solid.color;\r\n        }\r\n        if (value === undefined\r\n            || value === null\r\n            || (typeof value === \"object\" && !value.solid)) {\r\n            return defaultValue;\r\n        }\r\n        return value;\r\n    }\r\n    DataViewObjects.getCommonValue = getCommonValue;\r\n})(DataViewObjects || (DataViewObjects = {}));\r\n//# sourceMappingURL=dataViewObjects.js.map","// TODO: refactor & focus DataViewTransform into a service with well-defined dependencies.\r\nexport var DataViewTransform;\r\n(function (DataViewTransform) {\r\n    // TODO: refactor this, setGrouped, and groupValues to a test helper to stop using it in the product\r\n    function createValueColumns(values = [], valueIdentityFields, source) {\r\n        let result = values;\r\n        setGrouped(result);\r\n        if (valueIdentityFields) {\r\n            result.identityFields = valueIdentityFields;\r\n        }\r\n        if (source) {\r\n            result.source = source;\r\n        }\r\n        return result;\r\n    }\r\n    DataViewTransform.createValueColumns = createValueColumns;\r\n    function setGrouped(values, groupedResult) {\r\n        values.grouped = groupedResult\r\n            ? () => groupedResult\r\n            : () => groupValues(values);\r\n    }\r\n    DataViewTransform.setGrouped = setGrouped;\r\n    /** Group together the values with a common identity. */\r\n    function groupValues(values) {\r\n        let groups = [], currentGroup;\r\n        for (let i = 0, len = values.length; i < len; i++) {\r\n            let value = values[i];\r\n            if (!currentGroup || currentGroup.identity !== value.identity) {\r\n                currentGroup = {\r\n                    values: []\r\n                };\r\n                if (value.identity) {\r\n                    currentGroup.identity = value.identity;\r\n                    let source = value.source;\r\n                    // allow null, which will be formatted as (Blank).\r\n                    if (source.groupName !== undefined) {\r\n                        currentGroup.name = source.groupName;\r\n                    }\r\n                    else if (source.displayName) {\r\n                        currentGroup.name = source.displayName;\r\n                    }\r\n                }\r\n                groups.push(currentGroup);\r\n            }\r\n            currentGroup.values.push(value);\r\n        }\r\n        return groups;\r\n    }\r\n    DataViewTransform.groupValues = groupValues;\r\n})(DataViewTransform || (DataViewTransform = {}));\r\n//# sourceMappingURL=dataViewTransform.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nexport var validationHelper;\r\n(function (validationHelper) {\r\n    function isImageUrlAllowed(url) {\r\n        // Excludes all URLs that don't contain .gif .jpg .png or .svg extensions and don't start from \"http(s)://\".\r\n        // Base64 incoded images are allowable too.\r\n        return (/^https?:\\/\\/.+\\.(gif|jpg|png|svg)$/i).test(url) || (/^data:image\\/(gif|jpeg|png|svg\\+xml);base64,/i).test(url);\r\n    }\r\n    validationHelper.isImageUrlAllowed = isImageUrlAllowed;\r\n    function isFileImage(url, imageCheckResultCallBack) {\r\n        let request = new XMLHttpRequest();\r\n        request.onreadystatechange = function () {\r\n            if (request.readyState !== this.HEADERS_RECEIVED) {\r\n                return;\r\n            }\r\n            let contentType = request.getResponseHeader(\"Content-Type\"), supportedTypes = [\"image/png\", \"image/jpeg\", \"image/gif\", \"image/svg+xml\"];\r\n            if (supportedTypes.indexOf(contentType) > -1) {\r\n                return imageCheckResultCallBack(true, contentType);\r\n            }\r\n            return imageCheckResultCallBack(false, contentType);\r\n        };\r\n        request.open(\"HEAD\", url, true);\r\n        request.send();\r\n    }\r\n    validationHelper.isFileImage = isFileImage;\r\n})(validationHelper || (validationHelper = {}));\r\n//# sourceMappingURL=validationHelper.js.map","import { DataViewObjects } from \"./dataViewObjects\";\r\nexport class DataViewObjectsParser {\r\n    static getDefault() {\r\n        return new this();\r\n    }\r\n    static createPropertyIdentifier(objectName, propertyName) {\r\n        return {\r\n            objectName,\r\n            propertyName\r\n        };\r\n    }\r\n    static parse(dataView) {\r\n        let dataViewObjectParser = this.getDefault(), properties;\r\n        if (!dataView || !dataView.metadata || !dataView.metadata.objects) {\r\n            return dataViewObjectParser;\r\n        }\r\n        properties = dataViewObjectParser.getProperties();\r\n        for (let objectName in properties) {\r\n            for (let propertyName in properties[objectName]) {\r\n                const defaultValue = dataViewObjectParser[objectName][propertyName];\r\n                dataViewObjectParser[objectName][propertyName] = DataViewObjects.getCommonValue(dataView.metadata.objects, properties[objectName][propertyName], defaultValue);\r\n            }\r\n        }\r\n        return dataViewObjectParser;\r\n    }\r\n    static isPropertyEnumerable(propertyName) {\r\n        return !DataViewObjectsParser.InnumerablePropertyPrefix.test(propertyName);\r\n    }\r\n    static enumerateObjectInstances(dataViewObjectParser, options) {\r\n        let dataViewProperties = dataViewObjectParser && dataViewObjectParser[options.objectName];\r\n        if (!dataViewProperties) {\r\n            return [];\r\n        }\r\n        let instance = {\r\n            objectName: options.objectName,\r\n            selector: null,\r\n            properties: {}\r\n        };\r\n        for (let key in dataViewProperties) {\r\n            if (dataViewProperties.hasOwnProperty(key)) {\r\n                instance.properties[key] = dataViewProperties[key];\r\n            }\r\n        }\r\n        return {\r\n            instances: [instance]\r\n        };\r\n    }\r\n    getProperties() {\r\n        let properties = {}, objectNames = Object.keys(this);\r\n        objectNames.forEach((objectName) => {\r\n            if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\r\n                let propertyNames = Object.keys(this[objectName]);\r\n                properties[objectName] = {};\r\n                propertyNames.forEach((propertyName) => {\r\n                    if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\r\n                        properties[objectName][propertyName] =\r\n                            DataViewObjectsParser.createPropertyIdentifier(objectName, propertyName);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return properties;\r\n    }\r\n}\r\nDataViewObjectsParser.InnumerablePropertyPrefix = /^_/;\r\n//# sourceMappingURL=dataViewObjectsParser.js.map","/*\r\n*  Power BI Visualizations\r\n*\r\n*  Copyright (c) Microsoft Corporation\r\n*  All rights reserved.\r\n*  MIT License\r\n*\r\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n*  in the Software without restriction, including without limitation the rights\r\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n*  copies of the Software, and to permit persons to whom the Software is\r\n*  furnished to do so, subject to the following conditions:\r\n*\r\n*  The above copyright notice and this permission notice shall be included in\r\n*  all copies or substantial portions of the Software.\r\n*\r\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*  THE SOFTWARE.\r\n*/\r\nimport { DataLabelsDisplayUnitSystem, NoDisplayUnitSystem, WholeUnitsDisplayUnitSystem, DefaultDisplayUnitSystem } from \"./displayUnitSystem/displayUnitSystem\";\r\nimport { DisplayUnitSystemType } from \"./displayUnitSystem/displayUnitSystemType\";\r\nimport * as stringExtensions from \"./stringExtensions\";\r\nimport { numberFormat as NumberFormat, formattingService } from \"./formattingService/formattingService\";\r\nimport { DateTimeSequence } from \"./date/dateTimeSequence\";\r\nimport { double as Double, valueType } from \"powerbi-visuals-utils-typeutils\";\r\nimport { dataViewObjects } from \"powerbi-visuals-utils-dataviewutils\";\r\nvar DataViewObjects = dataViewObjects.DataViewObjects;\r\n// powerbi.extensibility.utils.type\r\nvar ValueType = valueType.ValueType;\r\nvar PrimitiveType = valueType.PrimitiveType;\r\nexport var valueFormatter;\r\n(function (valueFormatter) {\r\n    var StringExtensions = stringExtensions;\r\n    const BeautifiedFormat = {\r\n        \"0.00 %;-0.00 %;0.00 %\": \"Percentage\",\r\n        \"0.0 %;-0.0 %;0.0 %\": \"Percentage1\",\r\n    };\r\n    valueFormatter.DefaultIntegerFormat = \"g\";\r\n    valueFormatter.DefaultNumericFormat = \"#,0.00\";\r\n    valueFormatter.DefaultDateFormat = \"d\";\r\n    const defaultLocalizedStrings = {\r\n        \"NullValue\": \"(Blank)\",\r\n        \"BooleanTrue\": \"True\",\r\n        \"BooleanFalse\": \"False\",\r\n        \"NaNValue\": \"NaN\",\r\n        \"InfinityValue\": \"+Infinity\",\r\n        \"NegativeInfinityValue\": \"-Infinity\",\r\n        \"RestatementComma\": \"{0}, {1}\",\r\n        \"RestatementCompoundAnd\": \"{0} and {1}\",\r\n        \"RestatementCompoundOr\": \"{0} or {1}\",\r\n        \"DisplayUnitSystem_EAuto_Title\": \"Auto\",\r\n        \"DisplayUnitSystem_E0_Title\": \"None\",\r\n        \"DisplayUnitSystem_E3_LabelFormat\": \"{0}K\",\r\n        \"DisplayUnitSystem_E3_Title\": \"Thousands\",\r\n        \"DisplayUnitSystem_E6_LabelFormat\": \"{0}M\",\r\n        \"DisplayUnitSystem_E6_Title\": \"Millions\",\r\n        \"DisplayUnitSystem_E9_LabelFormat\": \"{0}bn\",\r\n        \"DisplayUnitSystem_E9_Title\": \"Billions\",\r\n        \"DisplayUnitSystem_E12_LabelFormat\": \"{0}T\",\r\n        \"DisplayUnitSystem_E12_Title\": \"Trillions\",\r\n        \"Percentage\": \"#,0.##%\",\r\n        \"Percentage1\": \"#,0.#%\",\r\n        \"TableTotalLabel\": \"Total\",\r\n        \"Tooltip_HighlightedValueDisplayName\": \"Highlighted\",\r\n        \"Funnel_PercentOfFirst\": \"Percent of first\",\r\n        \"Funnel_PercentOfPrevious\": \"Percent of previous\",\r\n        \"Funnel_PercentOfFirst_Highlight\": \"Percent of first (highlighted)\",\r\n        \"Funnel_PercentOfPrevious_Highlight\": \"Percent of previous (highlighted)\",\r\n        // Geotagging strings\r\n        \"GeotaggingString_Continent\": \"continent\",\r\n        \"GeotaggingString_Continents\": \"continents\",\r\n        \"GeotaggingString_Country\": \"country\",\r\n        \"GeotaggingString_Countries\": \"countries\",\r\n        \"GeotaggingString_State\": \"state\",\r\n        \"GeotaggingString_States\": \"states\",\r\n        \"GeotaggingString_City\": \"city\",\r\n        \"GeotaggingString_Cities\": \"cities\",\r\n        \"GeotaggingString_Town\": \"town\",\r\n        \"GeotaggingString_Towns\": \"towns\",\r\n        \"GeotaggingString_Province\": \"province\",\r\n        \"GeotaggingString_Provinces\": \"provinces\",\r\n        \"GeotaggingString_County\": \"county\",\r\n        \"GeotaggingString_Counties\": \"counties\",\r\n        \"GeotaggingString_Village\": \"village\",\r\n        \"GeotaggingString_Villages\": \"villages\",\r\n        \"GeotaggingString_Post\": \"post\",\r\n        \"GeotaggingString_Zip\": \"zip\",\r\n        \"GeotaggingString_Code\": \"code\",\r\n        \"GeotaggingString_Place\": \"place\",\r\n        \"GeotaggingString_Places\": \"places\",\r\n        \"GeotaggingString_Address\": \"address\",\r\n        \"GeotaggingString_Addresses\": \"addresses\",\r\n        \"GeotaggingString_Street\": \"street\",\r\n        \"GeotaggingString_Streets\": \"streets\",\r\n        \"GeotaggingString_Longitude\": \"longitude\",\r\n        \"GeotaggingString_Longitude_Short\": \"lon\",\r\n        \"GeotaggingString_Longitude_Short2\": \"long\",\r\n        \"GeotaggingString_Latitude\": \"latitude\",\r\n        \"GeotaggingString_Latitude_Short\": \"lat\",\r\n        \"GeotaggingString_PostalCode\": \"postal code\",\r\n        \"GeotaggingString_PostalCodes\": \"postal codes\",\r\n        \"GeotaggingString_ZipCode\": \"zip code\",\r\n        \"GeotaggingString_ZipCodes\": \"zip codes\",\r\n        \"GeotaggingString_Territory\": \"territory\",\r\n        \"GeotaggingString_Territories\": \"territories\",\r\n    };\r\n    function beautify(format) {\r\n        let key = BeautifiedFormat[format];\r\n        if (key)\r\n            return defaultLocalizedStrings[key] || format;\r\n        return format;\r\n    }\r\n    function describeUnit(exponent) {\r\n        let exponentLookup = (exponent === -1) ? \"Auto\" : exponent.toString();\r\n        let title = defaultLocalizedStrings[\"DisplayUnitSystem_E\" + exponentLookup + \"_Title\"];\r\n        let format = (exponent <= 0) ? \"{0}\" : defaultLocalizedStrings[\"DisplayUnitSystem_E\" + exponentLookup + \"_LabelFormat\"];\r\n        if (title || format)\r\n            return { title: title, format: format };\r\n    }\r\n    function getLocalizedString(stringId) {\r\n        return defaultLocalizedStrings[stringId];\r\n    }\r\n    valueFormatter.getLocalizedString = getLocalizedString;\r\n    // NOTE: Define default locale options, but these can be overriden by setLocaleOptions.\r\n    let localizationOptions = {\r\n        nullValue: defaultLocalizedStrings[\"NullValue\"],\r\n        trueValue: defaultLocalizedStrings[\"BooleanTrue\"],\r\n        falseValue: defaultLocalizedStrings[\"BooleanFalse\"],\r\n        NaN: defaultLocalizedStrings[\"NaNValue\"],\r\n        infinity: defaultLocalizedStrings[\"InfinityValue\"],\r\n        negativeInfinity: defaultLocalizedStrings[\"NegativeInfinityValue\"],\r\n        beautify: format => beautify(format),\r\n        describe: exponent => describeUnit(exponent),\r\n        restatementComma: defaultLocalizedStrings[\"RestatementComma\"],\r\n        restatementCompoundAnd: defaultLocalizedStrings[\"RestatementCompoundAnd\"],\r\n        restatementCompoundOr: defaultLocalizedStrings[\"RestatementCompoundOr\"],\r\n    };\r\n    const MaxScaledDecimalPlaces = 2;\r\n    const MaxValueForDisplayUnitRounding = 1000;\r\n    const MinIntegerValueForDisplayUnits = 10000;\r\n    const MinPrecisionForDisplayUnits = 2;\r\n    const DateTimeMetadataColumn = {\r\n        displayName: \"\",\r\n        type: ValueType.fromPrimitiveTypeAndCategory(PrimitiveType.DateTime),\r\n    };\r\n    function getFormatMetadata(format) {\r\n        return NumberFormat.getCustomFormatMetadata(format);\r\n    }\r\n    valueFormatter.getFormatMetadata = getFormatMetadata;\r\n    function setLocaleOptions(options) {\r\n        localizationOptions = options;\r\n        DefaultDisplayUnitSystem.reset();\r\n        WholeUnitsDisplayUnitSystem.reset();\r\n    }\r\n    valueFormatter.setLocaleOptions = setLocaleOptions;\r\n    function createDefaultFormatter(formatString, allowFormatBeautification, cultureSelector) {\r\n        const formatBeautified = allowFormatBeautification\r\n            ? localizationOptions.beautify(formatString)\r\n            : formatString;\r\n        return {\r\n            format: function (value) {\r\n                if (value == null) {\r\n                    return localizationOptions.nullValue;\r\n                }\r\n                return formatCore({\r\n                    value,\r\n                    cultureSelector,\r\n                    format: formatBeautified\r\n                });\r\n            }\r\n        };\r\n    }\r\n    valueFormatter.createDefaultFormatter = createDefaultFormatter;\r\n    /** Creates an IValueFormatter to be used for a range of values. */\r\n    function create(options) {\r\n        const format = !!options.allowFormatBeautification\r\n            ? localizationOptions.beautify(options.format)\r\n            : options.format;\r\n        const { cultureSelector } = options;\r\n        if (shouldUseNumericDisplayUnits(options)) {\r\n            let displayUnitSystem = createDisplayUnitSystem(options.displayUnitSystemType);\r\n            let singleValueFormattingMode = !!options.formatSingleValues;\r\n            displayUnitSystem.update(Math.max(Math.abs(options.value || 0), Math.abs(options.value2 || 0)));\r\n            let forcePrecision = options.precision != null;\r\n            let decimals;\r\n            if (forcePrecision)\r\n                decimals = -options.precision;\r\n            else if (displayUnitSystem.displayUnit && displayUnitSystem.displayUnit.value > 1)\r\n                decimals = -MaxScaledDecimalPlaces;\r\n            return {\r\n                format: function (value) {\r\n                    let formattedValue = getStringFormat(value, true /*nullsAreBlank*/);\r\n                    if (!StringExtensions.isNullOrUndefinedOrWhiteSpaceString(formattedValue)) {\r\n                        return formattedValue;\r\n                    }\r\n                    // Round to Double.DEFAULT_PRECISION\r\n                    if (value\r\n                        && !displayUnitSystem.isScalingUnit()\r\n                        && Math.abs(value) < MaxValueForDisplayUnitRounding\r\n                        && !forcePrecision) {\r\n                        value = Double.roundToPrecision(value);\r\n                    }\r\n                    return singleValueFormattingMode\r\n                        ? displayUnitSystem.formatSingleValue(value, format, decimals, forcePrecision, cultureSelector)\r\n                        : displayUnitSystem.format(value, format, decimals, forcePrecision, cultureSelector);\r\n                },\r\n                displayUnit: displayUnitSystem.displayUnit,\r\n                options: options\r\n            };\r\n        }\r\n        if (shouldUseDateUnits(options.value, options.value2, options.tickCount)) {\r\n            const unit = DateTimeSequence.getIntervalUnit(options.value /* minDate */, options.value2 /* maxDate */, options.tickCount);\r\n            return {\r\n                format: function (value) {\r\n                    if (value == null) {\r\n                        return localizationOptions.nullValue;\r\n                    }\r\n                    let formatString = formattingService.dateFormatString(unit);\r\n                    return formatCore({\r\n                        value,\r\n                        cultureSelector,\r\n                        format: formatString,\r\n                    });\r\n                },\r\n                options: options\r\n            };\r\n        }\r\n        return createDefaultFormatter(format, false, cultureSelector);\r\n    }\r\n    valueFormatter.create = create;\r\n    function format(value, format, allowFormatBeautification, cultureSelector) {\r\n        if (value == null) {\r\n            return localizationOptions.nullValue;\r\n        }\r\n        const formatString = !!allowFormatBeautification\r\n            ? localizationOptions.beautify(format)\r\n            : format;\r\n        return formatCore({\r\n            value,\r\n            cultureSelector,\r\n            format: formatString\r\n        });\r\n    }\r\n    valueFormatter.format = format;\r\n    /**\r\n     * Value formatting function to handle variant measures.\r\n     * For a Date/Time value within a non-date/time field, it's formatted with the default date/time formatString instead of as a number\r\n     * @param {any} value Value to be formatted\r\n     * @param {DataViewMetadataColumn} column Field which the value belongs to\r\n     * @param {DataViewObjectPropertyIdentifier} formatStringProp formatString Property ID\r\n     * @param {boolean} nullsAreBlank? Whether to show \"(Blank)\" instead of empty string for null values\r\n     * @returns Formatted value\r\n     */\r\n    function formatVariantMeasureValue(value, column, formatStringProp, nullsAreBlank, cultureSelector) {\r\n        // If column type is not datetime, but the value is of time datetime,\r\n        // then use the default date format string\r\n        if (!(column && column.type && column.type.dateTime) && value instanceof Date) {\r\n            const valueFormat = getFormatString(DateTimeMetadataColumn, null, false);\r\n            return formatCore({\r\n                value,\r\n                nullsAreBlank,\r\n                cultureSelector,\r\n                format: valueFormat\r\n            });\r\n        }\r\n        else {\r\n            const valueFormat = getFormatString(column, formatStringProp);\r\n            return formatCore({\r\n                value,\r\n                nullsAreBlank,\r\n                cultureSelector,\r\n                format: valueFormat\r\n            });\r\n        }\r\n    }\r\n    valueFormatter.formatVariantMeasureValue = formatVariantMeasureValue;\r\n    function createDisplayUnitSystem(displayUnitSystemType) {\r\n        if (displayUnitSystemType == null)\r\n            return new DefaultDisplayUnitSystem(localizationOptions.describe);\r\n        switch (displayUnitSystemType) {\r\n            case DisplayUnitSystemType.Default:\r\n                return new DefaultDisplayUnitSystem(localizationOptions.describe);\r\n            case DisplayUnitSystemType.WholeUnits:\r\n                return new WholeUnitsDisplayUnitSystem(localizationOptions.describe);\r\n            case DisplayUnitSystemType.Verbose:\r\n                return new NoDisplayUnitSystem();\r\n            case DisplayUnitSystemType.DataLabels:\r\n                return new DataLabelsDisplayUnitSystem(localizationOptions.describe);\r\n            default:\r\n                return new DefaultDisplayUnitSystem(localizationOptions.describe);\r\n        }\r\n    }\r\n    valueFormatter.createDisplayUnitSystem = createDisplayUnitSystem;\r\n    function shouldUseNumericDisplayUnits(options) {\r\n        let value = options.value;\r\n        let value2 = options.value2;\r\n        let format = options.format;\r\n        // For singleValue visuals like card, gauge we don't want to roundoff data to the nearest thousands so format the whole number / integers below 10K to not use display units\r\n        if (options.formatSingleValues && format) {\r\n            if (Math.abs(value) < MinIntegerValueForDisplayUnits) {\r\n                let isCustomFormat = !NumberFormat.isStandardFormat(format);\r\n                if (isCustomFormat) {\r\n                    let precision = NumberFormat.getCustomFormatMetadata(format, true /*calculatePrecision*/).precision;\r\n                    if (precision < MinPrecisionForDisplayUnits)\r\n                        return false;\r\n                }\r\n                else if (Double.isInteger(value))\r\n                    return false;\r\n            }\r\n        }\r\n        if ((typeof value === \"number\") || (typeof value2 === \"number\")) {\r\n            return true;\r\n        }\r\n    }\r\n    function shouldUseDateUnits(value, value2, tickCount) {\r\n        // must check both value and value2 because we'll need to get an interval for date units\r\n        return (value instanceof Date) && (value2 instanceof Date) && (tickCount !== undefined && tickCount !== null);\r\n    }\r\n    /*\r\n        * Get the column format. Order of precendence is:\r\n        *  1. Column format\r\n        *  2. Default PowerView policy for column type\r\n        */\r\n    function getFormatString(column, formatStringProperty, suppressTypeFallback) {\r\n        if (column) {\r\n            if (formatStringProperty) {\r\n                let propertyValue = DataViewObjects.getValue(column.objects, formatStringProperty);\r\n                if (propertyValue)\r\n                    return propertyValue;\r\n            }\r\n            if (!suppressTypeFallback) {\r\n                let columnType = column.type;\r\n                if (columnType) {\r\n                    if (columnType.dateTime)\r\n                        return valueFormatter.DefaultDateFormat;\r\n                    if (columnType.integer) {\r\n                        if (columnType.temporal && columnType.temporal.year)\r\n                            return \"0\";\r\n                        return valueFormatter.DefaultIntegerFormat;\r\n                    }\r\n                    if (columnType.numeric)\r\n                        return valueFormatter.DefaultNumericFormat;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    valueFormatter.getFormatString = getFormatString;\r\n    function getFormatStringByColumn(column, suppressTypeFallback) {\r\n        if (column) {\r\n            if (column.format) {\r\n                return column.format;\r\n            }\r\n            if (!suppressTypeFallback) {\r\n                let columnType = column.type;\r\n                if (columnType) {\r\n                    if (columnType.dateTime) {\r\n                        return valueFormatter.DefaultDateFormat;\r\n                    }\r\n                    if (columnType.integer) {\r\n                        if (columnType.temporal && columnType.temporal.year) {\r\n                            return \"0\";\r\n                        }\r\n                        return valueFormatter.DefaultIntegerFormat;\r\n                    }\r\n                    if (columnType.numeric) {\r\n                        return valueFormatter.DefaultNumericFormat;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    valueFormatter.getFormatStringByColumn = getFormatStringByColumn;\r\n    function formatListCompound(strings, conjunction) {\r\n        let result;\r\n        if (!strings) {\r\n            return null;\r\n        }\r\n        let length = strings.length;\r\n        if (length > 0) {\r\n            result = strings[0];\r\n            let lastIndex = length - 1;\r\n            for (let i = 1, len = lastIndex; i < len; i++) {\r\n                let value = strings[i];\r\n                result = StringExtensions.format(localizationOptions.restatementComma, result, value);\r\n            }\r\n            if (length > 1) {\r\n                let value = strings[lastIndex];\r\n                result = StringExtensions.format(conjunction, result, value);\r\n            }\r\n        }\r\n        else {\r\n            result = null;\r\n        }\r\n        return result;\r\n    }\r\n    /** The returned string will look like 'A, B, ..., and C'  */\r\n    function formatListAnd(strings) {\r\n        return formatListCompound(strings, localizationOptions.restatementCompoundAnd);\r\n    }\r\n    valueFormatter.formatListAnd = formatListAnd;\r\n    /** The returned string will look like 'A, B, ..., or C' */\r\n    function formatListOr(strings) {\r\n        return formatListCompound(strings, localizationOptions.restatementCompoundOr);\r\n    }\r\n    valueFormatter.formatListOr = formatListOr;\r\n    function formatCore(options) {\r\n        const { value, format, nullsAreBlank, cultureSelector } = options;\r\n        let formattedValue = getStringFormat(value, nullsAreBlank ? nullsAreBlank : false);\r\n        if (!StringExtensions.isNullOrUndefinedOrWhiteSpaceString(formattedValue)) {\r\n            return formattedValue;\r\n        }\r\n        return formattingService.formatValue(value, format, cultureSelector);\r\n    }\r\n    function getStringFormat(value, nullsAreBlank) {\r\n        if (value == null && nullsAreBlank) {\r\n            return localizationOptions.nullValue;\r\n        }\r\n        if (value === true) {\r\n            return localizationOptions.trueValue;\r\n        }\r\n        if (value === false) {\r\n            return localizationOptions.falseValue;\r\n        }\r\n        if (typeof value === \"number\" && isNaN(value)) {\r\n            return localizationOptions.NaN;\r\n        }\r\n        if (value === Number.NEGATIVE_INFINITY) {\r\n            return localizationOptions.negativeInfinity;\r\n        }\r\n        if (value === Number.POSITIVE_INFINITY) {\r\n            return localizationOptions.infinity;\r\n        }\r\n        return \"\";\r\n    }\r\n    function getDisplayUnits(displayUnitSystemType) {\r\n        let displayUnitSystem = createDisplayUnitSystem(displayUnitSystemType);\r\n        return displayUnitSystem.units;\r\n    }\r\n    valueFormatter.getDisplayUnits = getDisplayUnits;\r\n})(valueFormatter || (valueFormatter = {}));\r\n//# sourceMappingURL=valueFormatter.js.map","const SPACE = \" \";\r\nconst BREAKERS_REGEX = /[\\s\\n]+/g;\r\nfunction search(index, content, backward) {\r\n    if (backward) {\r\n        for (let i = index - 1; i > -1; i--) {\r\n            if (hasBreakers(content[i]))\r\n                return i + 1;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = index, ilen = content.length; i < ilen; i++) {\r\n            if (hasBreakers(content[i]))\r\n                return i;\r\n        }\r\n    }\r\n    return backward ? 0 : content.length;\r\n}\r\n/**\r\n * Find the word nearest the cursor specified within content\r\n * @param index - point within content to search forward/backward from\r\n * @param content - string to search\r\n*/\r\nexport function find(index, content) {\r\n    let result = { start: 0, end: 0 };\r\n    if (content.length === 0) {\r\n        return result;\r\n    }\r\n    result.start = search(index, content, true);\r\n    result.end = search(index, content, false);\r\n    return result;\r\n}\r\n/**\r\n * Test for presence of breakers within content\r\n * @param content - string to test\r\n*/\r\nexport function hasBreakers(content) {\r\n    BREAKERS_REGEX.lastIndex = 0;\r\n    return BREAKERS_REGEX.test(content);\r\n}\r\n/**\r\n * Count the number of pieces when broken by BREAKERS_REGEX\r\n * ~2.7x faster than WordBreaker.split(content).length\r\n * @param content - string to break and count\r\n*/\r\nexport function wordCount(content) {\r\n    let count = 1;\r\n    BREAKERS_REGEX.lastIndex = 0;\r\n    BREAKERS_REGEX.exec(content);\r\n    while (BREAKERS_REGEX.lastIndex !== 0) {\r\n        count++;\r\n        BREAKERS_REGEX.exec(content);\r\n    }\r\n    return count;\r\n}\r\nexport function getMaxWordWidth(content, textWidthMeasurer, properties) {\r\n    let words = split(content);\r\n    let maxWidth = 0;\r\n    for (let w of words) {\r\n        properties.text = w;\r\n        maxWidth = Math.max(maxWidth, textWidthMeasurer(properties));\r\n    }\r\n    return maxWidth;\r\n}\r\nfunction split(content) {\r\n    return content.split(BREAKERS_REGEX);\r\n}\r\nfunction getWidth(content, properties, textWidthMeasurer) {\r\n    properties.text = content;\r\n    return textWidthMeasurer(properties);\r\n}\r\nfunction truncate(content, properties, truncator, maxWidth) {\r\n    properties.text = content;\r\n    return truncator(properties, maxWidth);\r\n}\r\n/**\r\n * Split content by breakers (words) and greedy fit as many words\r\n * into each index in the result based on max width and number of lines\r\n * e.g. Each index in result corresponds to a line of content\r\n *      when used by AxisHelper.LabelLayoutStrategy.wordBreak\r\n * @param content - string to split\r\n * @param properties - text properties to be used by @param:textWidthMeasurer\r\n * @param textWidthMeasurer - function to calculate width of given text content\r\n * @param maxWidth - maximum allowed width of text content in each result\r\n * @param maxNumLines - maximum number of results we will allow, valid values must be greater than 0\r\n * @param truncator - (optional) if specified, used as a function to truncate content to a given width\r\n*/\r\nexport function splitByWidth(content, properties, textWidthMeasurer, maxWidth, maxNumLines, truncator) {\r\n    // Default truncator returns string as-is\r\n    truncator = truncator ? truncator : (properties, maxWidth) => properties.text;\r\n    let result = [];\r\n    let words = split(content);\r\n    let usedWidth = 0;\r\n    let wordsInLine = [];\r\n    for (let word of words) {\r\n        // Last line? Just add whatever is left\r\n        if ((maxNumLines > 0) && (result.length >= maxNumLines - 1)) {\r\n            wordsInLine.push(word);\r\n            continue;\r\n        }\r\n        // Determine width if we add this word\r\n        // Account for SPACE we will add when joining...\r\n        let wordWidth = wordsInLine.length === 0\r\n            ? getWidth(word, properties, textWidthMeasurer)\r\n            : getWidth(SPACE + word, properties, textWidthMeasurer);\r\n        // If width would exceed max width,\r\n        // then push used words and start new split result\r\n        if (usedWidth + wordWidth > maxWidth) {\r\n            // Word alone exceeds max width, just add it.\r\n            if (wordsInLine.length === 0) {\r\n                result.push(truncate(word, properties, truncator, maxWidth));\r\n                usedWidth = 0;\r\n                wordsInLine = [];\r\n                continue;\r\n            }\r\n            result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\r\n            usedWidth = 0;\r\n            wordsInLine = [];\r\n        }\r\n        // ...otherwise, add word and continue\r\n        wordsInLine.push(word);\r\n        usedWidth += wordWidth;\r\n    }\r\n    // Push remaining words onto result (if any)\r\n    if (wordsInLine && wordsInLine.length) {\r\n        result.push(truncate(wordsInLine.join(SPACE), properties, truncator, maxWidth));\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=wordBreaker.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nexport class EphemeralStorageService {\r\n    constructor(clearCacheInterval) {\r\n        this.cache = {};\r\n        this.clearCacheInterval = (clearCacheInterval != null)\r\n            ? clearCacheInterval\r\n            : EphemeralStorageService.defaultClearCacheInterval;\r\n        this.clearCache();\r\n    }\r\n    getData(key) {\r\n        return this.cache[key];\r\n    }\r\n    setData(key, data) {\r\n        this.cache[key] = data;\r\n        if (this.clearCacheTimerId == null) {\r\n            this.clearCacheTimerId = setTimeout(() => this.clearCache(), this.clearCacheInterval);\r\n        }\r\n    }\r\n    clearCache() {\r\n        this.cache = {};\r\n        this.clearCacheTimerId = undefined;\r\n    }\r\n}\r\nEphemeralStorageService.defaultClearCacheInterval = (1000 * 60 * 60 * 24); // 1 day\r\nexport const ephemeralStorageService = new EphemeralStorageService();\r\n//# sourceMappingURL=ephemeralStorageService.js.map","/*\r\n*  Power BI Visualizations\r\n*\r\n*  Copyright (c) Microsoft Corporation\r\n*  All rights reserved.\r\n*  MIT License\r\n*\r\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n*  in the Software without restriction, including without limitation the rights\r\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n*  copies of the Software, and to permit persons to whom the Software is\r\n*  furnished to do so, subject to the following conditions:\r\n*\r\n*  The above copyright notice and this permission notice shall be included in\r\n*  all copies or substantial portions of the Software.\r\n*\r\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n*  THE SOFTWARE.\r\n*/\r\n// powerbi.extensibility.utils.type\r\nimport { pixelConverter as PixelConverter, prototype as Prototype } from \"powerbi-visuals-utils-typeutils\";\r\n// powerbi.extensibility.utils.formatting\r\nimport * as wordBreaker from \"./wordBreaker\";\r\nimport { ephemeralStorageService } from \"./storageService/ephemeralStorageService\";\r\nexport var textMeasurementService;\r\n(function (textMeasurementService) {\r\n    const ellipsis = \"...\";\r\n    let spanElement;\r\n    let svgTextElement;\r\n    let canvasCtx;\r\n    let fallbackFontFamily;\r\n    /**\r\n     * Idempotent function for adding the elements to the DOM.\r\n     */\r\n    function ensureDOM() {\r\n        if (spanElement) {\r\n            return;\r\n        }\r\n        spanElement = document.createElement(\"span\");\r\n        document.body.appendChild(spanElement);\r\n        // The style hides the svg element from the canvas, preventing canvas from scrolling down to show svg black square.\r\n        const svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svgElement.setAttribute(\"height\", \"0\");\r\n        svgElement.setAttribute(\"width\", \"0\");\r\n        svgElement.setAttribute(\"position\", \"absolute\");\r\n        svgTextElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\r\n        svgElement.appendChild(svgTextElement);\r\n        document.body.appendChild(svgElement);\r\n        let canvasElement = document.createElement(\"canvas\");\r\n        canvasCtx = canvasElement.getContext(\"2d\");\r\n        let style = window.getComputedStyle(svgTextElement);\r\n        if (style) {\r\n            fallbackFontFamily = style.fontFamily;\r\n        }\r\n        else {\r\n            fallbackFontFamily = \"\";\r\n        }\r\n    }\r\n    /**\r\n     * Removes spanElement from DOM.\r\n     */\r\n    function removeSpanElement() {\r\n        if (spanElement && spanElement.remove) {\r\n            spanElement.remove();\r\n        }\r\n        spanElement = null;\r\n    }\r\n    textMeasurementService.removeSpanElement = removeSpanElement;\r\n    /**\r\n     * This method measures the width of the text with the given SVG text properties.\r\n     * @param textProperties The text properties to use for text measurement.\r\n     * @param text The text to measure.\r\n     */\r\n    function measureSvgTextWidth(textProperties, text) {\r\n        ensureDOM();\r\n        canvasCtx.font =\r\n            (textProperties.fontStyle || \"\") + \" \" +\r\n                (textProperties.fontVariant || \"\") + \" \" +\r\n                (textProperties.fontWeight || \"\") + \" \" +\r\n                textProperties.fontSize + \" \" +\r\n                (textProperties.fontFamily || fallbackFontFamily);\r\n        return canvasCtx.measureText(text || textProperties.text).width;\r\n    }\r\n    textMeasurementService.measureSvgTextWidth = measureSvgTextWidth;\r\n    /**\r\n     * This method return the rect with the given SVG text properties.\r\n     * @param textProperties The text properties to use for text measurement.\r\n     * @param text The text to measure.\r\n     */\r\n    function measureSvgTextRect(textProperties, text) {\r\n        ensureDOM();\r\n        // Removes DOM elements faster than innerHTML\r\n        while (svgTextElement.firstChild) {\r\n            svgTextElement.removeChild(svgTextElement.firstChild);\r\n        }\r\n        svgTextElement.setAttribute(\"style\", null);\r\n        svgTextElement.style.visibility = \"hidden\";\r\n        svgTextElement.style.fontFamily = textProperties.fontFamily || fallbackFontFamily;\r\n        svgTextElement.style.fontVariant = textProperties.fontVariant;\r\n        svgTextElement.style.fontSize = textProperties.fontSize;\r\n        svgTextElement.style.fontWeight = textProperties.fontWeight;\r\n        svgTextElement.style.fontStyle = textProperties.fontStyle;\r\n        svgTextElement.style.whiteSpace = textProperties.whiteSpace || \"nowrap\";\r\n        svgTextElement.appendChild(document.createTextNode(text || textProperties.text));\r\n        // We're expecting the browser to give a synchronous measurement here\r\n        // We're using SVGTextElement because it works across all browsers\r\n        return svgTextElement.getBBox();\r\n    }\r\n    textMeasurementService.measureSvgTextRect = measureSvgTextRect;\r\n    /**\r\n     * This method measures the height of the text with the given SVG text properties.\r\n     * @param textProperties The text properties to use for text measurement.\r\n     * @param text The text to measure.\r\n     */\r\n    function measureSvgTextHeight(textProperties, text) {\r\n        return measureSvgTextRect(textProperties, text).height;\r\n    }\r\n    textMeasurementService.measureSvgTextHeight = measureSvgTextHeight;\r\n    /**\r\n     * This method returns the text Rect with the given SVG text properties.\r\n     * Does NOT return text width; obliterates text value\r\n     * @param {TextProperties} textProperties - The text properties to use for text measurement\r\n     */\r\n    function estimateSvgTextRect(textProperties) {\r\n        let propertiesKey = textProperties.fontFamily + textProperties.fontSize;\r\n        let rect = ephemeralStorageService.getData(propertiesKey);\r\n        if (rect == null) {\r\n            // To estimate we check the height of a particular character, once it is cached, subsequent\r\n            // calls should always get the height from the cache (regardless of the text).\r\n            let estimatedTextProperties = {\r\n                fontFamily: textProperties.fontFamily,\r\n                fontSize: textProperties.fontSize,\r\n                text: \"M\",\r\n            };\r\n            rect = textMeasurementService.measureSvgTextRect(estimatedTextProperties);\r\n            // NOTE: In some cases (disconnected/hidden DOM) we may provide incorrect measurement results (zero sized bounding-box), so\r\n            // we only store values in the cache if we are confident they are correct.\r\n            if (rect.height > 0)\r\n                ephemeralStorageService.setData(propertiesKey, rect);\r\n        }\r\n        return rect;\r\n    }\r\n    /**\r\n     * This method returns the text Rect with the given SVG text properties.\r\n     * @param {TextProperties} textProperties - The text properties to use for text measurement\r\n     */\r\n    function estimateSvgTextBaselineDelta(textProperties) {\r\n        let rect = estimateSvgTextRect(textProperties);\r\n        return rect.y + rect.height;\r\n    }\r\n    textMeasurementService.estimateSvgTextBaselineDelta = estimateSvgTextBaselineDelta;\r\n    /**\r\n     * This method estimates the height of the text with the given SVG text properties.\r\n     * @param {TextProperties} textProperties - The text properties to use for text measurement\r\n     */\r\n    function estimateSvgTextHeight(textProperties, tightFightForNumeric = false) {\r\n        let height = estimateSvgTextRect(textProperties).height;\r\n        // TODO: replace it with new baseline calculation\r\n        if (tightFightForNumeric)\r\n            height *= 0.7;\r\n        return height;\r\n    }\r\n    textMeasurementService.estimateSvgTextHeight = estimateSvgTextHeight;\r\n    /**\r\n     * This method measures the width of the svgElement.\r\n     * @param svgElement The SVGTextElement to be measured.\r\n     */\r\n    function measureSvgTextElementWidth(svgElement) {\r\n        return measureSvgTextWidth(getSvgMeasurementProperties(svgElement));\r\n    }\r\n    textMeasurementService.measureSvgTextElementWidth = measureSvgTextElementWidth;\r\n    /**\r\n     * This method fetches the text measurement properties of the given DOM element.\r\n     * @param element The selector for the DOM Element.\r\n     */\r\n    function getMeasurementProperties(element) {\r\n        const style = window.getComputedStyle(element);\r\n        return {\r\n            text: element.value || element.textContent,\r\n            fontFamily: style.fontFamily,\r\n            fontSize: style.fontSize,\r\n            fontWeight: style.fontWeight,\r\n            fontStyle: style.fontStyle,\r\n            fontVariant: style.fontVariant,\r\n            whiteSpace: style.whiteSpace\r\n        };\r\n    }\r\n    textMeasurementService.getMeasurementProperties = getMeasurementProperties;\r\n    /**\r\n     * This method fetches the text measurement properties of the given SVG text element.\r\n     * @param element The SVGTextElement to be measured.\r\n     */\r\n    function getSvgMeasurementProperties(element) {\r\n        let style = window.getComputedStyle(element);\r\n        if (style) {\r\n            return {\r\n                text: element.textContent,\r\n                fontFamily: style.fontFamily,\r\n                fontSize: style.fontSize,\r\n                fontWeight: style.fontWeight,\r\n                fontStyle: style.fontStyle,\r\n                fontVariant: style.fontVariant,\r\n                whiteSpace: style.whiteSpace\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                text: element.textContent,\r\n                fontFamily: \"\",\r\n                fontSize: \"0\",\r\n            };\r\n        }\r\n    }\r\n    textMeasurementService.getSvgMeasurementProperties = getSvgMeasurementProperties;\r\n    /**\r\n     * This method returns the width of a div element.\r\n     * @param element The div element.\r\n     */\r\n    function getDivElementWidth(element) {\r\n        const style = window.getComputedStyle(element);\r\n        if (style)\r\n            return style.width;\r\n        else\r\n            return \"0\";\r\n    }\r\n    textMeasurementService.getDivElementWidth = getDivElementWidth;\r\n    /**\r\n     * Compares labels text size to the available size and renders ellipses when the available size is smaller.\r\n     * @param textProperties The text properties (including text content) to use for text measurement.\r\n     * @param maxWidth The maximum width available for rendering the text.\r\n     */\r\n    function getTailoredTextOrDefault(textProperties, maxWidth) {\r\n        ensureDOM();\r\n        let strLength = textProperties.text.length;\r\n        if (strLength === 0) {\r\n            return textProperties.text;\r\n        }\r\n        let width = measureSvgTextWidth(textProperties);\r\n        if (width < maxWidth) {\r\n            return textProperties.text;\r\n        }\r\n        // Create a copy of the textProperties so we don't modify the one that's passed in.\r\n        let copiedTextProperties = Prototype.inherit(textProperties);\r\n        // Take the properties and apply them to svgTextElement\r\n        // Then, do the binary search to figure out the substring we want\r\n        // Set the substring on textElement argument\r\n        let text = copiedTextProperties.text = ellipsis + copiedTextProperties.text;\r\n        let min = 1;\r\n        let max = text.length;\r\n        let i = ellipsis.length;\r\n        while (min <= max) {\r\n            // num | 0 prefered to Math.floor(num) for performance benefits\r\n            i = (min + max) / 2 | 0;\r\n            copiedTextProperties.text = text.substr(0, i);\r\n            width = measureSvgTextWidth(copiedTextProperties);\r\n            if (maxWidth > width) {\r\n                min = i + 1;\r\n            }\r\n            else if (maxWidth < width) {\r\n                max = i - 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        // Since the search algorithm almost never finds an exact match,\r\n        // it will pick one of the closest two, which could result in a\r\n        // value bigger with than 'maxWidth' thus we need to go back by\r\n        // one to guarantee a smaller width than 'maxWidth'.\r\n        copiedTextProperties.text = text.substr(0, i);\r\n        width = measureSvgTextWidth(copiedTextProperties);\r\n        if (width > maxWidth) {\r\n            i--;\r\n        }\r\n        return text.substr(ellipsis.length, i - ellipsis.length) + ellipsis;\r\n    }\r\n    textMeasurementService.getTailoredTextOrDefault = getTailoredTextOrDefault;\r\n    /**\r\n     * Compares labels text size to the available size and renders ellipses when the available size is smaller.\r\n     * @param textElement The SVGTextElement containing the text to render.\r\n     * @param maxWidth The maximum width available for rendering the text.\r\n     */\r\n    function svgEllipsis(textElement, maxWidth) {\r\n        let properties = getSvgMeasurementProperties(textElement);\r\n        let originalText = properties.text;\r\n        let tailoredText = getTailoredTextOrDefault(properties, maxWidth);\r\n        if (originalText !== tailoredText) {\r\n            textElement.textContent = tailoredText;\r\n        }\r\n    }\r\n    textMeasurementService.svgEllipsis = svgEllipsis;\r\n    /**\r\n     * Word break textContent of <text> SVG element into <tspan>s\r\n     * Each tspan will be the height of a single line of text\r\n     * @param textElement - the SVGTextElement containing the text to wrap\r\n     * @param maxWidth - the maximum width available\r\n     * @param maxHeight - the maximum height available (defaults to single line)\r\n     * @param linePadding - (optional) padding to add to line height\r\n     */\r\n    function wordBreak(textElement, maxWidth, maxHeight, linePadding = 0) {\r\n        let properties = getSvgMeasurementProperties(textElement);\r\n        let height = estimateSvgTextHeight(properties) + linePadding;\r\n        let maxNumLines = Math.max(1, Math.floor(maxHeight / height));\r\n        // Save y of parent textElement to apply as first tspan dy\r\n        let firstDY = textElement ? textElement.getAttribute(\"y\") : null;\r\n        // Store and clear text content\r\n        let labelText = textElement ? textElement.textContent : null;\r\n        textElement.textContent = null;\r\n        // Append a tspan for each word broken section\r\n        let words = wordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\r\n        const fragment = document.createDocumentFragment();\r\n        for (let i = 0, ilen = words.length; i < ilen; i++) {\r\n            const dy = i === 0 ? firstDY : height;\r\n            properties.text = words[i];\r\n            const textElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\r\n            textElement.setAttribute(\"x\", \"0\");\r\n            textElement.setAttribute(\"dy\", dy ? dy.toString() : null);\r\n            textElement.appendChild(document.createTextNode(getTailoredTextOrDefault(properties, maxWidth)));\r\n            fragment.appendChild(textElement);\r\n        }\r\n        textElement.appendChild(fragment);\r\n    }\r\n    textMeasurementService.wordBreak = wordBreak;\r\n    /**\r\n     * Word break textContent of span element into <span>s\r\n     * Each span will be the height of a single line of text\r\n     * @param textElement - the element containing the text to wrap\r\n     * @param maxWidth - the maximum width available\r\n     * @param maxHeight - the maximum height available (defaults to single line)\r\n     * @param linePadding - (optional) padding to add to line height\r\n     */\r\n    function wordBreakOverflowingText(textElement, maxWidth, maxHeight, linePadding = 0) {\r\n        const properties = getSvgMeasurementProperties(textElement);\r\n        let height = estimateSvgTextHeight(properties) + linePadding;\r\n        let maxNumLines = Math.max(1, Math.floor(maxHeight / height));\r\n        // Store and clear text content\r\n        const labelText = textElement.textContent;\r\n        textElement.textContent = null;\r\n        // Append a span for each word broken section\r\n        const words = wordBreaker.splitByWidth(labelText, properties, measureSvgTextWidth, maxWidth, maxNumLines);\r\n        const fragment = document.createDocumentFragment();\r\n        for (let i = 0; i < words.length; i++) {\r\n            const span = document.createElement(\"span\");\r\n            span.classList.add(\"overflowingText\");\r\n            span.style.overflow = \"hidden\";\r\n            span.style.whiteSpace = \"nowrap\";\r\n            span.style.textOverflow = \"ellipsis\";\r\n            span.style.display = \"block\";\r\n            span.style.width = PixelConverter.toString(maxWidth);\r\n            span.appendChild(document.createTextNode(words[i]));\r\n            span.appendChild(document.createTextNode(getTailoredTextOrDefault(properties, maxWidth)));\r\n            fragment.appendChild(span);\r\n        }\r\n        textElement.appendChild(fragment);\r\n    }\r\n    textMeasurementService.wordBreakOverflowingText = wordBreakOverflowingText;\r\n})(textMeasurementService || (textMeasurementService = {}));\r\n//# sourceMappingURL=textMeasurementService.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nexport class FamilyInfo {\r\n    constructor(families) {\r\n        this.families = families;\r\n    }\r\n    /**\r\n     * Gets the first font \"wf_\" font family since it will always be loaded.\r\n     */\r\n    get family() {\r\n        return this.getFamily();\r\n    }\r\n    /**\r\n    * Gets the first font family that matches regex (if provided).\r\n    * Default regex looks for \"wf_\" fonts which are always loaded.\r\n    */\r\n    getFamily(regex = /^wf_/) {\r\n        if (!this.families) {\r\n            return null;\r\n        }\r\n        if (regex) {\r\n            for (let fontFamily of this.families) {\r\n                if (regex.test(fontFamily)) {\r\n                    return fontFamily;\r\n                }\r\n            }\r\n        }\r\n        return this.families[0];\r\n    }\r\n    /**\r\n     * Gets the CSS string for the \"font-family\" CSS attribute.\r\n     */\r\n    get css() {\r\n        return this.getCSS();\r\n    }\r\n    /**\r\n     * Gets the CSS string for the \"font-family\" CSS attribute.\r\n     */\r\n    getCSS() {\r\n        return this.families ? this.families.map((font => font.indexOf(\" \") > 0 ? `'` + font + `'` : font)).join(\", \") : null;\r\n    }\r\n}\r\n//# sourceMappingURL=familyInfo.js.map","/*\r\n *  Power BI Visualizations\r\n *\r\n *  Copyright (c) Microsoft Corporation\r\n *  All rights reserved.\r\n *  MIT License\r\n *\r\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\r\n *  in the Software without restriction, including without limitation the rights\r\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n *  copies of the Software, and to permit persons to whom the Software is\r\n *  furnished to do so, subject to the following conditions:\r\n *\r\n *  The above copyright notice and this permission notice shall be included in\r\n *  all copies or substantial portions of the Software.\r\n *\r\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n *  THE SOFTWARE.\r\n */\r\nimport { FamilyInfo } from \"./familyInfo\";\r\nexport const fallbackFonts = [\"helvetica\", \"arial\", \"sans-serif\"];\r\nexport const Family = {\r\n    light: new FamilyInfo(fallbackFonts),\r\n    semilight: new FamilyInfo(fallbackFonts),\r\n    regular: new FamilyInfo(fallbackFonts),\r\n    semibold: new FamilyInfo(fallbackFonts),\r\n    bold: new FamilyInfo(fallbackFonts),\r\n    lightSecondary: new FamilyInfo(fallbackFonts),\r\n    regularSecondary: new FamilyInfo(fallbackFonts),\r\n    boldSecondary: new FamilyInfo(fallbackFonts)\r\n};\r\n//# sourceMappingURL=family.js.map","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n\"use strict\";\n\nimport { dataViewObjectsParser } from \"powerbi-visuals-utils-dataviewutils\";\nimport DataViewObjectsParser = dataViewObjectsParser.DataViewObjectsParser;\nimport powerbi from \"powerbi-visuals-api\";\n\nexport class ExternalLinkVisualSettings extends DataViewObjectsParser {\n    public linkGeneralSettings: LinkGeneralSettings = new LinkGeneralSettings();\n    public linkImageSettings: LinkImageSettings = new LinkImageSettings();\n    public linkContentSettings: LinkContentSettings = new LinkContentSettings();\n    public linkBottomSettings: LinkBottomSettings = new LinkBottomSettings();\n}\n\nexport class LinkGeneralSettings {\n    public borderColor: string = \"#F2F2F2\";\n    public borderHoverColor: string = \"black\";\n    // public enableAnimation: boolean = false;\n    // public animationDuration: number = 100;\n}\n\nexport class LinkImageSettings {\n    public show: boolean = false;\n    public imageURL: string = \"https://www.w3schools.com/w3css/img_lights.jpg\";\n}\n\nexport class LinkContentSettings {\n    public link: string = \"\";\n    public linkTitle: string = \"\";\n    public linkHoverTitle: string = \"\";\n    public showLinkContent: boolean = false;\n    public linkContent: string = \"\";\n}\n\nexport class LinkBottomSettings {\n    public show: boolean = true;\n    public linkBottomText = \"Go to Report\";\n}\n\n","/*\n*  Power BI Visual CLI\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\n\"use strict\";\nimport powerbi from \"powerbi-visuals-api\";\nimport { select, Selection, BaseType } from 'd3-selection';\nimport { stringExtensions as StringExtensions } from 'powerbi-visuals-utils-formattingutils';\nimport \"d3-transition\";\n\nimport VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;\nimport VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;\nimport IVisual = powerbi.extensibility.visual.IVisual;\nimport IVisualHost = powerbi.extensibility.visual.IVisualHost;\nimport EnumerateVisualObjectInstancesOptions = powerbi.EnumerateVisualObjectInstancesOptions;\nimport VisualObjectInstance = powerbi.VisualObjectInstance;\nimport DataView = powerbi.DataView;\nimport VisualObjectInstanceEnumerationObject = powerbi.VisualObjectInstanceEnumerationObject;\n\nimport { ExternalLinkVisualSettings } from \"./settings\";\nexport class ExternalLinkVisual implements IVisual {\n    private target: HTMLElement;\n    private host: IVisualHost;\n    private linkVisualSettings: ExternalLinkVisualSettings;\n\n    private rootElement: Selection<BaseType, any, any, any>;\n    private topContentElement: Selection<BaseType, any, any, any>;\n    private middleContentElement: Selection<BaseType, any, any, any>;\n    private bottomContentElement: Selection<BaseType, any, any, any>;\n\n    constructor(options: VisualConstructorOptions) {\n        this.target = options.element;\n        this.host = options.host;\n    }\n\n    public update(options: VisualUpdateOptions) {\n        this.linkVisualSettings = ExternalLinkVisual.parseSettings(options && options.dataViews && options.dataViews[0]);\n\n        let linkGeneralSettings = this.linkVisualSettings.linkGeneralSettings;\n        let linkImageSettings = this.linkVisualSettings.linkImageSettings;\n        let linkContentSettings = this.linkVisualSettings.linkContentSettings;\n        let linkBottomSettings = this.linkVisualSettings.linkBottomSettings;\n        let linkTitle = \"\";\n\n        try {\n            if (this.rootElement) {\n                this.rootElement.remove();\n            }\n\n            if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(linkContentSettings.linkHoverTitle)) {\n                if (StringExtensions.isNullOrUndefinedOrWhiteSpaceString(linkContentSettings.link)) {\n                    linkTitle = \"Click here to go to nowhere\";\n                } else {\n                    linkTitle = \"Click here to go to \" + linkContentSettings.link;\n                }\n            } else {\n                linkTitle = linkContentSettings.linkHoverTitle;\n            }\n\n            this.rootElement = select(this.target).append(\"div\")\n                .classed(\"rootElement\", true)\n                .attr(\"title\", linkTitle)\n                .style(\"height\", \"100%\")\n                .style(\"width\", \"100%\")\n                .style(\"border\", linkGeneralSettings.borderColor)\n                .style(\"border-style\", \"solid\")\n                .style(\"border-width\", \"3px\")\n                .style(\"box-sizing\", \"border-box\");\n\n            if (linkImageSettings.show) {\n                this.topContentElement = this.rootElement.append(\"img\")\n                    .attr(\"src\", linkImageSettings.imageURL)\n                    .style(\"width\", \"100%\");\n            }\n\n            this.middleContentElement = this.rootElement.append(\"div\")\n                .style(\"padding\", \"20px\")\n                .style(\"margin\", 0)\n                .style(\"max-width\", \"100%\")\n                .style(\"left\", \"0px\");\n\n            this.middleContentElement.append(\"h2\")\n                .style(\"text-align\", \"start\")\n                // .style(\"padding\", \"20px\")\n                .style(\"margin\", 0)\n                // .style(\"width\", \"100%\")\n                // .style(\"left\", \"0px\")\n                .text(linkContentSettings.linkTitle);\n\n            if (linkContentSettings.showLinkContent) {\n                this.middleContentElement.append(\"p\")\n                    .text(linkContentSettings.linkContent);\n            }\n\n            if (linkBottomSettings.show) {\n                this.bottomContentElement = this.rootElement.append(\"div\")\n                    .classed(\"bottomLink\", true)\n                    .style(\"position\", \"absolute\")\n                    .style(\"bottom\", \"0\")\n                    .style(\"left\", \"0\")\n                    .style(\"width\", \"100%\")\n                    .style(\"max-width\", \"100%\");\n\n                this.bottomContentElement.append(\"p\")\n                    .attr(\"id\", \"bottomText\")\n                    .style(\"border-top\", linkGeneralSettings.borderColor)\n                    .style(\"border-top-style\", \"solid\")\n                    .style(\"border-top-width\", \"3px\")\n                    .style(\"padding-left\", \"20px\")\n                    .style(\"padding-top\", \"10px\")\n                    .text(linkBottomSettings.linkBottomText)\n                    .append(\"span\")\n                    .style(\"margin-left\", \"5px\")\n                    .text(\"🡭\");\n            }\n\n            this.rootElement.on(\"mouseover\", (data, i, elements) => {\n\n                select(elements[i])\n                    .style(\"border\", linkGeneralSettings.borderHoverColor)\n                    .style(\"border-style\", \"solid\")\n                    .style(\"border-width\", \"3px\");\n\n                this.bottomContentElement\n                    .select(\"#bottomText\")\n                    .style(\"border-top\", linkGeneralSettings.borderHoverColor)\n                    .style(\"border-top-style\", \"solid\")\n                    .style(\"border-top-width\", \"3px\");\n\n            })\n            .on(\"mouseout\", (data, i, elements) => {\n                select(elements[i])\n                    .style(\"border\", linkGeneralSettings.borderColor)\n                    .style(\"border-style\", \"solid\")\n                    .style(\"border-width\", \"3px\");\n\n                this.bottomContentElement\n                    .select(\"#bottomText\")\n                    .style(\"border-top\", linkGeneralSettings.borderColor)\n                    .style(\"border-top-style\", \"solid\")\n                    .style(\"border-top-width\", \"3px\");\n            })\n            .on(\"click\", () => {\n                if (!StringExtensions.isNullOrUndefinedOrWhiteSpaceString(linkContentSettings.link)) {\n                    this.host.launchUrl(linkContentSettings.link);\n                }\n            });\n\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    private static parseSettings(dataView: DataView): ExternalLinkVisualSettings {\n        return ExternalLinkVisualSettings.parse(dataView) as ExternalLinkVisualSettings;\n    }\n\n    /**\n     * This function gets called for each of the objects defined in the capabilities files and allows you to select which of the\n     * objects and properties you want to expose to the users in the property pane.\n     *\n     */\n    public enumerateObjectInstances(options: EnumerateVisualObjectInstancesOptions): VisualObjectInstance[] | VisualObjectInstanceEnumerationObject {\n        return ExternalLinkVisualSettings.enumerateObjectInstances(this.linkVisualSettings || ExternalLinkVisualSettings.getDefault(), options);\n    }\n}","import { ExternalLinkVisual } from \"../../src/visual\";\r\ndeclare var powerbi;\r\npowerbi.visuals = powerbi.visuals || {};\r\npowerbi.visuals.plugins = powerbi.visuals.plugins || {};\r\npowerbi.visuals.plugins[\"externalLinkC315CFE8D1E9496582BCD9F3B9E20D91\"] = {\r\n    name: 'externalLinkC315CFE8D1E9496582BCD9F3B9E20D91',\r\n    displayName: 'External Link',\r\n    class: 'ExternalLinkVisual',\r\n    version: '1.0.0',\r\n    apiVersion: '2.1.0',\r\n    create: (options) => {\r\n        if (ExternalLinkVisual) {\r\n            return new ExternalLinkVisual(options);\r\n        }\r\n\r\n        console.error('Visual instance not found');\r\n    },\r\n    custom: true\r\n};\r\n\r\nexport default powerbi;"],"sourceRoot":""}